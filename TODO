LEDGER  -*- mode: org; fill-column: 78 -*-

* Bugs
  :PROPERTIES:
  :CATEGORY: Bugs
  :END:
** TODO [#C] [[bug:207][#207]] No output to file in REPL with "push -o output.journal"
   - State "TODO"       from "WORKSFORME" [2011-08-05 Fri 14:10] \\
     Thierry confirms this still happens for him.
   - State "WORKSFORME" from "WAITING"    [2010-06-15 Tue 05:23]
   - State "WAITING"    from "STARTED"    [2010-06-10 Thu 04:54] \\
     To Thomas: I just tried this and it worked fine.  After your "push" command,
     does the prompt change to a ]]?
   :LOGBOOK:
   CLOCK: [2010-06-10 Thu 04:52]--[2010-06-10 Thu 04:54] =>  0:02
   :END:
   :PROPERTIES:
   :ID:       D6B17614-288D-44E5-99C2-569E020809C4
   :CREATED:  [2010-05-30 Sun 03:33]
   :END:
** TODO [[bug:362][#362]] bal --inject=Expected '^income:ceg' output is not correct
   #+begin_src sh
   ledger reg -s --inject=Expected '^income:ceg'
   #+end_src
   :OUTPUT:
   07-Jan-12 - 10-Jun-22           Expected                $200,044.36  $200,044.36
                                   Income:CEG:Holiday Pay   $-4,153.83  $195,890.53
                                   Income:CEG:Retro Pay     $-4,749.99  $191,140.54
                                   Income:CEG:Salary      $-191,140.54            0
   :END:
   #+begin_src sh
   bal --inject=Expected '^income:ceg'
   #+end_src
   :OUTPUT:
                      0  Income:CEG
             $-4,153.83    Holiday Pay
             $-4,749.99    Retro Pay
              $8,903.82    Salary
   --------------------
                      0
   :END:
   For some reason, in the balance reported the Expected account is being
   subsumed within the Income:CEG:Salary account.
   :PROPERTIES:
   :ID:       807D19BB-DCF3-4ADA-99CC-7480BADF687C
   :CREATED:  [2010-06-22 Tue 18:44]
   :END:
** TODO [[bug:370][#370]] Let time periods use "starting" to fix the exact start date
- Note taken on [2011-11-01 Tue 10:04] \\
  I tried "every 14 days" as suggested.  The results are a little better,
  but there still seems to be something off.  I tried the following
  command:
  
  :OUTPUT:
  $ ledger period every 14 days from 2011/10/03
  --- Period expression tokens ---
  TOK_EVERY: every
  TOK_INT: 14
  TOK_DAYS: days
  TOK_SINCE: since
  TOK_DATE:  year 2011 month Oct day 3
  END_REACHED: <EOF>
  
  --- Before stabilization ---
     range: from year 2011 month Oct day 3
  duration: 14 days
  
  --- After stabilization ---
     range: from year 2011 month Oct day 3
     start: 11-Oct-03
  duration: 14 days
  
  --- Sample dates in range (max. 20) ---
   1: 11-Oct-03 -- 11-Oct-08
   2: 11-Oct-09 -- 11-Oct-22
   3: 11-Oct-23 -- 11-Nov-05
   4: 11-Nov-06 -- 11-Nov-19
  :END:
  
  I tried for other start dates in october and it looks like the first
  period is always 6 days.
   This issue is related to #342.  Consider this entry:
   #+begin_src ledger
   ~ Biweekly from 2010/02/23
     Expenses:Bills:Housecleaning        $85.00
     Assets:Bank:OSU Fed:Checking
   #+end_src

   The biweekly period for this entry actually starts on the nearest Sunday
   before the start date, or 2/20.  However, sometimes people want the
   iteration to start exactly on the date specified.  This can be supported by
   the presence of a "starting" keyword:
   #+begin_src ledger
   ~ Biweekly starting from 2010/02/23
     Expenses:Bills:Housecleaning        $85.00
     Assets:Bank:OSU Fed:Checking
   #+end_src
   :PROPERTIES:
   :ID:       AAFAFBE7-E103-4CCC-82B9-6D28BC9052A3
   :CREATED:  [2010-07-01 Thu 16:41]
   :END:
** TODO [[bug:373][#373]] Change amount/total expr evaluation to use a priority queue
   - State "TODO"       from "STARTED"    [2011-10-15 Sat 21:13]
   At the moment, -X and -A cannot be mixed because they both work by changing
   the amount_expr.

   Instead, there should be a priority queue so that -X is first applied, then
   -A, as well as any other flags that want to modify the displayed amount.
   :PROPERTIES:
   :ID:       900BB5CD-F210-4530-98EA-8C2753572AE5
   :CREATED:  [2010-07-01 Thu 17:55]
   :END:
** TODO [[bug:376][#376]] ledger reg ^exp is showing Assets in a budget report
   This happens if the periodic transaction contain both Assets and Expenses.
   :PROPERTIES:
   :ID:       3806746F-6745-4D2F-BC8A-20B26F90C3B9
   :CREATED:  [2010-07-06 Tue 16:14]
   :END:
** TODO [[bug:387][#387]] There should be a simpler syntax for referring to past lots
   - Note taken on [2010-07-30 Fri 03:07] \\
     I was thinking about commodity valuations last night, and I realized
     there is fundamental detail which Ledger has no concept of right now: the
     finality of postings.

     There are postings which are "open", waiting to be "closed" on another
     day.  For example, if I get paid at work, I now have money that is
     waiting to be spent.  This money is "open", in the sense that it's future
     has not been determined.  It therefore has a fluctuating value based on
     the cost of the dollar.  It's a movement of funds *in transition* from
     one place to another.

     Other postings are final, like when I pay $20 to see a movie.  That $20
     is now finally and absolutely *spent*.  It has no future, with regard to
     my finances.  Whatever valuation the amount had on the day I saw the
     movie is the valuation it must always have.

     Reflecting on this, it seems that Income/Expenses are by nature final
     categories, while Assets/Liabilities are open.  Then again, sometimes
     there are individual postings which should be considered final, even
     though their parent account is not by rule.

     To accomodate this detail (which some have tried to express through
     fixated commodities), I suggest the following additional syntax:

       final REGEXP

         Any accounting matching REGEXP is considered a final category.
         Postings which move amounts into or from these accounts will always
         show amounts in terms of the posting's value at that time.

     In addition, if a period (.) is found at the end of a posting's amount or
     cost, the amount of that posting is considered final:

       Expenses:Food        $20.00.

     Internally, this usage would be modelled using fixated commodities.  The
     $ would get annotated with the date of the posting, and then any use of
     -V or -X would constrain the valuation to that date.  If multiple
     commodities occur in the transaction, then a fixed price is automatically
     set as well.
   - Note taken on [2010-07-29 Thu 03:05] \\
     22:26 < johnw> something easy like KRW#A, where A is defined in an
         unambiguous way
     22:26 < johnw> like a metadata tag in the transaction

     Couldn't this be achieved with the existing (Note) syntax that can be
     used to define arbitrary notes for lots?
   - Note taken on [2010-07-24 Sat 04:30] \\
     Later: [[message://20100720082626.GA29263@jirafa.cyrius.com][Re: Our discussion on IRC today]]
   :PROPERTIES:
   :ID:       B0808272-25FC-4606-9E80-FB5485FE412A
   :Submitter: Martin Michlmayr <tbm@cyrius.com>
   :Message:  [[message://20100719230158.GA26275@jirafa.cyrius.com][Our discussion on IRC today]]
   :CREATED:  [2010-07-20 Tue 00:15]
   :END:
** TODO [[bug:392][#392]] Reporting multiple commodities with -J
   :PROPERTIES:
   :ID:       5590D50E-F380-4D76-8BAD-71B2A77346FB
   :Submitter: Gabriel Kerneis <kerneis@pps.jussieu.fr>
   :Message:  [[message://20100730074700.GA3033@kerneis.info][Reporting multiple commodities with -J]]
   :CREATED:  [2010-07-30 Fri 06:08]
   :END:
** DONE [[bug:394][#394]] Weekly report and monthly report (possible bug)
- State "DONE"       from "TODO"       [2012-02-28 Tue 02:36] \\
  Fixed by 6adfcc8
- Note taken on [2012-02-28 Tue 00:16] \\
  #+begin_src sh
  ledger -p "apr 2011" reg Expenses -X '$'   
  #+end_src
  :OUTPUT:
  11-Apr-01 serveraxis.com            Expenses:Computer:Internet             $15.00          $15.00
                                      Expenses:Computer:Internet              $1.10          $16.10
  11-Apr-05 Pennsylvania toll booth   Expenses:Auto:Fees                     $13.00          $29.10
                                      Expenses:Cash                         $-13.00          $16.10
  11-Apr-05 iTunes                    Expenses:Music                          $1.29          $17.39
                                      Expenses:Taxes:Sales                    $0.09          $17.48
  11-Apr-19 iTunes                    Expenses:Computer:Software              $4.99          $22.47
                                      Expenses:Taxes:Sales                    $0.35          $22.82
  11-Apr-24 iTunes                    Expenses:Movies                         $1.99          $24.81
                                      Expenses:Movies                         $2.99          $27.80
                                      Expenses:Taxes:Sales                    $0.35          $28.15
  11-Apr-29 iTunes                    Expenses:Computer:Movies                $0.99          $29.14
                                      Expenses:Taxes:Sales                    $0.07          $29.21
  :END:

  #+begin_src sh
  ledger -M -p "apr 2011" reg Expenses -X '$'
  #+end_src
  :OUTPUT:
  11-Apr-01 - 11-Apr-29               Expenses:Auto:Fees                     $13.00          $13.00
                                      Expenses:Cash                         $-13.00               0
                                      Expenses:Computer:Internet             $16.10          $16.10
                                      Expenses:Computer:Movies                $0.99          $17.09
                                      Expenses:Computer:Software              $4.99          $22.08
                                      Expenses:Movies                         $4.98          $27.06
                                      Expenses:Music                          $1.29          $28.35
                                      Expenses:Taxes:Sales                    $0.86          $29.21
  :END:
  
  #+begin_src sh
  ledger -W -p "apr 2011" reg Expenses -X '$'
  #+end_src
  :OUTPUT:
  11-Apr-01 - 11-Apr-02               Expenses:Computer:Internet             $16.10          $16.10
  11-Apr-15 - 11-Apr-21               Expenses:Computer:Software              $4.99          $21.09
                                      Expenses:Taxes:Sales                    $0.35          $21.44
  11-Apr-22 - 11-Apr-28               Expenses:Movies                         $4.98          $26.42
                                      Expenses:Taxes:Sales                    $0.35          $26.77
  11-Apr-29 - 11-Apr-29               Expenses:Computer:Movies                $0.99          $27.76
                                      Expenses:Taxes:Sales                    $0.07          $27.83
  :END:
  
  #+begin_src sh
  ledger -E -W -p "apr 2011" reg Expenses -X '$'
  #+end_src
  :OUTPUT:
  11-Apr-01 - 11-Apr-02               Expenses:Computer:Internet             $16.10          $16.10
  11-Apr-03 - 11-Apr-09               Expenses:Computer:Software              $4.99          $21.09
  11-Apr-10 - 11-Apr-16               Expenses:Taxes:Sales                    $0.35          $21.44
  11-Apr-17 - 11-Apr-23               Expenses:Movies                         $1.99          $23.43
  11-Apr-24 - 11-Apr-30               Expenses:Movies                         $2.99          $26.42
  11-Apr-24 - 11-Apr-29               Expenses:Computer:Movies                $0.99          $27.41
                                      Expenses:Taxes:Sales                    $0.42          $27.83
  :END:
I am using Ledger 3.0.0-20100615 and I guess I found a bug.

I ran the commands bellow on July 30.

#+begin_src sh
ledger -M -s -p "this month" reg Bakery Work Supermarket Vindinha Fuel
#+end_src
:OUTPUT:
10-Jul-01 - 10-Jul-31   Expenses:Car:Fuel              $199.01      $199.01
                        Expenses:Foods:Bakery          $126.20      $325.21
                        Expenses:Foods:Work            $432.54      $757.75
                        Expenses:Supermarket           $380.23     $1137.98
:END:

But when I ran the command bellow I had got this results:

#+begin_src sh
ledger -W -p "this month" reg Bakery Work Supermarket Vindinha Fuel
#+end_src
:OUTPUT:
10-Jul-01 - 10-Jul-03   Expenses:Foods:Bakery   $31.00       $31.00
                        Expenses:Foods:Work     $29.69       $60.69
10-Jul-08 - 10-Jul-14   Expenses:Car:Fuel       $35.00       $95.69
                        Expenses:Foods:Bakery   $31.50      $127.19
                        Expenses:Foods:Work     $65.53      $192.72
                        Expenses:Supermarket    $94.29      $287.01
10-Jul-15 - 10-Jul-21   Expenses:Car:Fuel       $59.01      $346.02
                        Expenses:Foods:Bakery   $11.00      $357.02
                        Expenses:Foods:Work    $136.10      $493.12
                        Expenses:Supermarket    $66.66      $559.78
10-Jul-22 - 10-Jul-28   Expenses:Car:Fuel       $20.00      $579.78
                        Expenses:Foods:Bakery   $40.90      $620.68
                        Expenses:Foods:Work    $112.65      $733.33
                        Expenses:Supermarket    $98.17      $831.50
10-Jul-29 - 10-Jul-31   Expenses:Car:Fuel       $30.00      $861.50
                        Expenses:Foods:Bakery    $7.30      $868.80
                        Expenses:Foods:Work     $35.99      $904.79
:END:

The days between 2010/07/04 and 2010/07/07 do not appear in the report. So I
ran this:

#+begin_src sh
ledger -b 2010/07/04 -e 2010/07/07 reg  Bakery Work Supermarket Vindinha Fuel
#+end_src
:OUTPUT:
10-Jul-04 Portal Imperatriz  Expenses:Car:Fuel      $15.00       $15.00
10-Jul-04 Marche             Expenses:Supermarket   $25.49       $40.49
10-Jul-04 Marche             Expenses:Supermarket   $80.62      $121.11
10-Jul-05 Extra Facil        Expenses:Supermarket   $15.00      $136.11
10-Jul-05 Funchal Grill      Expenses:Foods:Work    $12.87      $148.98
10-Jul-05 Padaria Moema      Expenses:Foods:Bakery   $4.50      $153.48
10-Jul-06 Vilachic Funchal   Expenses:Foods:Work    $17.90      $171.38
10-Jul-06 Posto Jucelino     Expenses:Car:Fuel      $20.00      $191.38
:END:

I didn't get the amount difference between the other two reports above.  So I
tried:

#+begin_src sh
ledger -b 2010/07/04 -e 2010/07/08 reg  Bakery Work Supermarket Vindinha Fuel
#+end_src
:OUTPUT:
10-Jul-04 Portal Imperatriz       Expenses:Car:Fuel      $15.00       $15.00
10-Jul-04 Marche                  Expenses:Supermarket   $25.49       $40.49
10-Jul-04 Marche                  Expenses:Supermarket   $80.62      $121.11
10-Jul-05 Extra Facil             Expenses:Supermarket   $15.00      $136.11
10-Jul-05 Funchal Grill           Expenses:Foods:Work    $12.87      $148.98
10-Jul-05 Padaria Moema           Expenses:Foods:Bakery   $4.50      $153.48
10-Jul-06 Vilachic Funchal        Expenses:Foods:Work    $17.90      $171.38
10-Jul-06 Posto Jucelino          Expenses:Car:Fuel      $20.00      $191.38
10-Jul-07 Viena Shopping Vila..   Expenses:Foods:Work    $21.81      $213.19
10-Jul-07 Posto Caminho Brade..   Expenses:Car:Fuel      $20.00      $233.19
:END:

I got the exact difference between the first and the second reports:
$1137.98 - $904.79 = $ $233.19.

So, I guess this is not the normal behavior expected by the second report
(weekly report).
:PROPERTIES:
:ID:       F06D5554-425C-4E4E-A8B4-3CF29E07AA1E
:Submitter: Leandro Henrique Oliveira Fernandes <leandroohf@gmail.com>
:Message:  [[message://AANLkTimSSZPgYKQR6U2oZ7uaJtXBdTYF%2BmCn_3SXatko@mail.gmail.com][weekly report and monthly report (Is it a BUG?)]]
:CREATED:  [2010-08-01 Sun 18:55]
:END:
** TODO [[bug:403][#403]] --budget ignores "Yearly in August"-type transactions
   :PROPERTIES:
   :ID:       B9CC8CD3-71EA-40DC-AAE6-EA59FA57B5D6
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-403-1@http.newartisans.com/bugzilla/][{Bug 403} New: --budget ignores "Yearly in August"-type transactions]]
   :CREATED:  [2010-08-30 Mon 18:27]
   :END:
** TODO [[bug:411][#411]] Refrain from downloading a quote if can't get newer
   :PROPERTIES:
   :ID:       1AB29C8F-B661-4D47-8B80-E785E480D97B
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-411-1@http.newartisans.com/bugzilla/][{Bug 411} New: refrain from downloading a quote if can't get newer]]
   :CREATED:  [2010-10-03 Sun 22:19]
   :END:
** TODO [[bug:415][#415]] Order of budget entries is significant
   The order of budget entries is important.  The following budget:
   #+begin_src ledger
   ~ Monthly
      Assets
      Expenses         $200.00
      Expenses:Food    $100.00
      Expenses:Health   $20.00
   #+end_src
   is *invalid*! Any Expenses:Food or Expenses:Health posting will match the
   first Expenses. The proper budget looks like this:
   #+begin_src ledger
   ~ Monthly
      Expenses:Health   $20.00
      Expenses:Food    $100.00
      Expenses         $200.00
      Assets
   #+end_src

   To sort budget elements always use reversed order (sort -r), this assures
   that child accounts always come before thier parents (e.g. Expenses:Food
   before Expenses).
   :PROPERTIES:
   :ID:       A355D63D-8D76-434A-BA7E-D44C97200B26
   :Submitter: Łukasz Stelmach <lukasz.stelmach@iem.pw.edu.pl>
   :Message:  [[message://87bp7ulmx4.fsf@kotik.lan][{NOTE} order of budget entries is important]]
   :CREATED:  [2010-09-19 Sun 14:43]
   :END:
** TODO [[bug:416][#416]] Not all past prices are repeatable or valid for future exchanges
   Essentially this means that some links in the graph are not as reliable as
   others.  For example, say I was able to buy a certain commodity on a past
   day for $10.  It may be that this was an exclusive deal that can't ever
   repeat.  Dave suggested looking at the Boost.Graph library for modeling the
   complexity of this problem.
   :PROPERTIES:
   :ID:       3915D7F9-E69D-46F4-972E-C16DDEF90164
   :CREATED:  [2010-09-17 Fri 23:00]
   :END:
** TODO [[bug:433][#433]] Possible issue with Balanced automated transactions
   Let's say I've got a ledger file like this:
   #+begin_src ledger
   = /^Income:Salary:BigCorp/
      Expense:Tax                                         400,00 €
      Expense:Pension                                     100,00 €

   2010-03-03 BigCorp
      Income:Salary:BigCorp                             -2000,00 €
      Assets:Checking

   2010-04-03 BigCorp
      Income:Salary:BigCorp                             -2000,00 €
      Assets:Checking
   #+end_src
   :OUTPUT:
   $ ledger -f ~/Money/salary.dat print
   :END:
   yields
   :OUTPUT:
   2010-03-03 BigCorp
      Income:Salary:BigCorp               -2000,00 €
      Assets:Checking                      1500,00 €
      Expense:Tax                           400,00 €
      Expense:Pension                       100,00 €

   2010-04-03 BigCorp
      Income:Salary:BigCorp               -2000,00 €
      Assets:Checking                      1500,00 €
      Expense:Tax                           400,00 €
      Expense:Pension                       100,00 €
   :END:
   balance and register output look reasonable too.  What's even more
   interesting is that with transaction of this form:
   #+begin_src ledger
   2010-04-03 BigCorp
      Income:Salary:BigCorp
      Assets:Checking                                   -2000,00 €
   #+end_src
   The fees are as if added and the Income is increased, exactly as I would
   expect it (Income is -2500 and Assets is 2000). But why
   :OUTPUT:
   $ ledger --actual -f ~/Money/salary.dat print
   2010-03-03 BigCorp
      Income:Salary:BigCorp               -2000,00 €
      Assets:Checking                      1500,00 €

   2010-04-03 BigCorp
      Income:Salary:BigCorp               -2000,00 €
      Assets:Checking                      1500,00 €
   :END:
   subtracts tax and superannuation without printing them?  Is it a bug or
   I've missed something in the documentation?
   :PROPERTIES:
   :ID:       CD835715-9FF8-464E-9806-A5F641D43046
   :Submitter: Łukasz Stelmach <lukasz.stelmach@iem.pw.edu.pl>
   :Message:  [[message://87hbhmlsab.fsf@kotik.lan][balanced automated transaction]]
   :CREATED:  [2010-09-19 Sun 14:43]
   :END:
** TODO [[bug:434][#434]] Problem with the new --anon and speed-test.dat
   - Note taken on [2010-11-26 Fri 18:43] \\
     This command generates the problem:
     :OUTPUT:
     ledger --args-only --file=ledger/test/input/speed-test.dat --decimal-comma --anon print
     :END:
   I tried to "ledger --anon print > new-speed-test.dat" and I found that
   there is a bug in "--anon".

   When currency CUR appears 1st time, this is anonymized to A.
   When currency CUR appears 2nd time, this is anonymized to A.
   When commodity COM appears 1st time, this is anonymized to B.
   When commodity COM appears 2nd time, this is anonymized to C. <-- bug here
   :PROPERTIES:
   :ID:       500F3A63-69F9-4E40-8A88-9121D24F3FB5
   :CREATED:  [2010-11-26 Fri 13:15]
   :END:
** TODO [[bug:439][#439]] Ledger does not correctly sort balance of anonymized data
   - Note taken on [2010-12-27 Mon 18:27] \\
     [[message://AANLkTikxjUwSPLMLpY%2BomL0A1TNJgCr1n37eM2Zqqq9G@mail.gmail.com][Re: ledger: balance sorting bug]]
   I came across a bug where ledger does not sort the balance output.  I used
   test files that are in ledger/test directory.  First example does work.
   Second example does work.
   :OUTPUT:
   $ ledger --args-only --file ~/ledger/test/input/drewr.dat balance --flat --sort=total
           $ -5,200.00  X
           $ -2,000.00  X
           $ -1,000.00  X
              $ -30.00  X
              $ -20.00  X
               $ 20.00  X
               $ 30.00  X
              $ 200.00  X
              $ 300.00  X
              $ 334.00  X
              $ 500.00  X
            $ 1,396.00  X
            $ 5,500.00  X
   --------------------
                     0
   :END:
   :OUTPUT:
   $ ledger --args-only --file ~/ledger/test/input/speed-test.dat balance --decimal-comma --exchange=€ --flat --sort=total | head
           -27330,09 €  X
             -403,53 €  X
               -0,11 €  X
              687,56 €  X
             -146,85 €  X
           136034,33 €  X
            33452,82 €  X
            10083,56 €  X
            10405,79 €  X
            62282,60 €  X
   :END:
   :PROPERTIES:
   :ID:       D65D80C9-623A-4F18-96A9-936ED4399AC6
   :Submitter: Thierry Daucourt <thierry.daucourt@free.fr>
   :Message:  [[message://AANLkTikwx%2B-AQQrjQ62nm__P0BAwaNB4WRKF4bPc2Bfj@mail.gmail.com][ledger: balance sorting bug]]
   :CREATED:  [2010-10-18 Mon 16:04]
   :END:
** DONE [[bug:448][#448]] Only one posting with null amount allowed because of note
- State "DONE"       from "TODO"       [2012-02-28 Tue 02:47] \\
  Fixed by 7a55c7f
I've noticed that adding a note to a periodic entry without specifying the
redundant transaction values produces a null amount error:
:OUTPUT:
# this works fine:
$ cat /tmp/sample
~ monthly
  ; note
  assets:checking  $1,000.00
  income:work:salary   -$1,000.00

$ ledger --forecast "d<[2011]" reg -f /tmp/sample
10-Dec-01 Forecast transaction  assets:checking           $1,000.00
$1,000.00
10-Dec-01 Forecast transaction  income:work:salary
$-1,000.00            0
:END:
:OUTPUT:
# removing the redundant info from the entry breaks it for some reason:
$ cat /tmp/sample
~ monthly
  ; note
  assets:checking  $1,000.00
  income:work:salary

$ ledger --forecast "d<[2011]" reg -f /tmp/sample
While parsing file "/tmp/sample", line 4:
While parsing periodic transaction:
> ~ monthly
>   ; note
>   assets:checking  $1,000.00
>   income:work:salary
Error: Only one posting with null amount allowed per transaction
:END:
:OUTPUT:
# this works without notes:
$ cat /tmp/sample
~ monthly
  assets:checking  $1,000.00
  income:work:salary

$ ledger --forecast "d<[2011]" reg -f /tmp/
sample
10-Dec-01 Forecast transaction  assets:checking           $1,000.00
$1,000.00
10-Dec-01 Forecast transaction  income:work:salary
$-1,000.00            0
:END:

:OUTPUT:
$ ledger --version
Ledger 3.0.0-20100623, the command-line accounting tool
:END:

I expect all three cases to not fail with an error.
:PROPERTIES:
:ID:       CFE5D8AA-1060-4A7D-816D-42F72C444118
:Submitter: Michael Ploujnikov <ploujj@gmail.com>
:Message:  [[message://a065e461-e06e-45e0-aa39-aec74b13c864@l32g2000yqc.googlegroups.com][Error: Only one posting with null amount allowed per transaction because of note]]
:CREATED:  [2010-11-28 Sun 20:33]
:END:
** DONE [[bug:454][#454]] Rename actual and effective dates to primary/auxiliary
- State "DONE"       from "TODO"       [2012-02-28 Tue 03:07]
   :PROPERTIES:
   :ID:       43ACF050-6723-41D6-BC3A-B3672AD7C2B7
   :CREATED:  [2010-12-14 Tue 17:54]
   :END:
** TODO [[bug:455][#455]] Free shares & --exchange & --total-data
   :PROPERTIES:
   :ID:       E0DAC7C0-471E-4A45-A341-1F29F4670A98
   :Submitter: thierry <thierry.daucourt@free.fr>
   :Message:  [[message://845bd74e-8d33-43c5-9668-87ee9fe334d5@q18g2000vbm.googlegroups.com][free shares & --exchange & --total-data]]
   :CREATED:  [2010-12-06 Mon 12:41]
   :END:
** TODO [[bug:457][#457]] Comma parsing problem
   :PROPERTIES:
   :ID:       F2C4AB15-D0DE-4917-AC45-8DCB0D4C117D
   :Submitter: Andrew Stribblehill <stribb@gmail.com>
   :Message:  [[message://AANLkTinfypuh_Q%2BKkbEJaWBGh637C%3D%2BSDR95ZiwLL8cP@mail.gmail.com][Comma parsing problem]]
   :CREATED:  [2010-11-28 Sun 20:33]
   :END:
** TODO [[bug:458][#458]] Spaces seem to be significant in automatic transaction predicate
   :PROPERTIES:
   :ID:       605A410D-FBBE-4089-84B1-452473325994
   :Submitter: Zack Williams <zdwzdw@gmail.com>
   :Message:  [[message://AANLkTikJrn5v4zPezXvmedNDoE-DfoTfUpgMw7QuwcPg@mail.gmail.com][Re: Automatic transactions only for certain entry amounts]]
   :CREATED:  [2010-12-29 Wed 17:42]
   :END:
** TODO [[bug:459][#459]] Expression-based automatic transaction predicate not working
   :PROPERTIES:
   :ID:       29BE8505-CAE7-40E6-85F8-4D91DB524DB8
   :Submitter: Zack Williams <zdwzdw@gmail.com>
   :Message:  [[message://AANLkTin1k5DdW_Ctc0d_WsBb%2BxnPLBUs6%3DA11VdhX8d4@mail.gmail.com][Re: Automatic transactions only for certain entry amounts]]
   :CREATED:  [2010-12-29 Wed 17:42]
   :END:
** TODO [[bug:469][#469]] Account / commodity periodic gain question
   :PROPERTIES:
   :ID:       9DB996BD-2E83-49F4-AF11-8EC5CA3927DE
   :Message:  [[message://AANLkTikcQ-9Aifi3c6a-tUHSr2tcqbxh2c_dxUb4cY8k@mail.gmail.com][Re: Account / commodity periodic gain]]
   :CREATED:  [2011-01-13 Thu 23:09]
   :END:
** TODO [[bug:470][#470]] Period support and forecast reports
   :PROPERTIES:
   :ID:       0A606F26-9B6F-44A1-8C25-72D9E3E68297
   :Message:  [[message://17302579.215.1294968238136.JavaMail.geo-discussion-forums@yqep2][Period support and forecast reports]]
   :CREATED:  [2011-01-13 Thu 23:10]
   :END:
** DONE [[bug:476][#476]] alias does not work across !include
- State "DONE"       from "TODO"       [2012-02-28 Tue 03:08]
   :PROPERTIES:
   :ID:       13A2FCDF-6A62-4EC3-AC7A-A5F26B333065
   :CREATED:  [2011-02-09 Wed 14:39]
   :Message:  [[message://bug-476-1@http.newartisans.com/bugzilla/][{Bug 476} New: alias does not work across !include]]
   :END:
** TODO [[bug:477][#477]] Ledger print command does not handle GnuCash Capital Gain Split
   :PROPERTIES:
   :ID:       61E2AF09-F622-4DAF-B1A5-7B10478F883E
   :CREATED:  [2011-02-10 Thu 16:22]
   :Message:  [[message://bug-477-1@http.newartisans.com/bugzilla/][{Bug 477} New: Ledger print command does not handle GnuCash Capital Gain Split]]
   :END:
** TODO [[bug:480][#480]] Ledger budget expressions failing?
   :PROPERTIES:
   :ID:       3E3A32F2-7DDB-4EAC-AEA0-9CE7ED2963B9
   :CREATED:  [2011-02-17 Thu 21:09]
   :Message:  [[message://bug-480-1@http.newartisans.com/bugzilla/][{Bug 480} New: ledger budget expressions failing?]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Thu, 17 Feb 2011 15:15:13 -0600 (CST)
   :END:
** TODO [[bug:482][#482]] Commodity cost basis does not transfer across different accounts
   :PROPERTIES:
   :ID:       BDAE1EE5-B352-443C-BDD6-A135C93B94F0
   :CREATED:  [2011-02-23 Wed 23:55]
   :Message:  [[message://87de5636-c9d2-4a0c-b155-4d27512429cc@x4g2000prf.googlegroups.com][Re: commodity cost basis does not transfer across different accounts]]
   :Submitter: daniel <daniel.puleo@gmail.com>
   :Date:     Tue, 22 Feb 2011 22:48:20 -0800 (PST)
   :END:
** TODO [[bug:483][#483]] House accounts
   :PROPERTIES:
   :ID:       1B608006-F9CB-4467-B23D-A3CA420EED0D
   :CREATED:  [2011-02-23 Wed 23:56]
   :Message:  [[message://B8AC3F3F-A851-4C47-BB4B-CFFACB2C4E3E@gmail.com][Re: House accounts]]
   :Submitter: Felix Ingram <f.ingram.lists@gmail.com>
   :Date:     Tue, 22 Feb 2011 19:04:48 +0000
   :END:
** TODO [[bug:484][#484]] Sorting problem concerning amounts and -X
   :PROPERTIES:
   :ID:       B07F66BD-80FB-4AA9-8AF1-0BB403C8C760
   :CREATED:  [2011-02-09 Wed 14:27]
   :Message:  [[message://807813.1344.1296903400080.JavaMail.geo-discussion-forums@prfp36][Is this expected sorting behavior?]]
   :END:
** TODO [[bug:487][#487]] Multiple file-level balance assertions for the same account conflict
   :PROPERTIES:
   :ID:       727D00DC-1EAA-462C-8D64-2CE3DA1B8B7B
   :CREATED:  [2011-02-24 Thu 15:03]
   :Message:  [[message://bug-487-1@http.newartisans.com/bugzilla/][{Bug 487} New: multiple file-level balance assertions for same account conflict ?]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Thu, 24 Feb 2011 14:02:36 -0600 (CST)
   :END:
** TODO [[bug:488][#488]] amount_t::floor does not really floor, it rounds to nearest
   There should be a round() function for round-to-nearest, and a floor()
   function that rounds toward zero.  The latter is especially needed for tax
   accounting.
   :PROPERTIES:
   :ID:       BA184B3C-6BC0-4717-8C02-D00CD255D15E
   :CREATED:  [2011-03-05 Sat 17:50]
   :END:
** TODO [[bug:489][#489]] Confusion about a few things
   - Note taken on [2011-02-28 Mon 01:33] \\
     So, there are three types of parent accounts in accounting: Assets,
     Liabilities, Equity

     First, just to clear up a common misunderstanding, debit and credit
     simply mean left and right.  Without context, that doesn't mean
     positive or negative.

     Assets have a normal debit (dr) balance, while liabilities and equity
     have a credit (cr) balances.  That means that an asset account with a
     debit balance would be positive while a liability account with a
     credit balance would be positive.

     A balance sheet is an implementation of the concept that what you own
     must equal how you bought it.  Ie.

     Assets = (Liabilities + Equity)

     Or put another way:

     My Stuff = How did I buy it?
     My Stuff = Money I've borrowed + Profit I've accumulated

     So one of the many internal checks in accounting is that this equation
     is always holding true, if it's not then you have a problem (note:
     this in addition to dr=cr, there are scenarios where dr=cr and the
     balance sheet is not equaling).

     So, expenses and revenue are "temporary equity" accounts.    The idea
     is that during a period (like say a month), you accumulate revenue
     into the revenue accounts and expenses in the expense accounts.  When
     you "close" the period (you set those back to zero) and place the
     accumulated balance into an equity account.  For instance, say you
     have 1000 of revenue in January and 500 of expenses.  Let's say you
     are closing the account for January and staring February.  You would
     produce an entry like this:

     2011/2/1 Closing Entry
        Revenue                                         1000
        Expenses                                                                500
        Equity                                                                  500

     (I'm simplifying, you in the above scenario, I'm assuming there is
     only one revenue and expense account, but the idea is you close ALL
     revenue and expense accounts -- the balance to make that entry equal
     will be that periods profit/loss)

     Aside:
     ~~
     There is no such thing as an income account.  Based on some examples,
     I knew you meant revenue, but they're not the same thing.  Income is
     (some) revenue minus (some) expense.  Which revenue and expense
     accounts you include depend on what type of income you are trying to
     report (net, gross, etc).

     Anyhow, I know you need to support backwards compatibility, but you
     really should at least allow both "Revenue:" and "Income:" (with your
     program knowing they are, in your case, the same thing), then fix the
     manual.
     ~~

     If you were taking an intro accounting course, the instructor would
     tell you that there is a very specific order to producing financials.
     First you produce the income statement, cash flow, *then you close*
     (so revenue and expenses will be zero), then you produce the balance
     sheet.  In practice, you do that for external reports, but you can't
     close every-time you need a balance sheet, so you place the temporary
     accounts under their respective sections.

     So, let's make up numbers:

     Assets:

     Cash                       1000
     A/R                        200
     A. for B/D         (50)

     Total Assets:      1150

     Liabilities:

     Credit Card           50

     Total Liabilities  50

     Equity:
     Revenue            200
     Bad Debt Ex  (50)
     Owners' Eq 950

     Total Equity:      1100

     Some people will also place the liabilities and equity in the right
     side of the page, with the assets on the left.  I'm not sure that's
     necessary as long as they are properly broken up.

     So, let's go through a few of these numbers. Cash is an asset account,
     it has a positive number because it has a debit balance.  Allowance of
     bad debt is also an asset account (it is actually a special type of
     asset account called a contra account), but it has a credit balance so
     it has a negative number.  Revenue has a credit balance, but because
     it is a type of equity account that is a positive number.  Bad debt
     expense has a debit balance which means it has a negative number.

     If you were to close for the period, the Equity section would be
     simplified to :

     Equity:
     Owners' Eq 1100

     Total Equity:      1100

     There's also a specific order that accounts should be listed; but I
     think that might be expecting too much.  So, the big items are:

     * Revenue and Expenses are type of equity account
     * Equity + Liabilities must equal Assets
     * Equity and Liabilities have credit balances
     * Assets have debit balances
   Ok, so I want to apologize, I went to b-school, so small stupid things
   might be bothering me.  I dumped about 50 transactions into a file and
   did the balance sheet command on it:

   Assets:Checking
   Expenses
        Ads
        Apps
        Hosting
        Phone
        Processing
   Income
        Credit Cards:PayPal
        Pre Payments
        Google Checkout
        PayPal

   So, from what I can tell, ledger does two things that seem strange to
   me; (please correct me if I'm just not understanding what it's doing),
   it seems to represent credit balances (right column) with a negative
   number.  Second it doesn't seem to know that expenses and income are
   equity accounts (you manual says you can use Expenses and Income --
   which I assumed means that they are linked/aliased/whatever as
   children of equity) and such should be grouped together.

   Also, again small thing, but on a balance sheet assets, liabilities
   and equity really should be totalled (even if their zero).  Ideally
   there should be forming break between them as well (Also negative and
   credit balance isn't really the same thing -- it would look really
   weird to show revenue as negative number).
   :PROPERTIES:
   :ID:       96364A1A-7E35-4EB8-A63D-BA801A684661
   :CREATED:  [2011-02-28 Mon 01:33]
   :Message:  [[message://54325f64-3471-4c6f-a92a-ab316342b1af@x4g2000prf.googlegroups.com][Confusion about a few things]]
   :Submitter: tazz_ben <ben@wbpsystems.com>
   :Date:     Sat, 26 Feb 2011 17:52:37 -0800 (PST)
   :END:
** WONTFIX [[bug:490][#490]] Pull request: Next [jwiegley/ledger GH-22]
- State "WONTFIX"    from "TODO"       [2012-02-28 Tue 03:08]
   :PROPERTIES:
   :ID:       AE12485D-BD34-4DC3-8938-CBDF34560EB6
   :CREATED:  [2011-02-28 Mon 01:32]
   :Message:  [[message://jwiegley/ledger/pull/22@github.com][{GitHub} Next {jwiegley/ledger GH-22}]]
   :Submitter: cypok <noreply@github.com>
   :Date:     Sun, 27 Feb 2011 01:58:04 -0800
   :END:
** TODO [[bug:491][#491]] Automated postings match differently
   :PROPERTIES:
   :ID:       0C605FC2-BBD2-41EC-9842-EA2A79473C12
   :CREATED:  [2011-03-07 Mon 15:15]
   :Message:  [[message://bug-491-1@http.newartisans.com/bugzilla/][{Bug 491} New: Automated postings match differently]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Mon,  7 Mar 2011 14:14:39 -0600 (CST)
   :END:
** TODO [[bug:492][#492]] Running totals computed using the wrong precision
   :PROPERTIES:
   :ID:       CAE63F5C-CA90-45D1-943D-FD772DCDDF56
   :CREATED:  [2011-03-09 Wed 13:57]
   :Message:  [[message://bug-492-1@http.newartisans.com/bugzilla/][{Bug 492} New: Running totals computed using the wrong precision]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Wed,  9 Mar 2011 10:12:27 -0600 (CST)
   :END:
** TODO [[bug:493][#493]] Precision specified with D being ignored
   :PROPERTIES:
   :ID:       6333E3DF-433A-4B91-B744-FBAED702B12C
   :CREATED:  [2011-03-11 Fri 14:22]
   :Message:  [[message://bug-493-1@http.newartisans.com/bugzilla/][{Bug 493} New: precision specified with D being ignored]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Fri, 11 Mar 2011 13:12:20 -0600 (CST)
   :END:
** TODO [[bug:494][#494]] Problem using German date format
   :PROPERTIES:
   :ID:       56392A55-B755-4222-882F-81FED69A9C5D
   :CREATED:  [2011-03-07 Mon 14:49]
   :Message:  [[message://06e69798-2ec2-4519-93ab-77814660bc8e@dn9g2000vbb.googlegroups.com][Problem using German date format]]
   :Submitter: Michael Strecke <michael.strecke@googlemail.com>
   :Date:     Mon, 7 Mar 2011 03:00:36 -0800 (PST)
   :END:
** TODO [[bug:499][#499]] Getting quotes?
   :PROPERTIES:
   :ID:       3CA48C37-C35A-4329-AC18-1B8F786816A5
   :CREATED:  [2011-03-26 Sat 15:24]
   :Message:  [[message://87zkoims81.fsf@facilitatedsystems.com][Getting quotes?]]
   :Submitter: Bill Harris <bill_harris@facilitatedsystems.com>
   :Date:     Fri, 25 Mar 2011 21:16:30 -0700
   :END:
** TODO [[bug:504][#504]] Forecast doesn't include current month's budget
   :PROPERTIES:
   :ID:       745317A8-9D4F-433C-86B6-61C9794FDF0C
   :CREATED:  [2011-04-05 Tue 04:32]
   :Message:  [[message://bug-504-1@http.newartisans.com/bugzilla/][{Bug 504} New: Forecast doesn't include current month's budget]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Mon,  4 Apr 2011 09:14:10 -0500 (CDT)
   :END:
** TODO [[bug:505][#505]] Ampersand in GnuCash transaction creates conversion problem
   :PROPERTIES:
   :ID:       D567247E-F077-40E2-BE9A-C010593DD796
   :CREATED:  [2011-04-20 Wed 18:04]
   :Message:  [[message://bug-505-1@http.newartisans.com/bugzilla/][{Bug 505} New: Ampersand in GnuCash transaction creates conversion problem]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Mon, 18 Apr 2011 15:57:32 -0500 (CDT)
   :END:
** DONE [[bug:506][#506]] Loss of data in weekly report
- State "DONE"       from "TODO"       [2012-02-28 Tue 03:11]
   :PROPERTIES:
   :ID:       F514E031-CA81-481F-BC3A-254D61A7CFA5
   :CREATED:  [2011-04-27 Wed 22:22]
   :Message:  [[message://bug-506-1@http.newartisans.com/bugzilla/][{Bug 506} New: lost of data in weekly report]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Wed, 27 Apr 2011 20:25:57 -0500 (CDT)
   :END:
** TODO [[bug:507][#507]] Reproducible crash
   :PROPERTIES:
   :ID:       AB57BA68-83A0-491A-8423-F4A821F2FBD2
   :CREATED:  [2011-05-10 Tue 09:03]
   :Message:  [[message://bug-507-1@http.newartisans.com/bugzilla/][{Bug 507} New: Reproducible crash]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Sun,  8 May 2011 16:47:14 -0500 (CDT)
   :END:
** TODO [[bug:511][#511]] ledger and currency format in entry command
   - Note taken on [2011-05-27 Fri 18:08] \\
     I had some problem recently too. It looks like the `entry' command now
     takes the first matching entry in the file as a template instead of the
     last like it did before. I gave a bit more detailed description of my
     observation here:

     http://article.gmane.org/gmane.comp.finance.ledger.general/2561
   Since my last update, the command entry now produces the wrong entry value
   regardless what decimal separator (comma or dot) I use.
   :OUTPUT:
   $ ledger -f BR01.dat entry 05/13 Salsa 12.00 Cash

   2011/05/13 Salsalito
       Expenses:Restaurante                       1.200
       Assets:Cash

   $ ledger -f BR01.dat entry 05/13 Salsa 12,00 Cash

   2011/05/13 Salsalito
       Expenses:Restaurante                       1.200
       Assets:Cash
   :END:
   :PROPERTIES:
   :ID:       0831AC52-90BA-44EF-B39C-FD2F20ABC5BC
   :CREATED:  [2011-05-27 Fri 18:07]
   :Date:     Sun, 22 May 2011 17:21:30 -0700 (PDT)
   :Message:  [[message://16932293.4231.1306110091000.JavaMail.geo-discussion-forums@vbjl31][Re: ledger and currency format in entry command]]
   :Submitter: Alexandre Rademaker <arademaker@gmail.com>
   :END:
** TODO [[bug:512][#512]] --cache does nothing
   > Yes, --cache does nothing.  Binary serialization using Boost is the same
   > speed
   >
   > in most cases as plain text parsing, so I saw no point.  Plus, ever faster
   > computers -- plus SSDs -- make this an option with diminishing returns.

   That's a good point. I suggest printing an error message or warning instead
   of silently ignoring --cache then.
   :PROPERTIES:
   :ID:       57A6BD14-0506-4A50-A45B-A7BDF07EAFBA
   :CREATED:  [2011-05-27 Fri 18:08]
   :Date:     Mon, 23 May 2011 18:17:27 -0700 (PDT)
   :Message:  [[message://30671703.170.1306199847233.JavaMail.geo-discussion-forums@prcm34][Re: My experience with Ledger so far]]
   :Submitter: Matthew Harris <mharris312@gmail.com>
   :END:
** TODO [[bug:513][#513]] --comm-as-payee (-x) is unrecognized
   > > - --comm-as-payee (-x) is unrecognized. Does this have a new syntax in
   > > the current version?
   >
   > --payee=comm, although the old option should still work.  Bug.

   Ah. --payee=commodity and --payee=code work, but --payee=comm says "Unknown
   identifier 'comm'".
   :PROPERTIES:
   :ID:       5FBA9B5B-CFAD-42C4-AB65-AB44A7282659
   :CREATED:  [2011-05-27 Fri 18:09]
   :Date:     Mon, 23 May 2011 18:17:27 -0700 (PDT)
   :Message:  [[message://30671703.170.1306199847233.JavaMail.geo-discussion-forums@prcm34][Re: My experience with Ledger so far]]
   :Submitter: Matthew Harris <mharris312@gmail.com>
   :END:
** TODO [[bug:514][#514]] 'accounts' and 'commodities' should sort their output
   I'd also like to suggest that 'accounts' and 'commodities' sort their
   output, like 'payees' appears to. I don't see a reason to leave it unsorted.
   :PROPERTIES:
   :ID:       0EA1B52E-43D8-4577-87AE-CB837C8E9B32
   :CREATED:  [2011-05-27 Fri 18:10]
   :Date:     Mon, 23 May 2011 18:17:27 -0700 (PDT)
   :Message:  [[message://30671703.170.1306199847233.JavaMail.geo-discussion-forums@prcm34][Re: My experience with Ledger so far]]
   :Submitter: Matthew Harris <mharris312@gmail.com>
   :END:
** TODO [[bug:515][#515]] Pull request: Vim: Support for payee completion and caching
   :PROPERTIES:
   :ID:       831633A9-8863-47E9-8950-FFE4CEBDA19F
   :CREATED:  [2011-05-10 Tue 09:02]
   :Message:  [[message://jwiegley/ledger/pull/26@github.com][{ledger} Vim: support for payee completion and caching (#26)]]
   :Submitter: kljohann <reply+i-872387-1d5f6dec35c9a2898adf1e68bf46b277d2008891@reply.github.com>
   :Date:     Mon, 9 May 2011 11:07:19 -0700
   :END:
** TODO [[bug:517][#517]] Strange balance reports
   Both ledger (20100615) and hledger show the zero balances of a and b in
   this balance report - I expected them to be elided by default:
   #+begin_src sh
   2010/1/1
   a   16$ @@ 10€
   b   -10€

   2010/1/2
   a   -16$
   b   10€ @@ 16$
   #+end_src
   :OUTPUT:
   $$$ ledger -f - balance
                  0  a
                  0  b
   --------------------
                  0
   :END:
   With -B, again ledger and hledger agree, but I'm puzzled - usually -B
   results in fewer commodities in the output, not more:
   #+begin_src sh
   2010/1/1
   a   16$ @@ 10€
   b   -10€

   2010/1/2
   a   -16$
   b   10€ @@ 16$
   #+end_src
   :OUTPUT:
   $$$ ledger -f - balance
   >>>
               -16$
                10€  a
                16$
               -10€  b
   --------------------
                  0
   :END:
   This time with implicit conversion prices - strange output:
   #+begin_src sh
   2010/1/1
   a   16$
   b   -10€

   2010/1/2
   a   -16$
   b   10€
   #+end_src
   :OUTPUT:
   $$$ ledger -f - balance
                  0  a
   :END:
   :PROPERTIES:
   :ID:       B1953314-4573-4DB4-AFDD-ED745290CCE5
   :CREATED:  [2011-04-23 Sat 05:03]
   :Message:  [[message://2673402D-97F9-4E5D-8057-57DF2C2B01B0@joyful.com][strange balance reports]]
   :Submitter: Simon Michael <simon@joyful.com>
   :Date:     Thu, 21 Apr 2011 06:53:45 -0700
   :END:
** TODO [[bug:518][#518]] Weekly report lost data?
   I have been using ledger version 3.0.0-20110325.  I ran the command
   below:
   :OUTPUT:
   $ ledger -p "weekly this month" reg Foods
   11-Apr-01 - 11-Apr-02           Expenses:Foods:Work $1.00        $1.00
   11-Apr-08 - 11-Apr-14           Expenses:Foods:Work $7.00        $8.00
   11-Apr-15 - 11-Apr-21           Expenses:Foods:Work $1.00        $9.00
   :END:
   I noted that I lost all transaction of the period: 11-Apr-03 until 11-
   Apr-07. As you can see in the report:
   :OUTPUT:
   $ ledger -p "this month" reg Foods
   11-Apr-01 Portucho              Expenses:Foods:Work $1.00        $1.00
   11-Apr-03 Portucho              Expenses:Foods:Work $1.00        $2.00
   11-Apr-04 Mineiro               Expenses:Foods:Work $1.00        $3.00
   11-Apr-05 Sta Madalena          Expenses:Foods:Work $1.00        $4.00
   11-Apr-06 Sta Madalena          Expenses:Foods:Work $1.00        $5.00
   11-Apr-07 Sta Madalena          Expenses:Foods:Work $1.00        $6.00
   11-Apr-08 Natural               Expenses:Foods:Work $1.00        $7.00
   11-Apr-10 Center                Expenses:Foods:Work $1.00        $8.00
   11-Apr-11 Natural               Expenses:Foods:Work $1.00        $9.00
   11-Apr-11 Bela Emila            Expenses:Foods:Work $1.00       $10.00
   11-Apr-12 Xavier e Sena         Expenses:Foods:Work $1.00       $11.00
   11-Apr-13 Sta Madalena          Expenses:Foods:Work $1.00       $12.00
   11-Apr-14 Sta Madalena          Expenses:Foods:Work $1.00       $13.00
   11-Apr-15 Xavier e Sena         Expenses:Foods:Work $1.00       $14.00
   :END:
   Is this the expected behaviour for the option -p "weekly this month"?
   :PROPERTIES:
   :ID:       393CAB58-46DE-4FD7-8E7C-EAEAE8DEEDD7
   :CREATED:  [2011-04-20 Wed 18:01]
   :Message:  [[message://29846561-b2be-4e61-af03-4d6b0c9413bb@r6g2000vbz.googlegroups.com][Weekly report lost data?]]
   :Submitter: leandroohf <leandroohf@gmail.com>
   :Date:     Sun, 17 Apr 2011 14:46:34 -0700 (PDT)
   :END:
** TODO [[bug:519][#519]] ledger reg expr 'code > 100' breaks
   :OUTPUT:
   Hermes ~/src/ledger $ ./ledger reg expr 'code > 100'
   While parsing value expression:
     (code > {100})

   Error: Unexpected expression token '{'
   :END:
   :PROPERTIES:
   :ID:       6B7C2D8A-6620-44C3-B8C1-3A897F84604E
   :CREATED:  [2011-04-20 Wed 19:33]
   :END:
** TODO [[bug:530][#530]] Problem with "N" command
   :PROPERTIES:
   :ID:       3CA7A9F1-F4B6-457C-AAE8-D1AF24813D5C
   :CREATED:  [2011-06-09 Thu 01:24]
   :END:
   I thought the "N" command was just supposed to tell Ledger not to download
   the given commodity (because I invented the symbol), but it turns out also
   to exclude printing its price with the prices command, which isn't what I
   wanted. I do want to track the price of the commodity, especially because I
   can't just look up the symbol online.
** TODO [[bug:531][#531]] Balance assertions broken when combined with fixed commodities
   #+begin_src ledger
   2000/01/01 A
    Assets  100 STOCK {$1}
    Income
   2000/02/01 B
    Assets2
    Assets  = 0 STOCK {$1}
   #+end_src

   This yields the error, "Error: Subtracting amounts with different
   commodities: STOCK != STOCK". I've worked around this by removing the price
   from the balance calculation.
   :PROPERTIES:
   :ID:       D5F21DC3-1F16-4FAE-A196-6C19883B9229
   :CREATED:  [2011-06-09 Thu 01:23]
   :END:
** TODO [[bug:532][#532]] Every N days problem in budgeting
   I tried to set up a periodic entry for biweekly pay periods to compare
   budgeted income to actual income, with the pay periods starting on a
   certain day in a certain month, like this:
   #+begin_src ledger
   ~ every 14 days from 2011/03/25
   #+end_src

   This is working except that when running a command like
   #+begin_src sh
   ledger register --sort d -b "January 01 2011" -e "June 31 2011" Income.*Me --add-budget -f my_ledger.dat
   #+end_src
   there is a budget entry for 2011/03/25 then another for 2011/03/31 then the
   14 days continues fine but offset by that second hiccup entry, even
   crossing later month boundaries.
   :PROPERTIES:
   :ID:       9C1486DD-13E7-4341-8B83-60F958F714AA
   :CREATED:  [2011-06-14 Tue 13:52]
   :Date:     Fri, 10 Jun 2011 09:51:22 -0700 (PDT)
   :Message:  [[message://7337691.1034.1307724682642.JavaMail.geo-discussion-forums@prmu4][every N days problem in budgeting]]
   :Submitter: Anatortoise House <anatortoise@gmail.com>
   :END:
** TODO [[bug:533][#533]] Trailing entry going past the forecast period
   Two questions about forecasts (please see the sample script and output
   below):

   - Why is a trailing forecast entry (that doesn't balance) going over the
     forecast period generated? The manual seems to indicate this is to show
     the total somehow (section 2.9.2: "A final transaction is always output,
     to show you what the total afterwards would be."). But I can already see
     the running total of register entries using the last register entry
     _within_ the forecast period, right? This additional entry causes issues
     with calculations of running totals for the forecast period (by including
     the out of the forecast period trailing entry).

   - It seems the balance command when run with forecasts but without
     specifying an account regex doesn't include forecast entries in the
     calculation.  Shouldn't it? Notice that you can get around this by doing
     a "bal ^" which will match all transactions, but then you get the last
     trailing non-balanced transaction mentioned above included, making the
     calculation include entries that shouldn't be there.

   Using ledger 2.6.2.

   Script:
   #+begin_src sh
   #!/bin/sh

   cat > ledger.dat <<EOF
   ~ Monthly
    Income:Salary           -100.00
    Assets:Checking

   06-01 Start
    Equity                    -1.00
    Assets:Checking
   EOF

   ledger -f ledger.dat --forecast 'd < [september]' reg; echo
   ledger -f ledger.dat --forecast 'd < [september]' -s bal; echo
   ledger -f ledger.dat --forecast 'd < [september]' -s bal ^
   #+end_src

   Output:
   :OUTPUT:
   + cat
   + ledger -f ledger.dat --forecast 'd < [september]' reg
   2011/06/01 Start                Equity
   -1.00        -1.00
                                   Assets:Checking
   1.00            0
   2011/07/01 Forecast entry       Income:Salary
   -100.00      -100.00
   2011/07/01 Forecast entry       Assets:Checking
   100.00            0
   2011/08/01 Forecast entry       Income:Salary
   -100.00      -100.00
   2011/08/01 Forecast entry       Assets:Checking
   100.00            0
   2011/09/01 Forecast entry       Income:Salary
   -100.00      -100.00
   + echo

   # Notice that the balance below does not contain forecast entries,
   despite forecasting being specified:

   + ledger -f ledger.dat --forecast 'd < [september]' -s bal
                 101.00  Assets:Checking
                  -1.00  Equity
                -100.00  Income:Salary
   + echo

   # Notice that the balance below includes the 2011/09/01 non-balanced
   trailing entry, making the running total not sum up and include
   entries from outside the forecast period:

   + ledger -f ledger.dat --forecast 'd < [september]' -s bal '^'
                 201.00  Assets:Checking
                  -1.00  Equity
                -300.00  Income:Salary
   --------------------
                -100.00
   :END:
   :PROPERTIES:
   :ID:       9D99B5FB-1A24-464B-8044-6008354816E8
   :CREATED:  [2011-06-14 Tue 13:53]
   :Date:     Fri, 10 Jun 2011 06:10:23 -0700 (PDT)
   :Message:  [[message://02a1b2dd-2a45-4b76-8a87-4fc014193cb0@16g2000yqy.googlegroups.com][Trailing entry going past the forecast period]]
   :Submitter: Seppo Sade <sepposade1@gmail.com>
   :END:
** TODO [[bug:534][#534]] account_amount is listed on the man page, but is not supported
   :PROPERTIES:
   :ID:       FEDA301C-A3F0-4E5A-9C79-754E2E0DDFE3
   :CREATED:  [2011-06-21 Tue 14:33]
   :END:
** TODO [[bug:537][#537]] Auto-balancing of transactions of no value
   :PROPERTIES:
   :ID:       DAA39C02-64C1-4A5F-A4A6-93353C7ABAE5
   :CREATED:  [2011-06-28 Tue 22:54]
   :Date:     Tue, 28 Jun 2011 01:55:22 -0500 (CDT)
   :Message:  [[message://bug-537-1@http.bugs.ledger-cli.org/][{Bug 537} New: Auto-balancing of transactions of no value]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:540][#540]] Adjustment accounts are not collapsed by -n
   With the following input file:
   #+begin_src ledger
   P 2010/01/01 foo $1.00
   P 2010/02/01 foo $2.00
   P 2010/03/01 foo $3.00

   2010-01-01 First
     Account  1 foo @ $1.00
     Income
   2010-03-01 Second
     Account  2 foo @ $3.00
     Income
   #+end_src

   I would have expected the command "ledger -f test.dat reg -MVnE account" to
   print exactly one line for each month, containing the dollar value of the
   account for that month. Instead, I get two lines for March:
   :OUTPUT:
   > ledger -f test2.dat reg -MVnEn account
   2010/01/01 - 2010/01/31          Account                         $1   $1
   2010/02/01 - 2010/02/28          <None>                           0   $2
   2010/03/01 - 2010/03/31          <Adjustment>                    $2   $3
                                 Account                         $6   $9
   :END:
   :PROPERTIES:
   :ID:       590C3C39-5916-414D-8A77-3AF43442E442
   :CREATED:  [2011-06-30 Thu 11:51]
   :Date:     Thu, 30 Jun 2011 09:44:22 -0700 (PDT)
   :Message:  [[message://21774456.1840.1309452262141.JavaMail.geo-discussion-forums@prdr36][Re: Printing monthly balances]]
   :Submitter: Matthew Harris <mharris312@gmail.com>
   :END:
** WORKSFORME [[bug:543][#543]] ledger make check failure report...
- State "WORKSFORME" from "TODO"       [2012-02-28 Tue 03:13]
   - Note taken on [2011-07-08 Fri 14:16] \\
     Here is my config.log:
     [2. application/octet-stream; config.log]...

     I have Python 2.7 installed via MacPorts and it is my default python
     selected.  I don't really know/expect if that makes a difference or not.

     Or maybe something else in the config log file will shed some light...
   :PROPERTIES:
   :ID:       C246A646-6768-45AB-A36B-3CCDA2E2404B
   :CREATED:  [2011-07-06 Wed 12:14]
   :Date:     Wed, 06 Jul 2011 11:28:44 -0400
   :Message:  [[message://28CCC239-ACE4-40E5-A95C-81460729C966@mac.com][ledger make check failure report...]]
   :Submitter: Douglas Philips <dgou@mac.com>
   :END:
** DONE [[bug:546][#546]] Record timelog hours on the day(s) of check-in
- State "DONE"       from "TODO"       [2012-02-28 Tue 03:19] \\
  Fixed by 6cbceb8.
   :PROPERTIES:
   :ID:       ACE05ECE-DC73-43B6-98CF-5E362806E517
   :CREATED:  [2011-07-21 Thu 16:11]
   :Date:     Thu, 21 Jul 2011 03:20:36 -0700 (PDT)
   :Message:  [[message://3c83e99a-8817-4976-a1c8-66ff1508ff21@d7g2000vbv.googlegroups.com][Record timelog hours on the day of check-in, instead of on the day of check-out?]]
   :Submitter: Seppo Sade <sepposade1@gmail.com>
   :END:
** TODO [[bug:549][#549]] ledger-next-amount does not handle fixated commodity prices
   :PROPERTIES:
   :ID:       BDF9B99E-C9AB-40AA-9030-29A81B8B8B70
   :CREATED:  [2011-11-02 Wed 12:59]
   :END:
** TODO [[bug:550][#550]] Trailing white space is not ignored in tag vales
   :PROPERTIES:
   :ID:       AEDE9734-7FAA-4F02-9110-36C0CAF03D12
   :CREATED:  [2011-09-22 Thu 17:58]
   :Date:     Wed, 21 Sep 2011 13:16:32 +0000
   :Message:  [[message://bug-550-1@http.bugs.ledger-cli.org/][{Bug 550} New: Trailing white space is not ignored in tag vales]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:551][#551]] Clear virtual transactions based on triggering real transaction
   :PROPERTIES:
   :ID:       D3AE4E7A-0C22-423D-874D-94C07C9894CD
   :CREATED:  [2011-09-28 Wed 14:19]
   :Date:     Wed, 28 Sep 2011 13:28:07 +0000
   :Message:  [[message://bug-551-1@http.bugs.ledger-cli.org/][{Bug 551} New: Clear virtual transactions based on triggering real transaction]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:553][#553]] Budget period entry without interval gives error
   :PROPERTIES:
   :ID:       24C4A592-D8A0-4FCA-B692-B86B6AF4D048
   :CREATED:  [2011-10-10 Mon 06:38]
   :Date:     Sat, 08 Oct 2011 17:24:35 +0000
   :Message:  [[message://bug-553-1@http.bugs.ledger-cli.org/][{Bug 553} New: Budget period entry without interval gives error]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:554][#554]] Error: Unexpected date period token '1000'
   :PROPERTIES:
   :ID:       F0730126-6F56-48E4-87CD-90310F8D347F
   :CREATED:  [2011-10-10 Mon 06:38]
   :Date:     Sat, 08 Oct 2011 17:26:08 +0000
   :Message:  [[message://bug-554-1@http.bugs.ledger-cli.org/][{Bug 554} New: Error: Unexpected date period token '1000']]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:558][#558]] Significant figure mishandling causes divide by zero.
   :PROPERTIES:
   :ID:       05B7B6F0-F55C-4245-B74D-7FBF15A3E924
   :CREATED:  [2011-10-14 Fri 02:48]
   :Date:     Fri, 14 Oct 2011 05:22:05 +0000
   :Message:  [[message://bug-558-1@http.bugs.ledger-cli.org/][{Bug 558} New: Significant figure mishandling causes divide by zero.]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** TODO [[bug:559][#559]] Improve the Ledger 3.0 stats command with ideas from hledger
   :PROPERTIES:
   :ID:       073C471C-8660-466A-8CDA-0D09D48B5DC2
   :CREATED:  [2011-10-10 Mon 16:47]
   :Date:     Mon, 10 Oct 2011 22:47:25 +0200
   :Message:  [[message://CA+R89YJ_C8ewrRjqix+ioM6Cz-GwphY0m=JLCJtCwCDtMT4Y+g@mail.gmail.com][Re: Ledger 3.0 performance compared with older versions]]
   :Submitter: Thierry Daucourt <thierry.daucourt@free.fr>
   :END:
** TODO [[bug:560][#560]] Allow a space between the minus sign and its amount
   :PROPERTIES:
   :ID:       D51BFF74-9763-45CF-B9D4-0B2233AF2249
   :CREATED:  [2011-09-22 Thu 14:51]
   :Date:     Thu, 22 Sep 2011 09:33:36 -0700
   :Message:  [[message://CAKs9TO+0H+b6gDWjzxYpSOi5eVYG6dCGLLsbDN0WDYsrkGMr2A@mail.gmail.com][Space before minus sign]]
   :Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
   :END:
** TODO [[bug:561][#561]] ledger xml produces duplicate transactions
   I tried this with a fresh build from master:
   #+begin_src ledger
   2011-09-09 Description
       Expenses:Foo                $123.45
       Expenses:Bar                 $67.89
       Assets:Baz
   #+end_src
   
   Running this through `ledger xml` produces the following:
   #+begin_src xml
   <?xml version="1.0" encoding="utf-8"?>
   <ledger version="3.0.0-20110325">
     <commodities>
       <commodity flags="P">
         <symbol>$</symbol>
       </commodity>
     </commodities>
     <accounts>
       <account id="0000000001622f40">
         <name></name>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>0</quantity>
           </amount>
         </total>
       </account>
       <account id="000000000162b540">
         <name>Assets</name>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>-191.34</quantity>
           </amount>
         </total>
       </account>
       <account id="000000000162b8a0">
         <name>Baz</name>
         <amount>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>-191.34</quantity>
           </amount>
         </amount>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>-191.34</quantity>
           </amount>
         </total>
       </account>
       <account id="000000000162a5e0">
         <name>Expenses</name>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>191.34</quantity>
           </amount>
         </total>
       </account>
       <account id="000000000162afb0">
         <name>Bar</name>
         <amount>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>67.89</quantity>
           </amount>
         </amount>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>67.89</quantity>
           </amount>
         </total>
       </account>
       <account id="000000000162a8a0">
         <name>Foo</name>
         <amount>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>123.45</quantity>
           </amount>
         </amount>
         <total>
           <amount>
             <commodity flags="P">
               <symbol>$</symbol>
             </commodity>
             <quantity>123.45</quantity>
           </amount>
         </total>
       </account>
     </accounts>
     <transactions>
       <transaction>
         <date>2011/09/09</date>
         <payee>Description</payee>
         <posting>
           <account ref="000000000162a8a0">
             <name>Expenses:Foo</name>
           </account>
           <post-amount>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>123.45</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>123.45</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account ref="000000000162afb0">
             <name>Expenses:Bar</name>
           </account>
           <post-amount>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>67.89</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>191.34</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account ref="000000000162b8a0">
             <name>Assets:Baz</name>
           </account>
           <post-amount>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>-191.34</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity flags="P">
                 <symbol>$</symbol>
               </commodity>
               <quantity>0</quantity>
             </amount>
           </total>
         </posting>
       </transaction>
       <transaction>
         <date>2011/09/09</date>
         <payee>Description</payee>
         <posting>
           <account>ref="000000000162a8a0"&gt;
           <name>Expenses:Foo</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>123.45</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>123.45</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account>ref="000000000162afb0"&gt;
           <name>Expenses:Bar</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>67.89</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>191.34</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account>ref="000000000162b8a0"&gt;
           <name>Assets:Baz</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>-191.34</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>0</quantity>
             </amount>
           </total>
         </posting>
       </transaction>
       <transaction>
         <date>2011/09/09</date>
         <payee>Description</payee>
         <posting>
           <account>ref="000000000162a8a0"&gt;
           <name>Expenses:Foo</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>123.45</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>123.45</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account>ref="000000000162afb0"&gt;
           <name>Expenses:Bar</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>67.89</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>191.34</quantity>
             </amount>
           </total>
         </posting>
         <posting>
           <account>ref="000000000162b8a0"&gt;
           <name>Assets:Baz</name></account>
           <post-amount>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>-191.34</quantity>
             </amount>
           </post-amount>
           <total>
             <amount>
               <commodity>flags="P"&gt;
               <symbol>$</symbol></commodity>
               <quantity>0</quantity>
             </amount>
           </total>
         </posting>
       </transaction>
     </transactions>
   </ledger>
   #+end_src
   
   The three `transaction` elements shown are identical:
   #+begin_src sh
   $ grep '<transaction>' test.xml
   #+end_src
   #+begin_src xml
   <transaction>
     <date>2011/09/09</date>
     <payee>Description</payee>
     <posting>
       <account ref="000000000162a8a0">
         <name>Expenses:Foo</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>123.45</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>123.45</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account ref="000000000162afb0">
         <name>Expenses:Bar</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>67.89</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>191.34</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account ref="000000000162b8a0">
         <name>Assets:Baz</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>-191.34</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>0</quantity>
         </amount>
       </total>
     </posting>
   </transaction>
   <transaction>
     <date>2011/09/09</date>
     <payee>Description</payee>
     <posting>
       <account>ref="000000000162a8a0"&gt;
       <name>Expenses:Foo</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>123.45</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>123.45</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account>ref="000000000162afb0"&gt;
       <name>Expenses:Bar</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>67.89</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>191.34</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account>ref="000000000162b8a0"&gt;
       <name>Assets:Baz</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>-191.34</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>0</quantity>
         </amount>
       </total>
     </posting>
   </transaction>
   <transaction>
     <date>2011/09/09</date>
     <payee>Description</payee>
     <posting>
       <account>ref="000000000162a8a0"&gt;
       <name>Expenses:Foo</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>123.45</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>123.45</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account>ref="000000000162afb0"&gt;
       <name>Expenses:Bar</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>67.89</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>191.34</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account>ref="000000000162b8a0"&gt;
       <name>Assets:Baz</name></account>
       <post-amount>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>-191.34</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity>flags="P"&gt;
           <symbol>$</symbol></commodity>
           <quantity>0</quantity>
         </amount>
       </total>
     </posting>
   </transaction>$ grep '
   <transaction>' test.xml | uniq 
   <transaction>
     <date>2011/09/09</date>
     <payee>Description</payee>
     <posting>
       <account ref="000000000162a8a0">
         <name>Expenses:Foo</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>123.45</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>123.45</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account ref="000000000162afb0">
         <name>Expenses:Bar</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>67.89</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>191.34</quantity>
         </amount>
       </total>
     </posting>
     <posting>
       <account ref="000000000162b8a0">
         <name>Assets:Baz</name>
       </account>
       <post-amount>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>-191.34</quantity>
         </amount>
       </post-amount>
       <total>
         <amount>
           <commodity flags="P">
             <symbol>$</symbol>
           </commodity>
           <quantity>0</quantity>
         </amount>
       </total>
     </posting>
   </transaction></transaction></transaction>
   #+end_src
   
   The number of transactions appears to correspond to the number of accounts
   referenced.
   :PROPERTIES:
   :ID:       ED46C559-294C-48C9-B7CA-FFF15FEA4B9C
   :CREATED:  [2011-09-09 Fri 22:06]
   :Date:     Fri, 9 Sep 2011 19:28:13 -0700
   :Message:  [[message://jwiegley/ledger/issues/39@github.com][{ledger} ledger xml produces duplicate transactions ]]
   :Submitter: Matthew Turland <reply+i-1612871-d1d8357b67528589b8038a0904ccde9eceede741@reply.github.com>
   :END:
** TODO [[bug:562][#562]] Metadata/Note contents can't include a ledger formatted date
   I am finally starting to play with the Metadata features.  I travel for
   business and like to keep track of each trip separately along with it
   reimbursement.  I use "Expenses:Company:Travel" for the asset to charge to.
   After each expense I tried putting "; trip: 2011/08/30 Corona" to show the
   day of departure and destination.
   
   Running
   #+begin_src sh
   ledger reg tag trip="2011/08/30 Corona"
   #+end_src
   
   yields:
   :OUTPUT:
   While parsing value expression:
     has_tag(((/trip/, /2011/08/30 Corona/)))
                                          ^
   Error: ) operator not followed by argument
   :END:
   
   If I change my date format to use dashes instead of slashes it work as
   expected.  Did I accidentally bump into a value expression?
   :PROPERTIES:
   :ID:       D0F48916-4058-4F08-ACE1-EE4013889B57
   :CREATED:  [2011-09-08 Thu 01:58]
   :Date:     Wed, 7 Sep 2011 13:40:01 -0700
   :Message:  [[message://CAKs9TOLu142ntQ8e8a2HzfM7FDW2kNFrEG+rMBLA9E1QzqPAUA@mail.gmail.com][Metadata/Note contents can't include a ledger formatted date?]]
   :Submitter: Craig Earls <enderw88@gmail.com>
   :END:
** TODO [[bug:566][#566]] Selinger's multiple currency accounting & ledger
   Well, after modifying two thousands transactions in my personal ledger
   file, I realized that I got it wrong and that I had not fully
   understood the way ledger handles multiple currency accounting.
   
   I used the following syntax, that I mistakenly believed the smartest.
   #+begin_src ledger
   2011/01/03 Buy food
       Assets:US_Cash   -40 USD
       Expenses:Food     40 USD @ 1.3 CAD
       Income:Currency
   #+end_src
   
   With 2000 transactions like that in my personal ledger, the problem is
   that I accumulated a lot of "XX USD @ YY CAD". When accumulating
   several thousands of USD, a very slight change in USD/CAD currency
   rate make a huge change in CAD total.
   
   As an example, let's add the following line in my test files named
   "selinger_table_4_4-*".
   #+begin_src ledger
   P 2011/01/08 USD 1.45 CAD
   #+end_src
   
   When doing "ledger bal", only 3 files give a zero balance:
   - selinger_table_4_4-currency_trading_account
   - selinger_table_4_4-pricing@
   - selinger_table_4_4-pricing@@
   
   When doing "ledger -X CAD bal", only 2 give a correct result:
   - selinger_table_4_4-balanced
   - selinger_table_4_4-currency_trading_account
   
   Only "selinger_table_4_4-currency_trading_account" looks to be the
   solution. I remind the syntax used:
   #+begin_src ledger
   2011/01/03 Buy food
       Assets:US_Cash        -40 USD
       Income:Currency:USD    40 USD
       Income:Currency:CAD   -52 CAD
       Expenses:Food          52 CAD
   #+end_src
   
   While correct, I do not like this syntax, because I have to manually
   compute the CAD amount (52 CAD equals 40 USD @ 1.3 CAD), and also when
   "ledger reg Food", I lost the fact that it was a 40 USD spending.
   
   After some thinking, I finally found the trick, by using the following
   syntax:
   #+begin_src ledger
   2011/01/03 Buy food
       Assets:US_Cash   -40 USD
       Expenses:Food     40 USD {= 1.3 CAD}
       Income:Currency
   #+end_src
   
   This gives me satisfaction: "bal", "bal --basis", "bal -X CAD" all
   gives correct results, even when using --end with dates 2011/01/04,
   2011/01/07, and 2011/01/08.
   
   In my previous post, I disregarded "fixated commodity price" because
   it gives weird results. Actually, it gives correct result when
   balanced with an empty "Income:Currency". But if used without an empty
   "Income:Currency", it gives strange results.
   
   As a summary, here is file syntax:
   #+begin_src ledger
   2011/01/01 Opening balance
       Assets:Canadian_Cash        200 CAD
       Equity:Initial_Capital
   
   2011/01/02 Exchange
       Assets:Canadian_Cash       -120 CAD
       Assets:US_Cash              100 USD
       Income:Currency
   
   P 2011/01/03 USD 1.30 CAD
   
   2011/01/03 Buy food
       Assets:US_Cash              -40 USD
       Expenses:Food                40 USD {= 1.3 CAD}
       Income:Currency
   
   2011/01/05 Exchange
       Assets:US_Cash              -60 USD
       Assets:Canadian_Cash         75 CAD
       Income:Currency
   
   2011/01/07 Buy food
       Assets:Canadian_Cash        -20 CAD
       Expenses:Food
   
   P 2011/01/08 USD 1.45 CAD
   #+end_src
   :PROPERTIES:
   :ID:       83B5FEC5-81F5-496B-B121-305B1F12EDFB
   :CREATED:  [2011-08-13 Sat 16:50]
   :Date:     Sat, 13 Aug 2011 08:03:30 -0700 (PDT)
   :Message:  [[message://dc5590b5-3088-4394-93e3-73f7d70bd4ed@f41g2000yqh.googlegroups.com][Selinger's multiple currency accounting & ledger]]
   :Submitter: thierry <thierry.daucourt@free.fr>
   :END:
** TODO [[bug:567][#567]] Error parsing auto-xact predicate mith "expr payee"
   #+begin_src ledger
   = /^Asset:Checking/ & expr payee =~ /^Buying Shares/
       (Temp)              1
   #+end_src
   
   :OUTPUT:
   $ ledger bal -f test.txt
   While parsing file "test.txt", line 1:
   While parsing automated transaction:
   > = /^Asset:Checking/ & expr payee =~ /^Buying Shares/
   Error: payee operator not followed by argument
   $
   :END:
   :PROPERTIES:
   :ID:       D7EE079F-354A-4CAB-B4EF-3B066711433C
   :CREATED:  [2011-08-09 Tue 17:05]
   :Date:     Tue, 9 Aug 2011 14:47:47 -0700 (PDT)
   :Message:  [[message://5be6f581-b3b1-4749-ac63-c4168eff71b6@z14g2000yqh.googlegroups.com][Choosing the commodity in automatic transactions]]
   :Submitter: rjc <richard+google@richardcooper.net>
   :END:
** TODO [[bug:568][#568]] Forecast fails with "every <X> days from" for several values of <X>
    Ran command as:
    #+begin_src sh
    ledger --forecast 'd<[2012]' reg
    #+end_src
    
    This works OK:
    #+begin_src ledger
    ~ every 1 days from 2011/08/05
        A  1
        B
    #+end_src
    
    This fails (nothing is shown).
    #+begin_src ledger
    ~ every 2 days from 2011/08/05
        A  1
        B
    #+end_src
    
    This works:
    #+begin_src ledger
    ~ every 3 days from 2011/08/05
        A  1
        B
    #+end_src
    
    These two don't work (nothing is shown again):
    #+begin_src ledger
    ~ every 4 days from 2011/08/05
        A  1
        B
    
    ~ every 5 days from 2011/08/05
        A  1
        B
    #+end_src
    
    Those two work:
    #+begin_src ledger
    ~ every 6 days from 2011/08/05
        A  1
        B
    
    ~ every 7 days from 2011/08/05
        A  1
        B
    #+end_src
    
    This fails (nothing shown):
    #+begin_src ledger
    ~ every 8 days from 2011/08/05
        A  1
        B
    #+end_src
    
    This fails in a different way. The first date shown in the forecast is
    *not* 9 days after the "from" date, that would've been the 14th, but the
    11th is showing.
    #+begin_src ledger
    ~ every 9 days from 2011/08/05
        A  1
        B
    #+end_src
   :PROPERTIES:
   :ID:       CDAFE1CE-226C-49B3-8EB3-A2E49459F9EC
   :CREATED:  [2011-08-07 Sun 01:36]
   :Date:     Sat, 6 Aug 2011 17:02:11 -0700
   :Message:  [[message://jwiegley/ledger/issues/36@github.com][{ledger} Forecast fails with "every <X> days from" for several values of <X> (#36)]]
   :Submitter: leamsi <reply+i-1359410-33fcca4575a13841571ed55da74547765f4c4979@reply.github.com>
   :END:
** TODO [[bug:576][#576]] Strange cleared report formatting
   I tried running a cleared report today using the command
   #+begin_src sh
   ledger cleared Assets
   #+end_src
   
   The report seems bit garbled, there are unexpected line feeds.  I replaced
   all numerals with 'X' in below:
   :OUTPUT:
        $ XXXXX.XX
      XXX.XXX VBMFX
     XXX.XXXX VIFSX
     XXX.XXXX VSGBX
     XXX.XXXX VTHRX          $ XXXXX.XX
                          XXX.XXX VBMFX
                         XXX.XXXX VIFSX
                         XXX.XXXX VSGBX
                         XXX.XXXX VTHRX                 Assets
      XXX.XXX VBMFX
     XXX.XXXX VIFSX
     XXX.XXXX VSGBX
     XXX.XXXX VTHRX       XXX.XXX VBMFX
                         XXX.XXXX VIFSX
                         XXX.XXXX VSGBX
                         XXX.XXXX VTHRX                   Investments
     XXX.XXXX VIFSX
     XXX.XXXX VSGBX      XXX.XXXX VIFSX
                         XXX.XXXX VSGBX    XX-Aug-XX        XXXK Deferred
     XXX.XXXX VIFSX
     XXX.XXXX VSGBX      XXX.XXXX VIFSX
                         XXX.XXXX VSGBX    XX-Aug-XX        XXXK Matching
     XXX.XXXX VTHRX      XXX.XXXX VTHRX    XX-Apr-XX        Craig IRA
     XXX.XXXX VTHRX      XXX.XXXX VTHRX    XX-Jan-XX        Grace IRA
      XXX.XXX VBMFX       XXX.XXX VBMFX    XX-May-XX        Vanguard
          $ XXXX.XX           $ XXXX.XX                   NFCU
           $ XXX.XX           $ XXXX.XX    XX-Jul-XX        Checking
          $ XXXX.XX            $ XXX.XX    XX-Jul-XX        Money Market
          $ XXXX.XX           $ XXXX.XX    XX-Jul-XX        PV Escrow
         $ XXXXX.XX          $ XXXXX.XX                   VWCU
          $ XXXX.XX           $ XXXX.XX    XX-Aug-XX        Grace Checking
           $ XXX.XX           $ XXXX.XX    XX-Aug-XX        Joint Checking
         $ XXXXX.XX          $ XXXXX.XX    XX-Aug-XX        Savings
   ----------------  ----------------    ---------
         $ XXXXX.XX
      XXX.XXX VBMFX
     XXX.XXXX VIFSX
     XXX.XXXX VSGBX
     XXX.XXXX VTHRX          $ XXXXX.XX
                          XXX.XXX VBMFX
                         XXX.XXXX VIFSX
                         XXX.XXXX VSGBX
                         XXX.XXXX VTHRX
   :END:
   :PROPERTIES:
   :ID:       88F931F2-A3FB-495A-B135-E9FD38975506
   :CREATED:  [2011-08-04 Thu 14:35]
   :Date:     Thu, 4 Aug 2011 12:18:37 -0700
   :Message:  [[message://CAKs9TOKs9uqPJRWepvy7XRXcAbJQQFjFdA8E_aBk74m-TbH+Qg@mail.gmail.com][Strange cleared report formatting]]
   :Submitter: Craig Earls <enderw88@gmail.com>
   :END:
** TODO [[bug:577][#577]] Error in automated virtual postings with multiple commodities
   Given the following ledger file
   #+begin_src ledger
   = /^Equity:/
       (Virtual Account)        1
   
   2011/01/01 Opening Balances
       Account1                 100 USD
       Account2                 100 GBP
       Account3                 100 EUR
       Equity:Opening Balance
   #+end_src
   
   I get
   :OUTPUT:
   $ ledger bal -f test.txt
                100 USD  Account1
                100 GBP  Account2
                100 EUR  Account3
               -100 EUR
               -100 GBP
               -100 USD  Equity:Opening Balance
               -100 EUR  Virtual Account
   --------------------
               -100 EUR
   :END:
   
   I would expect my virtual account to be identical to Equity:Opening Balance
   and contain -100 EUR, -100 GBP and -100 USD not just -100 EUR.
   :OUTPUT:
   $ ledger --version
   Ledger 3.0.0-20110325, the command-line accounting tool
   :END:
   :PROPERTIES:
   :ID:       227CC4EE-EC28-479E-9727-4364EEE301EC
   :CREATED:  [2011-08-03 Wed 15:52]
   :Date:     Wed, 3 Aug 2011 13:22:08 -0700
   :Message:  [[message://jwiegley/ledger/issues/35@github.com][{ledger} Error in automated virtual postings with multiple commodities (#35)]]
   :Submitter: richardcooper <reply+i-1339989-90be759f0f0510a9fe33caba8e36a0b8e6a5c288@reply.github.com>
   :END:
** TODO [[bug:583][#583]] --monthly prices report SUM rather than average or end of month price
  :PROPERTIES:
  :ID:       49CA1DB2-060D-418D-BE28-0A6A01966F18
  :CREATED:  [2011-10-17 Mon 18:30]
  :Date:     Mon, 17 Oct 2011 20:14:22 +0000
  :Message:  [[message://bug-583-1@http.bugs.ledger-cli.org/][{Bug 583} New: --monthly prices report SUM rather than average or end of month price]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:584][#584]] Trailing white space is not ignored in payee names
  :PROPERTIES:
  :ID:       C9D593B3-6263-494E-AF38-6D48BE109C63
  :CREATED:  [2011-10-21 Fri 00:52]
  :Date:     Thu, 20 Oct 2011 05:03:39 +0000
  :Message:  [[message://bug-584-1@http.bugs.ledger-cli.org/][{Bug 584} New: Trailing white space is not ignored in payee names]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:587][#587]] ledger --anon print regex fails
Using 24d6619a52 (recent origin/next):

Output from 
#+begin_src sh
$ ledger --anon print asx 
#+end_src
produces a file that doesn't balance (most transactions have only one account
line).  See below for an example.

Also, can you get this mode to also print out pricing info (P lines), with
commodities suitably anonymised of course?

I have a bug to report that is dependent on the included prices, so it would
be nice to be able to easily report this in suitably anonymous form.

#+begin_src ledger
2010/04/04 * ce80e1d8
    4c56e22c:ffa2eb05:3cd29cb0:54187da5       1142 A

2010/04/04 * a6af6b86
    a2ab19c2:a61f2fdf:3e112853:5ca7144b        155 B @ C32.27

2010/04/04 * 5b210ea7
    83c7b8b9:306dcb9c:b1703f6b:2df07fdc        450 D @ C11.30

2010/04/04 * 1292cf1c
    aceeecab:6831267b:97503fd9:da7e2834        250 E @ C20.30

2010/04/04 * 277aed6b
    273a85a6:a43d6c12:f4e329ea:8bfbfa5c:bdd039b2       C6.79

2010/04/04 * 2ca15c6a
    9649be03:bf8c0d59:2544d251:f58fb6fa         11 F

2010/04/04 * d3622969
    05ef8415:2647caab:ab0a7fe2:e5c02402       1700 G @ C2.97

2010/05/18=2010/05/21 * a67b13c6
    ed1c01b4:5d2ccb92:bd4a343d:cb0df7f2        200 H @ C27.19

2010/07/02 * b54b0e38
    440fb1c4:973d920a:3367793e:4c656b96          6 I @ C22.64
    2a419ca0:45a18c24:3a7851e8:87f1487f:40df29e3

2010/10/15 * bc1f024f
    2a580f0d:8a12ecf0:6da144e1:9ba590d4          2 J @ C29.23
    9ab62257:a5962488:da55f7fa:430026f6:3d915197       C3.54

2010/12/20 * 7e8ecf2b
    8e1f36b1:77cd4b0c:690330fc:4aa25a1d          7 K @ C21.57
    d939ffc2:536a1935:3c6ad6b0:5d3f8004:4f8d78cf

2011/04/20 * 976ef9b9
    71d3bd54:f1ada5f2:60aab10b:0928961b         60 L @ C81.90

2011/04/29 * 10a331bb
    1b5554c1:4797d976:240a9f6e:e7e064db          2 M @ C26.885
    d6f119d4:468c1c83:595a0afd:04c0d9a0:693dd2d4       C4.37

2011/05/10 * d7fd2ea6
    b21ebdf6:4f0208a8:1d515d0a:dc39cfcc        780 N @ C6.33

2011/05/10 * bb93b8c7
    d8287474:298d1128:c3af6113:eaf430fc        210 O @ C23.36

2011/07/04 * de028b78
    648d6bf7:ba62d49e:adbea0cf:7bb5a5c3          8 P @ C21.78
    a780b5d3:7250b0c2:2c6e5566:3b89e252:ea78592b      C-4.00

2011/08/04 * 92dd1a28
    e077926e:b93ecd2b:98b240bd:c151d8a0        325 Q @ C15.21
#+end_src
:PROPERTIES:
:ID:       1A83FBAE-C015-43E2-B748-97D8A8D12231
:CREATED:  [2011-10-17 Mon 18:24]
:Date:     Mon, 17 Oct 2011 16:52:07 +1100
:Message:  [[message://4E9BC287.1020803@gmail.com][ledger --anon print regex fails]]
:Submitter: Michael Norrish <michael.norrish-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:588][#588]] 'getquote' only queries one commodity at a time, which can be slow
  :PROPERTIES:
  :ID:       D367EB64-B542-49C3-958B-C099E3291361
  :CREATED:  [2011-10-18 Tue 02:42]
  :Date:     Mon, 17 Oct 2011 16:29:53 -0700
  :Message:  [[message://CAKs9TOKgBfCwS+gDt78f39SBGou6waPqaF79wK4p-bFwex28Dg@mail.gmail.com][Re: 'getquote' responsibilities]]
  :Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
  :END:
** TODO [[bug:590][#590]] Budget entry is applied only once if xacts are in reverse order
I have a single monthly budget entry and I can't get it to work correctly. Here is the command and the output:
:OUTPUT:
$ ledger -f budget_test.txt --budget reg ^income
2011/10/01 Budget entry         Income:Salary                  $500         $500
2011/10/04 Work                 Income:Salary                 $-500            0
2011/09/04 Work                 Income:Salary                 $-500        $-500
2011/08/04 Work                 Income:Salary                 $-500       $-1000
2011/07/04 Work                 Income:Salary                 $-500       $-1500
:END:

I am using the file below:
#+begin_src ledger
~ Monthly
    Assets:Bank:Checking                                                 $500
    Income:Salary

2011/10/04 Work
    Assets:Bank:Checking                                                 $500
    Income:Salary

2011/09/04 Work
    Assets:Bank:Checking                                                 $500
    Income:Salary

2011/08/04 Work
    Assets:Bank:Checking                                                 $500
    Income:Salary

2011/07/04 Work
    Assets:Bank:Checking                                                 $500
    Income:Salary
#+end_src

I expect it to output something like this:
:OUTPUT:
$ ledger -f budget_test.txt --budget reg ^income
2011/10/01 Budget entry         Income:Salary                  $500         $500
2011/10/04 Work                 Income:Salary                 $-500            0
2011/09/01 Budget entry         Income:Salary                  $500         $500
2011/09/04 Work                 Income:Salary                 $-500           $0
2011/08/01 Budget entry         Income:Salary                  $500         $500
2011/08/04 Work                 Income:Salary                 $-500           $0
2011/07/01 Budget entry         Income:Salary                  $500         $500
2011/07/04 Work                 Income:Salary                 $-500           $0
:END:
  :PROPERTIES:
  :ID:       5E54B30B-5E92-40A8-A4B0-D015F3BAAA87
  :CREATED:  [2011-10-24 Mon 19:06]
  :Date:     Mon, 24 Oct 2011 16:54:22 -0700
  :Message:  [[message://jwiegley/ledger/issues/42/2511217@github.com][Re: {ledger} Budget entry is applied only once (#42)]]
  :Submitter: Atamert Ölçgen <reply+i-2040004-d712a429bf511af30213a3c11f67e893d9505cf0@reply.github.com>
  :END:
** TODO [[bug:591][#591]] Future forecast events aren't shown in forecast
  :PROPERTIES:
  :ID:       8794BC3F-A3EE-41B7-BAB8-421E03B16521
  :CREATED:  [2011-11-01 Tue 21:58]
  :Date:     Wed, 02 Nov 2011 02:40:34 +0000
  :Message:  [[message://bug-591-1@http.bugs.ledger-cli.org/][{Bug 591} New: future Forecast events aren't shown in forecast]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:593][#593]] XML reports should output a <fullname> tag
  :PROPERTIES:
  :ID:       6FE4EB4E-0780-4F54-9AB6-B091020A8C6E
  :CREATED:  [2011-11-01 Tue 10:31]
  :Date:     Thu, 27 Oct 2011 14:03:23 -0600
  :Message:  [[message://CAMfPF2cESuukGfGUOLusrV65=OOaPrpNVLZkutvDpk6_xhuO4w@mail.gmail.com][Re: Having Problems With XML]]
  :Submitter: Ryan May <ryan-wTxsuUSx66j3fQ9qLvQP4Q@public.gmane.org>
  :END:
** TODO [[bug:597][#597]] If total transaction in a budgeted account equals zero...
  ...the report fails trying to multiply a balance * quantity
  :PROPERTIES:
  :ID:       015286EB-3234-44C8-87DE-E57D8F4CD39A
  :CREATED:  [2011-11-04 Fri 01:09]
  :Date:     Fri, 04 Nov 2011 03:25:26 +0000
  :Message:  [[message://bug-597-1@http.bugs.ledger-cli.org/][{Bug 597} New: If total transaction in a budgeted account equals zero, the report fails trying to multiply a balance * quantity]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:598][#598]] Cleared report total lines are not aligned correctly
  It is off by two characters.
  :PROPERTIES:
  :ID:       73FFF610-7F55-4823-9B7C-7EF40AD8DD55
  :CREATED:  [2011-11-04 Fri 01:10]
  :Date:     Fri, 04 Nov 2011 03:27:14 +0000
  :Message:  [[message://bug-598-1@http.bugs.ledger-cli.org/][{Bug 598} New: cleared report total lines are not aligned correctly (off by two characters)]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:600][#600]] -d "l>=2" performs > rather than >=
  :PROPERTIES:
  :ID:       854150DF-C34B-447B-89FB-24D5006C798E
  :CREATED:  [2011-11-14 Mon 15:06]
  :Date:     Mon, 14 Nov 2011 01:44:22 +0000
  :Message:  [[message://bug-600-1@http.bugs.ledger-cli.org/][{Bug 600} New: -d "l>=2" performs > rather than >=]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:602][#602]] Provide facility for easy generation of command line completion
  :PROPERTIES:
  :ID:       A865D025-4FFA-446C-B93B-9E92AB63EBF7
  :CREATED:  [2011-11-16 Wed 01:29]
  :Date:     Wed, 16 Nov 2011 04:18:25 +0000
  :Message:  [[message://bug-602-1@http.bugs.ledger-cli.org/][{Bug 602} New: provide facility for easy generation of command line completion]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** TODO [[bug:603][#603]] print ignores @tag ... @end tag
:PROPERTIES:
:ID:       C807FF4A-E895-4BA3-ADC5-5DCFFF26DAD9
:CREATED:  [2011-11-24 Thu 00:42]
:Date: Thu, 24 Nov 2011 04:41:20 +0000
:Message: [[message://bug-603-1@http.bugs.ledger-cli.org/][{Bug 603} New: print ignores @tag ... @end tag]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:604][#604]] print ignores @bucket
:PROPERTIES:
:ID:       ACE150C4-F015-4124-92B1-9934E5BAC1C6
:CREATED:  [2011-11-24 Thu 00:42]
:Date: Thu, 24 Nov 2011 05:11:06 +0000
:Message: [[message://bug-604-1@http.bugs.ledger-cli.org/][{Bug 604} New: print ignores @bucket]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:605][#605]] Inconsistent command directive syntax
:PROPERTIES:
:ID:       61F3122F-EAA3-4C5A-BD3D-2C47B50AACC2
:CREATED:  [2011-11-24 Thu 00:42]
:Date: Thu, 24 Nov 2011 05:57:44 +0000
:Message: [[message://bug-605-1@http.bugs.ledger-cli.org/][{Bug 605} New: inconsistent command directive syntax]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:606][#606]] Padding formatting commands does not ignore invisible characters
:PROPERTIES:
:ID:       0782D33B-4DAA-46EF-A566-41E2C3EEA890
:CREATED:  [2011-12-02 Fri 13:45]
:Date: Fri, 02 Dec 2011 13:07:34 +0000
:Message: [[message://bug-606-1@http.bugs.ledger-cli.org/][{Bug 606} New: padding formatting commands do not ignore invisible characters]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:607][#607]] Expand the --price-exp argument handling
... to allow specification of hours vice only minutes.
:PROPERTIES:
:ID:       FE5430FF-A397-4A81-993C-E870B5037B24
:CREATED:  [2011-12-02 Fri 13:45]
:Date: Fri, 02 Dec 2011 14:26:01 +0000
:Message: [[message://bug-607-1@http.bugs.ledger-cli.org/][{Bug 607} New: Expand the --price-exp argument handling to allow specification of hours vice only minutes]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:608][#608]] lot tags are wrong if more than one lot tag in a transaction
:PROPERTIES:
:ID:       E9B6F75D-81EE-43F9-B16A-BDFB76C56ABC
:CREATED:  [2011-12-07 Wed 14:19]
:Date: Wed, 07 Dec 2011 19:47:57 +0000
:Message: [[message://bug-608-1@http.bugs.ledger-cli.org/][{Bug 608} New: ledger gets lot tags wrong when there is more than one lot tag in a transaction]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:609][#609]] Piping input file doesn't handle relative file expansion correctly
:PROPERTIES:
:ID:       CE5B3DED-BF4A-47FD-A507-87E48E46EBDC
:CREATED:  [2011-12-12 Mon 18:22]
:Date: Mon, 12 Dec 2011 23:02:03 +0000
:Message: [[message://bug-609-1@http.bugs.ledger-cli.org/][{Bug 609} New: piping input file to ledger doesn't handle relative file expansion correctly]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:610][#610]] Whole transaction is ignored when there's a specific comment
:PROPERTIES:
:ID:       CD85B7F8-7727-45F6-B957-5F41172037DF
:CREATED:  [2011-12-13 Tue 16:36]
:Date: Tue, 13 Dec 2011 13:04:07 +0000
:Message: [[message://bug-610-1@http.bugs.ledger-cli.org/][{Bug 610} New: ledger ignores whole transaction when there's a specific comment]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:611][#611]] --trace throws an assertion errors when files are @included
:PROPERTIES:
:ID:       D90B316D-FDA8-44E6-A405-445A182C4C19
:CREATED:  [2011-12-13 Tue 16:36]
:Date: Tue, 13 Dec 2011 13:14:46 +0000
:Message: [[message://bug-611-1@http.bugs.ledger-cli.org/][{Bug 611} New: trace throwing assertion errors when files are @included]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:612][#612]] Changing trace level has no effect
:PROPERTIES:
:ID:       974BC10A-231B-4DDD-B8E4-D7341D974D9F
:CREATED:  [2011-12-13 Tue 16:36]
:Date: Tue, 13 Dec 2011 13:33:28 +0000
:Message: [[message://bug-612-1@http.bugs.ledger-cli.org/][{Bug 612} New: changing trace level has no effect]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:613][#613]] Convert fails on empty lines
:PROPERTIES:
:ID:       1F275F21-3C2F-47FC-B350-68AA69B3A640
:CREATED:  [2011-12-13 Tue 16:33]
:Date: Tue, 13 Dec 2011 21:30:29 +0000
:Message: [[message://bug-613-1@http.bugs.ledger-cli.org/][{Bug 613} New: convert fails on empty lines]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:615][#615]] --strict sees auto xacts at beginning of Journal as uncleared
... so reports their accounts as unknown
:PROPERTIES:
:ID:       7C0DEA50-B755-4C5E-A5D1-F7BFC19B7A16
:CREATED:  [2011-12-14 Wed 16:57]
:Date: Wed, 14 Dec 2011 19:35:21 +0000
:Message: [[message://bug-615-1@http.bugs.ledger-cli.org/][{Bug 615} New: --strict sees automated transactions at the beginning of a Journal as uncleared, so reports their accounts as unknown]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:616][#616]] bal --amount-data fails wrong
:PROPERTIES:
:ID:       D65636A2-6C30-404B-B633-EEFD248F6A6A
:CREATED:  [2011-12-14 Wed 16:55]
:Date: Wed, 14 Dec 2011 21:04:46 +0000
:Message: [[message://bug-616-1@http.bugs.ledger-cli.org/][{Bug 616} New: ledger bal --amount-data fails wrong]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:617][#617]] bal --anon anonymizes *before* it generates the report
:PROPERTIES:
:ID:       D89C4DBC-5AA2-4B93-9947-D65CAEA7F4A5
:CREATED:  [2011-12-14 Wed 16:55]
:Date: Wed, 14 Dec 2011 21:31:34 +0000
:Message: [[message://bug-617-1@http.bugs.ledger-cli.org/][{Bug 617} New: ledger bal --anon anonymizes BEFORE it generates the report]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:618][#618]] --anon loses all structural information
:PROPERTIES:
:ID:       C97C3B48-E8A7-4A25-99E1-77530C8AFE9F
:CREATED:  [2011-12-14 Wed 16:55]
:Date: Wed, 14 Dec 2011 21:38:21 +0000
:Message: [[message://bug-618-1@http.bugs.ledger-cli.org/][{Bug 618} New: --anon loses all structural information]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:619][#619]] Format functions do not work in --group-title-format
:PROPERTIES:
:ID:       E51FB442-711F-4158-A689-E1D795173632
:CREATED:  [2011-12-16 Fri 23:24]
:Date: Sat, 17 Dec 2011 05:06:25 +0000
:Message: [[message://bug-619-1@http.bugs.ledger-cli.org/][{Bug 619} New: format function do not work in --group-title-format]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:621][#621]] New install will not execute without ~/.pricedb existing
:PROPERTIES:
:ID:       DA7CB86F-E169-4287-8A40-DA97AE516BB0
:CREATED:  [2011-12-28 Wed 18:51]
:Date: Fri, 23 Dec 2011 00:51:32 +0000
:Message: [[message://bug-621-1@http.bugs.ledger-cli.org/][{Bug 621} New: New install will not execute  without ~/.pricedb existing]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:622][#622]] print ignores Y.... tag
:PROPERTIES:
:ID:       BB3AFC4C-0B54-4E80-A7F0-6CB0C9E2C8B7
:CREATED:  [2011-12-31 Sat 17:01]
:Date: Sat, 31 Dec 2011 15:50:25 +0000
:Message: [[message://bug-622-1@http.bugs.ledger-cli.org/][{Bug 622} New: print ignores Y.... tag]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:623][#623]] Virtual transactions cause unbalanced equity report
:PROPERTIES:
:ID:       22141D8B-E1F8-4B48-9FEB-B2E5422C617A
:CREATED:  [2012-01-04 Wed 18:11]
:Date: Wed, 04 Jan 2012 23:20:08 +0000
:Message: [[message://bug-623-1@http.bugs.ledger-cli.org/][{Bug 623} New: virtual transactions cause unbalanced equity report]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:624][#624]] Lack of newline at end of file causes rounding error
- Note taken on [2012-01-09 Mon 18:13] \\
  It seems that the last character is assumed to be a newline. If I change to:
  #+begin_src ledger
  1/5 Opening Balance
    Equity:Opening Balances
    Assets:Checking              $123.45
    Assets:Savings:Emergency    $3000.00
    Assets:Savings:Other         $901.37q
  #+end_src
  
  ...it works as intended.
:PROPERTIES:
:ID:       F739F74D-2523-4624-A8F0-CDD50CBD28D5
:CREATED:  [2012-01-06 Fri 16:55]
:Date: Fri, 06 Jan 2012 20:33:40 +0000
:Message: [[message://bug-624-1@http.bugs.ledger-cli.org/][{Bug 624} New: Lack of newline at end of file causes rounding error]]
:Author: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:626][#626]] emacs command does not report xact level comments/tags
:PROPERTIES:
:ID:       90ADD172-DA7E-411F-AA13-CC2BE3E5E338
:CREATED:  [2012-01-18 Wed 00:02]
:Date: Wed, 18 Jan 2012 03:31:38 +0000
:Message: [[message://bug-626-1@http.bugs.ledger-cli.org/][{Bug 626} New: emacs command does not report xact level comments/tags]]
:Author: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:630][#630]] Basis cost should "follow" commodities with lot pricing
:PROPERTIES:
:ID:       23C96A70-7429-4DBE-9EF6-2053319C1D6A
:CREATED:  [2012-02-22 Wed 15:07]
:Date: Wed, 22 Feb 2012 18:18:12 +0000
:Message: [[message://bug-630-1@http.bugs.ledger-cli.org/][{Bug 630} New: basis cost should "follow" commodities with lot pricing]]
:Author: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:631][#631]] Minimize redundant scope walks due to multiple SCOPE bindings
When using bind_scope_t with SCOPE nodes, it can cause multiple references to
the same scopes.
:PROPERTIES:
:ID:       BF6E06E4-C004-47BB-BE48-7837B643ECBE
:CREATED:  [2012-02-21 Tue 02:15]
:END:
** TODO [[bug:633][#633]] Ledger crashes with --account=payee --monthly
The bug is with cleanup of temporary accounts and postings:
#+begin_src sh
ledger -f test/input/sample.dat --account=payee --monthly -n -AE reg
#+end_src
:PROPERTIES:
:ID:       D60B0FD8-74C6-43D5-8FAF-0CB5F6BA9F85
:CREATED:  [2012-01-31 Tue 17:20]
:END:
** TODO [[bug:634][#634]] Correctly implement floor(), ceil() and round()
:PROPERTIES:
:ID:       757871B5-00C4-4EA5-9F0C-B16159DA4AD5
:CREATED:  [2012-01-11 Wed 23:28]
:Date: Sat, 07 Jan 2012 00:31:19 -0600
:Message: [[message://m2pqew2fd4.fsf@gmail.com][Re: Rounding formula for automatic transactions]]
:Author: John Wiegley <jwiegley-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:635][#635]] ledger.el and support for YYYY-MM-DD dates
I don't recall if I picked these changes up from this list or if I muddled
through it myself at one point, but since I just had to restore a backup from
the ledger.el provided by the github repo for ledger I thought I'd post this:

  http://highwire.stanford.edu/~jimr/misc/ledger.el.diff

It's a small set of changes to the ledger.el that supports clearing
transactions that use the YYYY-MM-DD format, and which make some adjustments
to tab vs. spaces in the pattern matching used in the lisp code. I think I
submitted a bug report for this last one, but can't find it in the bugzilla db
right now.
:PROPERTIES:
:ID:       2DC5CB7E-F612-4813-9246-E95C691DCEAB
:CREATED:  [2012-01-02 Mon 04:13]
:Date: Fri, 30 Dec 2011 07:28:14 -0800 (PST)
:Message: [[message://1006733.2027.1325258894225.JavaMail.geo-discussion-forums@prht13][ledger.el and support for YYYY-MM-DD dates]]
:Submitter: Jim Robinson <jim.robinson-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:636][#636]] Budget report query doesn't generate correct report
It appears that a budget report query doesn't generate a correct report for a
particular account unless there's a register entry for the budgeted account in
the first month of the year.

For example, if I budget $100.00/month for vacation, but don't have a posting
in the vacation account until February, a budget report for the complete year
shows that I've budgeted $550.00. If the first entry for the year comes in
March, a budget report for the complete year shows that I've budgeted $500.00.

(A budget query for ^Expenses shows the correct budgeted amount for the
vacation account regardless when the first entry for vacation comes.)

Using the next branch updated last night (19 Nov).
:PROPERTIES:
:ID:       D2846B5C-EDD1-4B45-9A00-11DE1CAF42A2
:CREATED:  [2011-11-21 Mon 16:31]
:Date:     Sun, 20 Nov 2011 12:26:29 -0500
:Message:  [[message://87mxbqln7e.fsf@buster.johnrakestraw.com][Bug in budget report?]]
:Submitter: John Rakestraw <johnr-hdTKlMK9g6hNu5YjidvPyAC/G2K4zDHf@public.gmane.org>
:END:
** TODO [[bug:637][#637]] Trying to understand the pivot command
I think I'm just not understanding this. I've been intrigued by the "pivot"
feature in Ledger since I first learned of it, but I've not been able to make
it work. After seeing Russell Adams simple presentation of it earlier this
week, I decided to try again tonight.

I can use Russell's simple example file and get the results that he got.
However, if I add another entry to it that doesn't include the relevant
categories, this entry is still included in the reports.

Here's Russell's sample file (renamed to test) with one additional entry:
#+begin_src ledger
2011/11/01 Airplane ride
    Source:VISA                   -$1000.00
    Dest:Project
        ; ER: ER0001
        ; CATEGORY: Airfare
        ; PROJECT: Test

2011/11/02 Hotel overnight
    Source:VISA                    -$200.00
    Dest:Project
        ; ER: ER0001
        ; CATEGORY: Lodging
        ; PROJECT: Test

2011/11/03 Airplane ride
    Source:VISA                   -$1500.00
    Dest:Project
        ; ER: ER0002
        ; CATEGORY: Airfare
        ; PROJECT: Bob

2011/11/04 Hotel overnight
    Source:VISA                    -$250.00
    Dest:Project
        ; ER: ER0002
        ; CATEGORY: Lodging
        ; PROJECT: Bob

2011/11/05 Reimbursement
    Source:VISA                    $1200.00
    Dest:Project
        ; ER: ER0001

2011/11/07 Another entry
    Source:Checking                    $1000.00
    Dest:Other
#+end_src

Note that the last entry doesn't include any of the categories included in the
other entries. I would expect it not to show up in the reports. For example,:
#+begin_src sh
ledger -f test -sEV bal --pivot CATEGORY
#+end_src

Yields this:
:OUTPUT:

            $2950.00  CATEGORY
            $2500.00    Airfare:Dest:Project
             $450.00    Lodging:Dest:Project
           $-2200.00  Dest
           $-1000.00    Other
           $-1200.00    Project
            $-750.00  Source
            $1000.00    Checking
           $-1750.00    VISA
--------------------
                   0
:END:

#+begin_src sh
ledger -f test -sEV bal --pivot ER
#+end_src

Yields this:
:OUTPUT:
           $-1000.00  Dest:Other
            $1750.00  ER
                   0    ER0001:Dest:Project
            $1750.00    ER0002:Dest:Project
            $-750.00  Source
            $1000.00    Checking
           $-1750.00    VISA
--------------------
                   0
:END:

In each case, the report includes the lines for "Dest:Other" and "Checking."
This is not a problem with such a simple file, but when I run similar reports
on my entire ledger file, I get what appears to be a line for every account
mentioned in the file. It's not helpful.
:PROPERTIES:
:ID:       3A14DE96-6D94-4559-AB68-7DC7F403CCAC
:CREATED:  [2011-11-14 Mon 18:04]
:Date:     Fri, 11 Nov 2011 20:11:02 -0500
:Message:  [[message://87obwitaah.fsf@buster.johnrakestraw.com][Trying to understand the pivot command]]
:Submitter: John Rakestraw <johnr-hdTKlMK9g6hNu5YjidvPyAC/G2K4zDHf@public.gmane.org>
:END:
** TODO [[bug:648][#648]] Don't use boost::any in value.h, since it causes allocations
:PROPERTIES:
:ID:       D8131379-1E53-474D-92A7-817AFD1DB84D
:CREATED:  [2011-12-21 Wed 15:36]
:END:
** TODO [[bug:649][#649]] Unrecognized initial chars in a journal should cause an error
:PROPERTIES:
:ID:       AE7BCF3F-5F73-4776-84AB-721D0E460DE8
:CREATED:  [2011-11-22 Tue 23:43]
:Date: Tue, 22 Nov 2011 20:54:43 -0700
:Message: [[message://CAKs9TO+fsB8rn1GXgWNS0iXjMcoyhvhorsgya8X1qdZTEz+r6w@mail.gmail.com][Re: {DOCS} Different ways Commenting Journals]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:650][#650]] Input date format not recognized
Anyway, we're based in Germany and I'd like to enter dates in German format:
`%d.%m.%Y`. I can get ledger to use this format when outputting dates with the
"--date-format" option. However, I haven't found a way to get ledger to
_accept_ dates in this format as input.

For instance, a ledger file looking like this:
#+begin_src ledger
    2011/10/01 4b4e2a89 
        ef9d9585:efa1fb7b:22845e93:0e3763f0       2,00 A
        2c166ff7:d34e3aa1:8a5075b3:56f3c726

    2011/10/01 15983995
        eb78b6c0:a2857de3:d6d8ea07:6688fc4e       2,58 A
        ba3ffe56:c3ba36a5:aa63399f:e9e1d043
#+end_src

Results in this output from `ledger print`:
:OUTPUT:
    01.10.2011 4b4e2a89 
        ef9d9585:efa1fb7b:22845e93:0e3763f0       2,00 A
        2c166ff7:d34e3aa1:8a5075b3:56f3c726

    01.10.2011 15983995
        eb78b6c0:a2857de3:d6d8ea07:6688fc4e       2,58 A
        ba3ffe56:c3ba36a5:aa63399f:e9e1d043
:END:

Putting this exact output back into ledger results in:
:OUTPUT:
    $ ledger -f test.ledger bal
    While parsing file "test.ledger", line 1: 
    While parsing transaction:
    > 01.10.2011 15983995
    Error: Invalid date: 01.10.2011
    While parsing file "test.ledger", line 5: 
    While parsing transaction:
    > 01.10.2011 15983995
    Error: Invalid date: 01.10.2011
:END:

Using the (undocumented) option "--input-date-format=%d.%m.%Y" yields the same result.

I'm using Ledger 3.0.0-20110325 from the Ubuntu PPA repository Michael Budde
created (https://launchpad.net/~mbudde/+archive/ledger) under Ubuntu
11.10. I'd be very grateful for any pointers!
:PROPERTIES:
:ID:       751B2357-21E7-4704-A9CD-D241A0846057
:CREATED:  [2011-12-06 Tue 15:07]
:Date: Tue, 6 Dec 2011 12:45:19 -0800
:Message: [[message://jwiegley/ledger/issues/48@github.com][{ledger} Input date format not recognized (#48)]]
:Submitter: Jonas <reply+i-2467193-d935c086e8421ab641d9f9aaddfdfcd560f8c39c-8460@reply.github.com>
:END:
** TODO [[bug:651][#651]] The - query prefix character no longer excludes accounts
Blast from the past:  the "-" thing no longer works in 3.0 is this a
bug or deprecated?
:OUTPUT:
12:01:43 ~/FinanceData (master)> ledger bal Expenses -Expenses:Drinks
Error: Illegal option -x
13:58:53 ~/FinanceData (master)> ledger bal Expenses
-"Expenses:Drinks"
Error: Illegal option -x
:END:
:PROPERTIES:
:ID:       ED644B36-64CC-403F-B196-C9CD6FB66D23
:CREATED:  [2011-12-14 Wed 17:18]
:Date: Wed, 14 Dec 2011 12:59:46 -0800 (PST)
:Message: [[message://4c90b360-8e91-4154-a5ea-8e8d47203309@h3g2000yqa.googlegroups.com][Re: account exclusion]]
:Submitter: enderw88 <enderw88@gmail.com>
:END:
** TODO [[bug:652][#652]] How to handle stale results from getquote
I am very close to completing reimplementation of quote downloading in ledger
3 (it works completely on my machine but doesn't report problems in any sane
way).  I have addressed bugs 174 (configurable getquote path) and 411 (don't
keep trying to download if you receive a stale price).  Right now I am adding
some sanity checking to the options and working on error reporting.  I should
be able to push this to git within the next few days.  I need some advice on
how people would prefer to handle the following situations:

NOTE: ledger assumes the getquote script returns the latest available price.

1. Stale results: If getquote returns a price that is stale (age exceeds the
   --price-exp) should ledger silently accept that as the latest price, accept
   it and generate a warning, or generate an error and quit? Right now I have
   it silently accepting the stale value.

2. Valid Option combinations: --download does nothing if -V isn't
   specified. Should ledger silently accept this, warn about the missing -V
   option or stop and report?
   
I had hoped to address bug 588 ('getquote' only queries one commodity at a
time, which can be slow) but this requires some significant changes to the
internal flow ledger takes (ledger deals with commodities immediately as they
are parsed, grouping commodities for a batch download would require two passes
through the journal files).
:PROPERTIES:
:ID:       42D6D5F2-DDB5-4C24-BE8D-A14525065400
:CREATED:  [2011-12-08 Thu 00:43]
:Date: Wed, 7 Dec 2011 22:39:53 -0700
:Message: [[message://CAKs9TO+BC++bBCk4Tc6W=Ee8JqW8=n0yYEgjmQ44Je7PKRp1VA@mail.gmail.com][How to handle stale results from getquote]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:654][#654]] Commodity flags cleanup
I have confused myself a great deal with -B/-V/-X, as a user and
implementor. I have been studying http://ledger-cli.org/3.0/doc/ledger.1.html
and https://groups.google.com/forum/#!topic/ledger-cli/9oa47zA-qqM/discussion,
thinking, and getting a bit clearer. What do you think of the following slight
semantic and UI cleanup ?

1. http://hledger.org/MANUAL.html#prices

2. 

--cost/-B
shows amounts as their transaction price, where specified.

--market-value/-V [COMMODITY] [--now DATE]
shows amounts as their value in COMMODITY as of today (or another date
specified with --now) using P historical prices, if possible.  If
COMMODITY is not specified, the first suitable one found in the
journal's P directives is used.

--convert/--exchange/-X [--now DATE]
after generating a report, does a final conversion of all amounts to
their value in COMMODITY as of today (or another date specified with
--now), where possible. (This is orthogonal to -B and -V.)
:PROPERTIES:
:ID:       48CC0B07-6E1D-4605-B1EF-DD694CE473AA
:CREATED:  [2012-01-30 Mon 17:10]
:Date: Sun, 22 Jan 2012 17:55:58 -0800
:Message: [[message://13797315-A496-427C-8F17-4946066FD087@joyful.com][commodity flags cleanup]]
:Author: Simon Michael <simon-jbxitMBJ2LLQT0dZR+AlfA@public.gmane.org>
:END:
** TODO [[bug:655][#655]] Ledger no longer downloads stock prices using the -Q option
Since upgrading to ledger 3.0, I've noticed that it no longer downloads stock
prices using the -Q option like it used to. Based on this post, that's a
feature that is planned, but not yet reinstated yet.

http://groups.google.com/group/ledger-cli/browse_thread/thread/d58f29605d4bdd02/dd26788d2b2d934a?lnk=gst&q=download#dd26788d2b2d934a

In the meantime, I've created a Bash script that does the same work.  It's
super simple, so I'm not sure if it will work for everyone, but it should be
easy to fix, if not.

https://gist.github.com/1389840
:PROPERTIES:
:ID:       DE28E5EC-9481-4E86-9C78-C3E793B1FF4A
:CREATED:  [2011-11-24 Thu 00:41]
:Date: Wed, 23 Nov 2011 12:53:45 -0800 (PST)
:Message: [[message://d4abc803-fa54-4b5f-9649-83c38f872d11@w1g2000vba.googlegroups.com][Dowloading stock prices, a workaround]]
:Submitter: Vinod Kurup <vvkurup-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:656][#656]] Historical prices with and without revaluation
- Note taken on [2012-02-23 Thu 21:29] \\
  One syntax can be (using fixated commodity price)
  #+begin_src ledger
  P 2011/11/01 00:00:00 LiterGas 1.00 $
  2011/11/01 Get Gas
       Expenses:Car:Gas  10 LiterGas {=1$}
       Assets:Cash
  
  P 2011/11/02 00:00:00 LiterGas 10.00 $
  2011/11/02 Get Gas
       Expenses:Car:Gas  10 LiterGas {=10$}
       Assets:Cash
  
  P 2011/11/03 00:00:00 LiterGas 100.00 $
  2011/11/03 Get Gas
       Expenses:Car:Gas  10 LiterGas {=100$}
       Assets:Cash
  #+end_src
  
  and then
  :OUTPUT:
  $ ledger --exchange=$ reg Car:Gas
  11-Nov-01 Get Gas            Expenses:Car:Gas          $10         $10
  11-Nov-02 Get Gas            Expenses:Car:Gas         $100        $110
  11-Nov-03 Get Gas            Expenses:Car:Gas        $1000       $1110
  :END:
  
  you have to read about multiple currency accounting, reference is
  http://www.mscs.dal.ca/~selinger/accounting/tutorial.html, and read about
  commodities fixated prices, which is one of the way of ledger to
  implement it.
  
  Here is how I would write it in ledger syntax
  #+begin_src ledger
  P 2011/11/01 LiterGas 1.00 $
  2011/11/01 Get Gas
      Assets:Cash         -10 $
      Assets:Gas           10 LiterGas
      Assets:Gas           -9 LiterGas
      Expenses:Car:Gas      9 $
  
  P 2011/11/02 LiterGas 10.00 $
  2011/11/02 Get Gas
      Assets:Cash        -100 $
      Assets:Gas           10 LiterGas
      Assets:Gas          -10 LiterGas
      Expenses:Car:Gas    100 $
  
  P 2011/11/03 LiterGas 100.00 $
  2011/11/03 Get Gas
      Assets:Cash       -1000 $
      Assets:Gas           10 LiterGas
      Assets:Gas          -10 LiterGas
      Expenses:Car:Gas   1000 $
  
  2011/11/03 Sell 1 LiterGas
      Assets:Gas           -1 LiterGas @@ 100 $
      Assets:Cash         100 $
      Incomes:Gas          -1 LiterGas @ 1 $
      Incomes:Gas           1 LiterGas @ 100 $
      Incomes:Gas
  #+end_src
  
  Two "tricks"
  - in my mind, the account Expenses:Car:Gas is of currency dollar, not
    LiterGas
  - the 3 last lines enables me to not compute the gain
  
  :OUTPUT:
  $ ledger register Assets:Gas
  11-Nov-01 Get Gas            Assets:Gas        10 LiterGas 10 LiterGas
                               Assets:Gas        -9 LiterGas  1 LiterGas
  11-Nov-02 Get Gas            Assets:Gas        10 LiterGas 11 LiterGas
                               Assets:Gas        -10 LiterGas  1
  LiterGas
  11-Nov-03 Get Gas            Assets:Gas        10 LiterGas 11 LiterGas
                               Assets:Gas        -10 LiterGas  1
  LiterGas
  11-Nov-03 Get Gas            Assets:Gas        -1 LiterGas           0
  :END:
  
  is different, because I separate the "buy" from the "consumption". You
  can not accumulate indefinitely LiterGas, you have to consume them.  I
  treat the "LiterGas" as it was a stock share.
  
  :OUTPUT:
  $ ledger register Assets:Cash
  11-Nov-01 Get Gas            Assets:Cash             -10 $       -10 $
  11-Nov-02 Get Gas            Assets:Cash            -100 $      -110 $
  11-Nov-03 Get Gas            Assets:Cash           -1000 $     -1110 $
  11-Nov-03 Get Gas            Assets:Cash             100 $     -1010 $
  :END:
If I try to keep track of gasoline usage I could do this:
#+begin_src ledger
P 2011/11/01 00:00:00 LiterGas 1.00 $
2011/11/01 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Cash

P 2011/11/02 00:00:00 LiterGas 10.00 $
2011/11/02 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Cash

P 2011/11/03 00:00:00 LiterGas 100.00 $
2011/11/03 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Cash
#+end_src

To see how much gas was used works OK:
:OUTPUT:
> ledger reg Car:Gas
11-Nov-01 Get Gas           Expenses:Car:Gas        10 LiterGas  10
LiterGas
11-Nov-02 Get Gas           Expenses:Car:Gas        10 LiterGas  20
LiterGas
11-Nov-03 Get Gas           Expenses:Car:Gas        10 LiterGas  30
LiterGas
:END:

And now, how much was spent on gas:
:OUTPUT:
> ledger -X $ reg Car:Gas
11-Nov-01 Get Gas               Expenses:Car:Gas
$10          $10
11-Nov-02 Commodities revalued  <Revalued>
$90         $100
11-Nov-02 Get Gas               Expenses:Car:Gas
$100         $200
11-Nov-03 Commodities revalued  <Revalued>
$1800        $2000
11-Nov-03 Get Gas               Expenses:Car:Gas
$1000        $3000
:END:

This wrong, since I have spent only $1110 on gas.  What is the proper way to
do this?  Somehow the revaluation should be disabled.  On the other hand, if I
kept, say one liter bought on 11/11/01 and sold it again on 11/11/03, then
this should be revalued.  Say, we change the ledger file to:
#+begin_src ledger
P 2011/11/01 00:00:00 LiterGas 1.00 $
2011/11/01 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Gas         1 LiterGas
      Assets:Cash

P 2011/11/02 00:00:00 LiterGas 10.00 $
2011/11/02 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Gas         1 LiterGas
      Assets:Cash

P 2011/11/03 00:00:00 LiterGas 100.00 $
2011/11/03 Get Gas
      Expenses:Car:Gas  10 LiterGas
      Assets:Gas         1 LiterGas
      Assets:Cash
#+end_src

Now
:OUTPUT:
> ledger -X $ reg Assets:Gas
11-Nov-01 Get Gas               Assets:Gas
$1           $1
11-Nov-02 Commodities revalued  <Revalued>
$9          $10
11-Nov-02 Get Gas               Assets:Gas
$10          $20
11-Nov-03 Commodities revalued  <Revalued>
$180         $200
11-Nov-03 Get Gas               Assets:Gas
$100         $300
:END:
is actually correct but
:OUTPUT:
> ledger -X $ reg Assets:Cash
11-Nov-01 Get Gas               Assets:Cash
$-11         $-11
11-Nov-02 Commodities revalued  <Revalued>
$-99        $-110
11-Nov-02 Get Gas               Assets:Cash
$-110        $-220
11-Nov-03 Commodities revalued  <Revalued>
$-1980       $-2200
11-Nov-03 Get Gas               Assets:Cash
$-1100       $-3300
:END:
is wrong.

Somehow one should be able to specify

 - Assets:Gas :: use historical prices AND revaluate
 - Assets:Cash :: use historical prices without revaluation (but if you have
                  10 GPB in there it should be revalued, but not the -10
                  LiterGas)
 - Expenses:Car:Gas :: use historical prices without revaluation

There is a similar situation with currencies.  If you spend, say 10 GBP, worth
15$ then this should not be revalued later on.  However, if you have 10 GPB in
your wallet, I guess it should be revalued according to the current rate.

Any good ideas how to handle this with ledger?

There were some similar discussion already:
http://groups.google.com/group/ledger-cli/browse_thread/thread/8b3b29d3e167e6ab/5b0721d1dff72135http://groups.google.com/group/ledger-cli/browse_thread/thread/6cbcaa9aa20bab6d/21424ed3eae62d58
:PROPERTIES:
:ID:       E6B85390-C2F3-4CFD-9C20-5CBA800210D7
:CREATED:  [2011-12-02 Fri 13:35]
:Date: Fri, 2 Dec 2011 10:01:59 -0800 (PST)
:Message: [[message://565113c5-1ea0-4ee4-8f60-782cfc28e42a@da3g2000vbb.googlegroups.com][historical prices with and without revaluation]]
:Submitter: Qwertyu <scheit-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [#C] [[bug:337][#337]] Rationalize formatting strings
   %[OPTS](expr) should be equal to %(justify(expr, OPTS))
   ${AMT} is the same as $(scrub(AMT))
   %T is the same as ${display_total}.

   Right now formatting strings are a nightmare for users to modify.
   :PROPERTIES:
   :ID:       E2F5CEE7-7FFE-48CC-8A56-8089BB502C63
   :CREATED:  [2010-06-14 Mon 08:35]
   :END:
** TODO [#C] [[bug:347][#347]] All contexts should be accessible by name
   - post.foo
   - xact.foo
   - account.foo
   - report.foo
   - session.foo
   - global.foo
   - options.foo
   - python.foo
   :PROPERTIES:
   :ID:       FA125CB3-F420-4350-9774-83186C81C8F3
   :CREATED:  [2010-06-18 Fri 17:37]
   :END:
** TODO [#C] [[bug:348][#348]] Make Date:: a synonym for just [foo] in a posting comment
   :PROPERTIES:
   :ID:       B301B118-5563-4EC9-8E1E-054819C2898E
   :CREATED:  [2010-06-18 Fri 06:52]
   :END:
** TODO [#C] [[bug:358][#358]] When abbreviating account name, consume trailing whitespace
   :PROPERTIES:
   :ID:       6E041C52-9EB1-45EC-8168-0EA62AB86843
   :CREATED:  [2010-06-21 Mon 18:12]
   :END:
** TODO [#C] [[bug:374][#374]] Problem with periodic transactions having a null posting
   - Note taken on [2010-07-02 Fri 04:16] \\
     Yes, it is expected behavior.  Nice find!  I don't like the idea of
     making a hack to try and get around this, though, it's likely to only
     work right in the most obvious situations.  I'll think about having a
     better way to catch this (like having a warning if a null posting's
     account name contains digits).
   - Note taken on [2010-07-02 Fri 04:15] \\
     Found the problem. In xact.cc, within the declaration for bool
     xact_base_t::finalize(), I tried changing this...
     #+begin_src cpp
     else if (null_post) {
     #+end_src

     to this...
     #+begin_src cpp
     else if (null_post) {
       DEBUG("xact.finalize", "first null post = " <<
     null_post->reported_account()->fullname());
       DEBUG("xact.finalize", "second null post = " <<
     post->reported_account()->fullname());
     #+end_src

     and came up with this output...
     :OUTPUT:
     5ms  [DEBUG] post must balance = $1062.96
     5ms  [DEBUG] first null post = Expenses:Entertainment:Blizzard $16.00
     5ms  [DEBUG] second null post = Assets:Bank:Checking
     :END:
     So there needed to be more than a single space between the account name
     and the transaction amount, or the intended amount was read as part of
     the transaction name.

     I would imagine that this is expected behavior, though if possible it
     would be nice if the parser would account for it such that the last
     non-whitespace text element on a line is used as the amount regardless of
     the amount of space separating it from the previous text element.
   :PROPERTIES:
   :ID:       5D92A5EB-48DD-4ED8-AFED-2A24884FAD4B
   :CREATED:  [2010-07-01 Thu 22:03]
   :END:
** TODO [#C] [[bug:375][#375]] -p "until MONTH YEAR" ignores YEAR, but -p "in MONTH YEAR" works
   :PROPERTIES:
   :ID:       DE5CBC0F-BD49-46A3-AEB1-4F354B9F4A36
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-375-1@http.newartisans.com/bugzilla/][{Bug 375} New: -p "until MONTH YEAR" ignores YEAR, but -p "in MONTH YEAR" works]]
   :CREATED:  [2010-07-05 Mon 00:06]
   :END:
** TODO [#C] [[bug:377][#377]] ledger -f DIRECTORY doesn't fail with a clear error
   :PROPERTIES:
   :ID:       8DC11F98-5C85-4651-A63D-6847474E3CD2
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-377-1@http.newartisans.com/bugzilla/][{Bug 377} New: -f DIRECTORY doesn't fail with a clear error]]
   :CREATED:  [2010-07-15 Thu 08:02]
   :END:
** TODO [#C] [[bug:378][#378]] budget: Cannot convert balance with multiple commodities to amount
   :PROPERTIES:
   :ID:       30B48934-48F2-46B9-B058-99DEF9BF43C7
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-378-1@http.newartisans.com/bugzilla/][{Bug 378} New: budget: Cannot convert a balance with multiple commodities to an amount]]
   :CREATED:  [2010-07-15 Thu 08:02]
   :END:
** TODO [#C] [[bug:379][#379]] equity shows two entries for the same commodity/account
   :PROPERTIES:
   :ID:       B39F083E-1C30-4F08-BFB7-E0E1FC7B7356
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-379-1@http.newartisans.com/bugzilla/][{Bug 379} New: equity shows two entries for the same commodity/account]]
   :CREATED:  [2010-07-15 Thu 08:02]
   :END:
** TODO [#C] [[bug:380][#380]] "Unbalanced remainder" pops up depending on the order of postings
   :PROPERTIES:
   :ID:       1E192DF6-AB81-4DC0-A205-1AAF00F64052
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-380-1@http.newartisans.com/bugzilla/][{Bug 380} New: "Unbalanced remainder" pops up depending on the order of postings]]
   :CREATED:  [2010-07-17 Sat 05:01]
   :END:
** TODO [#C] [[bug:381][#381]] ledger bal and --forecast gives wrong result (60 * of monthly value)
   :PROPERTIES:
   :ID:       24678A34-5DD0-4119-B0CB-CC56ED5CA3D8
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-381-1@http.newartisans.com/bugzilla/][{Bug 381} New: ledger bal and --forecast gives wrong result (60 * of monthly value)]]
   :CREATED:  [2010-07-18 Sun 23:13]
   :END:
** TODO [#C] [[bug:382][#382]] treats {xx} as {=xx}
   :PROPERTIES:
   :ID:       15D16351-F0B2-4B79-8BCE-A47193607CDB
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-382-1@http.newartisans.com/bugzilla/][{Bug 382} New: treats {xx} as {=xx}]]
   :CREATED:  [2010-07-19 Mon 16:59]
   :END:
** TODO [#C] [[bug:383][#383]] --lot-prices doesn't honour date-format
   :PROPERTIES:
   :ID:       FDC49608-9E96-4DF5-AFD8-BA2041A89D82
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-383-1@http.newartisans.com/bugzilla/][{Bug 383} New: --lot-prices doesn't honour date-format]]
   :CREATED:  [2010-07-19 Mon 17:43]
   :END:
** TODO [#C] [[bug:384][#384]] ledger shows lot prices for fixated commodities when not requested
   :PROPERTIES:
   :ID:       D4668D57-05F9-46E4-A1D6-1B4CA122588C
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-384-1@http.newartisans.com/bugzilla/][{Bug 384} New: ledger shows lot prices for fixated commodities even when I didn't request it]]
   :CREATED:  [2010-07-19 Mon 17:52]
   :END:
** TODO [#C] [[bug:390][#390]] Cannot access account total in automated transaction
   :PROPERTIES:
   :ID:       38AB760F-06BC-401A-8FED-A8B394125D20
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-390-1@http.newartisans.com/bugzilla/][{Bug 390} New: Cannot access account total in automated transaction]]
   :CREATED:  [2010-08-01 Sun 18:55]
   :END:
** TODO [#C] [[bug:395][#395]] Need commodity alias
   :PROPERTIES:
   :ID:       13B53049-4795-4111-A679-6866AEFC4640
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-395-1@http.newartisans.com/bugzilla/][{Bug 395} New: need commodity alias]]
   :CREATED:  [2010-08-16 Mon 16:28]
   :END:
** TODO [#C] [[bug:398][#398]] Default commodity depends on the order of postings
   :PROPERTIES:
   :ID:       9A925FF4-5BDD-489C-8585-BAABB61BF345
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-398-1@http.newartisans.com/bugzilla/][{Bug 398} New: default commodity depends on the order of postings]]
   :CREATED:  [2010-08-16 Mon 16:28]
   :END:
** TODO [#C] [[bug:399][#399]] Add function to determine budgeted amount for a time period
   budget_amount(ACCOUNT, START_DATE, DAYS)
   :PROPERTIES:
   :ID:       E38F502D-9E83-485D-9D10-848B0CFD6FDD
   :CREATED:  [2010-08-16 Mon 19:47]
   :END:
** TODO [#C] [[bug:400][#400]] -l commodity and -B
   :PROPERTIES:
   :ID:       79B191C4-5A95-408B-A473-6D1520129941
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :CREATED:  [2010-08-28 Sat 15:33]
   :END:
** TODO [#C] [[bug:401][#401]] -l "commodity = ''AA1" doesn't match when commodity contains digits
   :PROPERTIES:
   :ID:       F3B9F18B-9366-4607-9B28-4912123E9140
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-401-1@http.newartisans.com/bugzilla/][{Bug 401} New: -l "commodity = ''AA1" doesn't match when commodity contains digits]]
   :CREATED:  [2010-08-28 Sat 15:33]
   :END:
** TODO [#C] [[bug:402][#402]] Enhance color output for --budget
   :PROPERTIES:
   :ID:       016E1187-1FB7-4E77-906D-55D490588D24
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-402-1@http.newartisans.com/bugzilla/][{Bug 402} New: Enhance color output for --budget]]
   :CREATED:  [2010-08-29 Sun 19:25]
   :END:
** TODO [#C] [[bug:410][#410]] Forecasting is broken
   :PROPERTIES:
   :ID:       6F51229F-1C32-4C01-983A-52BA47421A38
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-410-1@http.newartisans.com/bugzilla/][{Bug 410} New: Forecasting broken]]
   :CREATED:  [2010-10-03 Sun 22:16]
   :END:
** TODO [#C] [[bug:412][#412]] Error masked by certain options with -J -X EUR
   :PROPERTIES:
   :ID:       660641D5-0203-4A95-83A0-58E055803311
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-412-1@http.newartisans.com/bugzilla/][{Bug 412} New: error masked by certain options with -J -X EUR]]
   :CREATED:  [2010-11-13 Sat 12:01]
   :END:
** TODO [#C] [[bug:417][#417]] '&' in account names causes trouble during GNU Cash import
   In gnucash, I have an account called "1 & 1 Internet AG". It appears that
   ledger can deal with that name during import, probably because it's encoded
   as "1 &amp; 1 Internet AG" in the XML file.
   :PROPERTIES:
   :ID:       8E2A2C39-C8F4-435B-A5FF-754F51FE4EB0
   :Submitter: GitHub <noreply@github.com>
   :Message:  [[message://4c8bd8a9b4d5c_6bdb3fc37c8298743cd@fe3.rs.github.com.tmail][{GitHub} '&' in account names causes trouble during GNU Cash import {jwiegley/ledger GH-16}]]
   :URL:      http://github.com/jwiegley/ledger/issues#issue/16
   :CREATED:  [2010-09-12 Sun 23:14]
   :END:
** TODO [#C] [[bug:436][#436]] Allow multiple null amounts if the rest have balance assignments
   #+begin_src ledger
   2010/01/01 * Check or set balance
      Assets              = $ 1,000
      Equity:Balance
   #+end_src

   What I would expect is:
   - ledger computes the amount x for the first line, so that
      current_assets + x = $ 1,000
   - and then sets equity to -x.
   - and did not work when x = 0.

   It was some time ago, so maybe this works now.  Or is there some reason for
   it not to work that I cannot figure out (my algorithm looks straightforward
   but it might not generalize to more complex cases)?
   :PROPERTIES:
   :ID:       6A3BCDE8-DD0C-4749-888F-71AC6825558A
   :Submitter: Gabriel Kerneis <kerneis@pps.jussieu.fr>
   :Message:  [[message://20101126151723.GA17097@rhodium.pps.jussieu.fr][Re: null amount allowed per entry error because of note]]
   :CREATED:  [2010-11-26 Fri 11:51]
   :END:
** TODO [#C] [[bug:443][#443]] Ignores entry with wrong data instead of giving an error
   :PROPERTIES:
   :ID:       94A4467D-FDD2-47B0-9796-6889824E84BA
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-443-1@http.newartisans.com/bugzilla/][{Bug 443} New: ignores entry with wrong data instead of giving an error]]
   :CREATED:  [2010-11-29 Mon 19:52]
   :END:
** TODO [#C] [[bug:444][#444]] Output of lines w/ negative amounts and thousands separator is 81 chars
   :PROPERTIES:
   :ID:       071633F4-C52A-4BE7-954D-297A0F4B778B
   :Submitter: GitHub <noreply@github.com>
   :Message:  [[message://4cfcd2658178a_635d3fa1c18bc87c270@fe4.rs.github.com.tmail][{GitHub} Output of lines containing negative amounts with thousands separator is 81 chars long {jwiegley/ledger GH-20}]]
   :CREATED:  [2010-12-06 Mon 14:48]
   :END:
** TODO [#C] [[bug:445][#445]] Could handle mixing of decimal comma and decimal point better
   :PROPERTIES:
   :ID:       038408E7-7926-44AC-96D3-0E113E515903
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-445-1@http.newartisans.com/bugzilla/][{Bug 445} New: could handle mixing of decimal comma and decimal point better]]
   :CREATED:  [2010-12-17 Fri 05:14]
   :END:
** TODO [#C] [[bug:462][#462]] Default currency/commodity not respected
   In 2.6.2 on 64-bit ubuntu; calculations in disagreement.
   :PROPERTIES:
   :ID:       BA8A5D0A-C65F-42BC-801F-78A37BD9CDD4
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-462-1@http.newartisans.com/bugzilla/][{Bug 462} New: Default currency/commodity not respected in 2.6.2 on 64-bit ubuntu; calculations in disagreement]]
   :CREATED:  [2011-01-03 Mon 23:10]
   :END:
** DEFERRED [[bug:156][#156]] Instead of unistring(x).length(), have unilength(x)
   - State "DEFERRED"   from "TODO"       [2010-06-01 Tue 17:14]
   :PROPERTIES:
   :ID:       CE4F80CF-B298-43C5-B786-AA8ABEDA05C8
   :CREATED:  [2010-05-27 Thu 01:12]
   :END:
** DEFERRED [[bug:166][#166]] --percent incompatible with --exchange
   - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 01:41] \\
     You are right, --percent cannot handle multiple commodities.  And since
     --exchange always takes place after --percent, it's not as
     straightforward as it seems.  I'm going to defer this bug until after
     3.0, since it may not be worth fixing.  But I'll keep thinking on it.
   I've found that --percent option is incompatible with --exchange.  Well,
    actually I suspect that --percent is not able to handle multi currencies.

    In the following simple exemple, I would have expected that --percent
    option works correctly.

   #+begin_src ledger
   P 2008/01/01 $ €1

   2008/01/11 LIAT
      Expenses:Travel:Airfare                   $40.00
      Liabilities:MasterCard

   2008/02/05 CTX
      Expenses:Travel:Auto                     €240.38
      Liabilities:MasterCard
   #+end_src

    :OUTPUT:
    $ ledger --file=test_12.ledger bal --exchange=€
                €280.38  Expenses:Travel
                 €40.00    Airfare
                €240.38    Auto
               €-280.38  Liabilities:MasterCard
    --------------------
                      0
    :END:
    :OUTPUT:
    $ ledger --file=test_12.ledger bal --exchange=€ --percent
    While evaluating value expression:
     (((is_account & parent) & parent.total) & percent(total,
    parent.total))

    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    While evaluating value expression:
     market(total_expr, date, exchange)
    While evaluating value expression:
     justify(scrub(display_total), 20, -1, true, color)
    Error: Cannot convert a balance with multiple commodities to an amount
    :END:
   :PROPERTIES:
   :ID:       4509F714-BA35-4659-8F57-6BD6A725FA73
   :Message:  [[message://fabd9b4b-3c20-4507-92e5-55a5e8996790@g19g2000yqe.googlegroups.com][--percent incompatible with --exchange]]
   :Submitter: thierry <thierry.daucourt@free.fr>
   :CREATED:  [2010-04-04 Sun 15:11]
   :END:
** DEFERRED [[bug:201][#201]] Handling currencies that were replaced by the Euro
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 12:57] \\
     This is not something that can be supported in 3.0, as I believe it
     requires many supporting features which don't exist yet.  Ledger doesn't
     try this hard to allow for time-bounded commodity translations.
   - Note taken on [2010-05-28 Fri 00:59] \\
     Okay, using
     #+begin_src sh
      C 1.00 EUR = 13.7603 ATS
     #+end_src
     rather than
     #+begin_src sh
      P 2001-12-31 EUR 13.7603 ATS
     #+end_src
     solves most of these issues.

     However, would it be possible to add a date for C?  I'd like to see ATS
     before 2002-01-01 and EUR from then on.
   There are a couple of problems with ledger when using currencies that were
   replaced by the Euro as well as the Euro.

   First, I know that ledger is mostly designed as a "calculator" without any
   knowledge about the actual input.  However, given that some currencies
   were replaced by the Euro and have fixed exchange rates that will not
   change, it would be nice if ledger would know about those.  How about
   adding a text file to ledger that is read by default with such fixed
   conversion rates?  (If you agree, I'm happy to write one for the
   currencies replaced by the Euro.)

   Related to this is a problem with showing currencies.  Let's say that I
   have accounts with ATS, EUR and GBP.  How can I tell ledger to convert ATS
   to EUR but do no other conversation.  -X EUR won't work because it would
   also convert GBP, but I want to see both EUR and GBP (I just want the
   obsolete ATS to be converted to EUR).  Is this possible somehow?

   Finally, there appear to be some artefacts because ledger doesn't know
   that ATS is a currency replaced by EUR.  Normally, "ledger bal" does not
   display accounts that are empty (see the first example below).  But if I
   put something into an account as ATS and then take out exactly the same
   amount (but as EUR), "ledger bal" will show the account name and "0"
   (probably because it switches to commodity mode).

   Example:

   a)
   #+begin_src sh
   2010-04-02 Test
      A:Foo  10.00
      A:Bar

   2010-04-02 Test
      A:Foo  -10.00
      A:Baz
   #+end_src

   b)
   #+begin_src sh
   P 2001-12-31 EUR 13.7603 ATS

   2001-01-01 Test
      B:Foo  13.7603 ATS
      B:Bar

   2010-04-02 Test
      B:Foo  -1.00 EUR
      B:Baz
   #+end_src

   a) will show no Foo with "ledger bal" but b) will show "0 Foo".
   :PROPERTIES:
   :ID:       9EAC63D2-8DD7-438D-9767-3AAE79BF0BD3
   :Message:  [[message://20100402164233.GA10410@jirafa.cyrius.com][Handling currencies that were replaced by the Euro]]
   :Submitter: Martin Michlmayr <tbm@cyrius.com>
   :CREATED:  [2010-04-04 Sun 15:18]
   :END:
** REVIEW [[bug:555][#555]] ledger stats reports days per posting, not postings per day
- State "REVIEW"     from "TODO"       [2012-02-23 Thu 21:50]
- State "DONE"       from "TODO"       [2011-11-18 Fri 20:02]
   :PROPERTIES:
   :ID:       8F064DBC-02B3-4746-A27B-C33AE1FDC1BE
   :CREATED:  [2011-10-10 Mon 15:02]
   :Date:     Mon, 10 Oct 2011 19:16:34 +0000
   :Message:  [[message://bug-555-1@http.bugs.ledger-cli.org/][{Bug 555} New: ledger stats reports days per posting, not postings per day]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** REVIEW [[bug:565][#565]] Transactions with leading whitespace not detected
- State "REVIEW"     from "DUPLICATE"  [2012-02-23 Thu 21:51]
- Note taken on [2011-08-21 Sun 18:53] \\
  I believe it's a regression in 3.0.  I filed a bug report about this some
  time ago: http://bugs.ledger-cli.org/show_bug.cgi?id=443
In the attached sample ledger file a space has been inadvertently inserted
preceding one of the transaction dates.

ledger-2.6.3 Detects the error and emits:
:OUTPUT:
Error: "sample.ldg", line 6: Line begins with whitespace
Error: "sample.ldg", line 7: Line begins with whitespace
Error: "sample.ldg", line 8: Line begins with whitespace
:END:

This looks good to me.

On the other hand ledger-3.0 (beta) silently ignores the offending
transaction.

Is the change in behaviour intentional? Is there an option in 3.0 that
yields the stricter (and in my view more reassuring) behaviour of 2.6.3?
:PROPERTIES:
:ID:       8EAF77C0-C2FA-4B8D-BAEE-4A886CEAE106
:CREATED:  [2011-08-21 Sun 18:53]
:Date:     Sun, 21 Aug 2011 22:12:40 +0100
:Message:  [[message://20049.29896.551391.272261@dk.dks.ie][ledger syntax checking.]]
:Submitter: "David Keegan" <dksw@eircom.net>
:END:
** DONE Ledger is failing test/regress/D060256A.test
SCHEDULED: <2012-02-17 Fri>
- State "DONE"       from "TODO"       [2012-02-17 Fri 17:11]
:PROPERTIES:
:ID:       390D8B54-6E5E-453A-993C-45521CAE904B
:CREATED:  [2012-02-16 Thu 19:31]
:END:
** DONE [[bug:632][#632]] Strange "print" behavior in comments
- State "DONE"       from "TODO"       [2012-02-26 Sun 02:10]
Related question: is there a way to specify that ledger should not
reformat comments?  In other words:

If the comment is on the same line as the account, such as
#+begin_src ledger
   Expenses   $10  ; very long comment on this account that exceeds the width
#+end_src

Then the comment should NOT be wrapped; and if the comment is on the following
line, such as:
#+begin_src ledger
   Expenses   $10
   ; short comment
#+end_src

Then it should not be combined with the previous line.
:PROPERTIES:
:ID:       50D6F711-7C3B-4BF8-B5F5-DB94B997BD04
:CREATED:  [2012-02-06 Mon 14:30]
:Date: Tue, 31 Jan 2012 09:33:48 -0800 (PST)
:Message: [[message://37986445-0db3-476b-8f70-d6a59236bb4e@i10g2000pbl.googlegroups.com][Re: Strange "print" behavior in comments]]
:Author: Hsiu-Khuern Tang <tangoh-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** WONTFIX [#A] [[bug:406][#406]] Unable to install ledger on Ubuntu Hardy
- State "WONTFIX"    from "TODO"       [2012-02-27 Mon 23:10]
   :PROPERTIES:
   :ID:       418D7760-03CD-441B-847F-BCD7EDE82E68
   :CREATED:  [2011-06-14 Tue 19:21]
   :END:
** WONTFIX [#A] [[bug:418][#418]] Ledger 3.0 will not build under cygwin on Windows
- State "WONTFIX"    from "TODO"       [2012-02-27 Mon 23:10]
   :PROPERTIES:
   :ID:       C3AEDBF3-B2BD-4112-9EDE-865023E06532
   :CREATED:  [2011-06-14 Tue 19:21]
   :END:
** WONTFIX [[bug:592][#592]] 'print' command does not handle multiple spaces in the payee
- State "WONTFIX"    from "TODO"       [2011-11-22 Tue 23:45]
  :PROPERTIES:
  :ID:       EC6FCE89-CFFD-4EC0-9882-1D2F0F94C2DD
  :CREATED:  [2011-11-01 Tue 10:06]
  :Date:     Thu, 27 Oct 2011 20:18:21 -0700
  :Message:  [[message://jwiegley/ledger/issues/44@github.com][{ledger} print command does not handle multiple spaces in the payee]]
  :Submitter: Peter Ross <reply+i-2075303-b72936dde164d8d4ce9bb65f0ae35544d621b8a8@reply.github.com>
  :END:
** WORKSFORME [#A] [[bug:388][#388]] Can't build next branch OS X 10.6.4 (Intel)
- State "WORKSFORME" from "TODO"       [2012-02-27 Mon 22:53]
   :PROPERTIES:
   :ID:       0E257D11-B836-4ACF-A937-7DEC4C0F28C0
   :CREATED:  [2011-06-14 Tue 19:21]
   :END:
** WORKSFORME [#A] [[bug:503][#503]] Abort trap on MacOS 10.6.7                                      :blocker:
- State "WORKSFORME" from "TODO"       [2012-02-27 Mon 23:11]
   :PROPERTIES:
   :ID:       CDEDA0D4-A7D1-4BEC-B8C6-F93EA8FFE305
   :CREATED:  [2011-04-01 Fri 18:58]
   :Message:  [[message://4D95020C.9090801@gmail.com][Re: Abort trap on MacOS 10.6.7]]
   :Submitter: Michael Norrish <michael.norrish@gmail.com>
   :Date:     Fri, 01 Apr 2011 09:37:00 +1100
   :END:
** WORKSFORME [[bug:516][#516]] Ledger entry takes the first entry
- State "WORKSFORME" from "DONE"       [2011-11-18 Fri 20:03]
- State "DONE"       from "TODO"       [2011-11-18 Fri 20:02]
   The `entry' command for ledger-2 made it search for the last entry of the
   chosen payee. This makes sense because the way we log transactions for any
   payee may change over time and then it is most probable that the most
   recent is what we want. If I buy food in the nearby supermarket and record
   transactions like this:
   #+begin_src ledger
   2011-01-02 SuperMarket
   Expense:Food:Groceries    10,00 PLN
   Expense:Cash
   #+end_src
   then it is sufficient to say: `ledger entry 2011-02-03 SuperMarket 20', to
   get:
   #+begin_src ledger
   2011-02-03 SuperMarket
   Expense:Food:Groceries    20,00 PLN
   Expense:Cash
   #+end_src

   However, it looks like ledger-3 (365188a1) outputs entry after finding the
   first transaction. So if the first thing I bough in the nearby supermarket
   was a hammer:
   #+begin_src ledger
   2011-02-03 SuperMarket
   Expense:Tools    12,00 PLN
   Expense:Cash
   #+end_src
   then I have to specify `Groceries' account ever after (until I buy a
   screwdriver). This wouldn't be much of a problem as 'Gr' is enough to
   ditinguish from Tools but I've got several accounts with :AtWork
   subaccounts which makes it quite cumbersome to write it everytime.
   :PROPERTIES:
   :ID:       7C148789-529A-4026-AF0E-354D9F62CC3A
   :CREATED:  [2011-05-10 Tue 09:11]
   :Message:  [[message://87bozgwym5.fsf%lukasz.stelmach@iem.pw.edu.pl][{BUG} ledger entry takes the firs entry]]
   :Submitter: =?utf-8?Q?=C5=81ukasz?= Stelmach <lukasz.stelmach@iem.pw.edu.pl>
   :Date:     Fri, 06 May 2011 00:50:42 +0200
   :END:
** WORKSFORME [[bug:614][#614]] --input-date-format does not effect convert
- State "WORKSFORME" from "TODO"       [2012-02-23 Thu 21:41] \\
  Craig Earls: I don't know what was happening earlier today, this is now
  working.
:PROPERTIES:
:ID:       1FFA2CFA-BB14-4245-9029-34E868EE3EF9
:CREATED:  [2011-12-13 Tue 19:04]
:Date: Tue, 13 Dec 2011 22:43:37 +0000
:Message: [[message://bug-614-1@http.bugs.ledger-cli.org/][{Bug 614} New: --input-date-format does not effect convert]]
:Submitter: bugzilla-daemon@mail.johnwiegley.com
:END:
** INVALID [[bug:508][#508]] Register command doesn't filter anymore
- State "INVALID"    from "DONE"       [2011-11-18 Fri 20:03] \\
  Not a bug.  Works in V3 if you use --limit properly:
  #+begin_src sh
  ledger reg --limit "(account=~/Expenses/ & payee=~/Andy/)"
  #+end_src
  
  Might be some incantation that is briefer but this is very clear.
- State "DONE"       from "TODO"       [2011-11-18 Fri 20:02]
   :PROPERTIES:
   :ID:       3752B680-236C-4FAA-902F-D7EAAC980EEA
   :CREATED:  [2011-05-10 Tue 09:03]
   :Message:  [[message://bug-508-1@http.newartisans.com/bugzilla/][{Bug 508} New: Register command doesn't filter anymore]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Sun,  8 May 2011 19:34:29 -0500 (CDT)
   :END:
** INVALID [[bug:556][#556]] Value expressions do not handle significant figures correctly
- State "INVALID"    from "TODO"       [2011-11-22 Tue 17:53] \\
  Craig: Ledger is following the real world's rules for sigfigs.  Don't
  know what I was thinking.
   :PROPERTIES:
   :ID:       C5CB053F-0428-4A0F-A49D-B405984ED141
   :CREATED:  [2011-10-13 Thu 16:05]
   :Date:     Thu, 13 Oct 2011 20:32:40 +0000
   :Message:  [[message://bug-556-1@http.bugs.ledger-cli.org/][{Bug 556} New: Value expressions do not handle significant figures correctly]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :END:
** INVALID [[bug:601][#601]] ledger entry command skipping digit after currency sign
- State "INVALID"    from "TODO"       [2011-11-21 Mon 20:26] \\
  $ in front of a number is a shell command that never makes it to ledger.
  Quote it or leave it off.  This is not a ledger bug.
  :PROPERTIES:
  :ID:       D07EC69C-B9C0-4144-AB1E-9BE9D2846EB3
  :CREATED:  [2011-11-15 Tue 12:50]
  :Date:     Tue, 15 Nov 2011 18:35:08 +0000
  :Message:  [[message://bug-601-1@http.bugs.ledger-cli.org/][{Bug 601} New: ledger entry command skipping digit after currency sign]]
  :Submitter: bugzilla-daemon@mail.johnwiegley.com
  :END:
** DUPLICATE [[bug:563][#563]] Highlight account names with spaces
- State "DUPLICATE"  from "TODO"       [2011-11-21 Mon 16:07] \\
  Duplicate of #524.
   I started using `ledger-mode` provided by `ldg-new.el` over 2.6.2's
   ledger-mode` and noticed it stopped highlighting account names with
   spaces. I think this fix is reasonable, though I'm having a really hard
   time with emacs regexp for some reason.
   :PROPERTIES:
   :ID:       35F37F42-4D5B-4DB6-B4CD-06253741B028
   :CREATED:  [2011-08-28 Sun 14:00]
   :Date:     Sun, 28 Aug 2011 08:36:27 -0700
   :Message:  [[message://jwiegley/ledger/pull/37@github.com][{ledger} Highlight account names with spaces ]]
   :Submitter: dpiddy <reply+i-1504015-00cea49a44f8de09cf5765af8085fdcc0692e908@reply.github.com>
   :END:
** DUPLICATE [[bug:564][#564]] Double-quoted filename in Emacs output breaks reconciliation
- State "DUPLICATE"  from "TODO"       [2012-02-23 Thu 21:40] \\
  Duplicate of 525.
   :PROPERTIES:
   :ID:       CCDFD6E8-C816-4BCA-8C18-EE7C9A076140
   :CREATED:  [2011-08-22 Mon 17:08]
   :Date:     Mon, 22 Aug 2011 22:03:56 +0100
   :Message:  [[message://20050.50236.344154.205060@dk.dks.ie][Emacs reconciliation 3.0]]
   :Submitter: "David Keegan" <dksw@eircom.net>
   :END:
* Emacs
  :PROPERTIES:
  :CATEGORY: Emacs
  :END:
** TODO [[bug:431][#431]] Reconciling with ledger.el doesn't seem to work
   I use ledger.el with GNU Emacs 23.2.1. Is that supported at all? I wonder,
   because the reconcile mode doesn't seem to work. Hitting SPACE or RETURN
   doesn't do anything. I can use other keys such as 'r', 's', etc., but those
   are useless without the ability to clear a transaction with SPACE. Am I
   doing something wrong, or is that a known problem with Emacs 23?
   :PROPERTIES:
   :ID:       70FDB8A4-6552-44AF-AD81-D0C412A905DE
   :Submitter: GitHub <noreply@github.com>
   :Message:  [[message://4c8e1d53a5fb0_5b163fae2e59506c1fb@fe1.rs.github.com.tmail][{GitHub} Reconciling with ledger.el doesn't seem to work {jwiegley/ledger GH-17}]]
   :CREATED:  [2010-09-13 Mon 17:19]
   :END:
** TODO [[bug:442][#442]] Trouble with the emacs reconciling features
   - Note taken on [2010-11-26 Fri 13:45] \\
     Scott Walck: Thanks, Tom.  That worked great.
   - Note taken on [2010-11-26 Fri 13:45] \\
     Tom Rindborg: I had the same problem, and I have filed a bug report for
     it. The reason is that (car where) evaluates to "/dev/stdin" on Linux.

     While waiting for an official bug fix you can fix the problem with the
     following sed command:
     :OUTPUT:
     sed -e 's|(equal (car where) "<stdin>")|(string-match-p "stdin" (car where))|' -i ledger.el
     :END:
   I just installed ledger on a new computer (ubuntu 10.04) and I am having
   trouble with the emacs reconciling features that have worked well in the
   past on other computers.  When I open a reconciling buffer, the space bar
   does not toggle a transaction like it should.  When I change ledger.el as
   follows, skipping the equality test between (car where) and "<stdin>",
   things seem to work again.
   :PROPERTIES:
   :ID:       EA4933EE-A324-4925-9827-7D594E9A6441
   :Submitter: Scott Walck <scott.n.walck@gmail.com>
   :Message:  [[message://cc55b8f2-8b24-4a8f-ad3e-8c2842722593@l6g2000yqb.googlegroups.com][ledger.el troubles]]
   :CREATED:  [2010-10-03 Sun 22:16]
   :END:
** TODO [[bug:465][#465]] ledger.el tweak for handling yyyy-mm-dd
   :PROPERTIES:
   :ID:       8BFE15FF-71AD-4F4E-AE15-C922E6A10205
   :Submitter: jimr <jim.robinson@gmail.com>
   :Message:  [[message://52d270cf-30a2-45c1-9ad2-c0b95b0539b9@z26g2000prf.googlegroups.com][ledger.el tweak for handling yyyy-mm-dd]]
   :CREATED:  [2011-01-02 Sun 09:16]
   :END:
** TODO [[bug:467][#467]] ledger.el won't highlight account names if they have a space
   :PROPERTIES:
   :ID:       02CD3C95-0B6A-4B09-8C33-4D5CE6ACB93C
   :Submitter: GitHub <noreply@github.com>
   :Message:  [[message://4d26879ee6e14_2a73fd58175e87412f@fe2.rs.github.com.tmail][{GitHub} ledger.el won't highlight account names if they have a space {jwiegley/ledger GH-21}]]
   :CREATED:  [2011-01-07 Fri 04:48]
   :END:
** TODO [[bug:479][#479]] Descriptions of cleared transactions are not highlighted
   :PROPERTIES:
   :ID:       D26858FD-A897-4D2D-98F9-156ADB25D22F
   :CREATED:  [2011-02-12 Sat 14:34]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-479-1@http.newartisans.com/bugzilla/][{Bug 479} New: Descriptions of cleared transactions are not highlighted]]
   :END:
** TODO [[bug:485][#485]] Problem reconciling with ledger.el: spacebar does nothing
   :PROPERTIES:
   :ID:       8C580CBF-4759-452D-9AF6-51E6ADECFDC3
   :CREATED:  [2011-02-12 Sat 00:16]
   :Message:  [[message://25362.2107.1297417062067.JavaMail.geo-discussion-forums@yqmi40][Problem Reconciling with ledger.el - Spacebar Does Nothing]]
   :END:
** TODO [[bug:495][#495]] Emacs ledger mode v3 & reconcile
   - Note taken on [2011-03-07 Mon 14:51] \\
     [[message://AANLkTin2T3zbdXqEHiu2_OVP%2BW_xEdyQPoRBDtYXkEBa@mail.gmail.com][Re: emacs ledger mode v3 & reconcile]]
   - Note taken on [2011-03-07 Mon 14:51] \\
     [[message://AANLkTimeY0_PbDM8sZr41uf74Ch3tEXtOGfOTi6RHSF7@mail.gmail.com][Re: emacs ledger mode v3 & reconcile]]
   :PROPERTIES:
   :ID:       EEAF4E93-18DA-4658-BDFE-E10172158396
   :CREATED:  [2011-03-07 Mon 14:50]
   :Message:  [[message://AANLkTimzfEdDUv6uNvFcCw6k2h2Gfasdh-jR4KsB+rDC@mail.gmail.com][emacs ledger mode v3 & reconcile]]
   :Submitter: Thierry Daucourt <thierry.daucourt@free.fr>
   :Date:     Sat, 5 Mar 2011 15:33:35 +0100
   :END:
** TODO [[bug:502][#502]] Auto-complete with Ledger.el in Emacs
   Right now ledger.el only reads the text in the current file.  You could put
   a dummy transaction at the top which transfer zero dollars among a bunch of
   accounts.  But I'll make a note that it should follow file inclusions to
   determine the complete set of account names.
   :PROPERTIES:
   :ID:       6BF64136-5B4A-4FA2-AC90-5AB3D90A16C3
   :CREATED:  [2011-03-30 Wed 14:15]
   :Message:  [[message://1357411.342.1301506462564.JavaMail.geo-discussion-forums@yqis17][Auto-complete with Ledger.el in Emacs.]]
   :Submitter: Ian Barton <ian@wilkesley.com>
   :Date:     Wed, 30 Mar 2011 10:34:22 -0700 (PDT)
   :END:
** TODO [[bug:509][#509]] Reconciling using ledger.el doesn't work with latest ledger from git
   :PROPERTIES:
   :ID:       9D4B86FB-8B91-48CA-91B9-2F586D14C60D
   :CREATED:  [2011-05-13 Fri 12:02]
   :Message:  [[message://bug-509-1@http.newartisans.com/bugzilla/][{Bug 509} New: reconciling using ledger.el doesn't work with latest ledger from git]]
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Date:     Wed, 11 May 2011 06:21:06 -0500 (CDT)
   :END:
** TODO [[bug:521][#521]] ledger and currency format in entry command
   My problem is not with ledger mode, but with ledger entry command. If I
   omit the commodity in the entry command the dot is recognized as thousands
   separator rather than decimal separator:
   :OUTPUT:
   $ ledger -f BR01.dat entry 05/13 Salsa Resta 12.00 Cash

   2011/05/13 Salsalito
       Expenses:Restaurante                       1.200
       Assets:Cash

   $ ledger -f BR01.dat entry 05/13 Salsa Resta 12,00 Cash

   2011/05/13 Salsalito
       Expenses:Restaurante                       12,00
       Assets:Cash
   :END:
   But the question is why is ledger using comma as default decimal separator
   if I have in my ledger file BR01.dat the line:
   #+begin_src ledger
   D $1,000.00
   #+end_src
   :PROPERTIES:
   :ID:       A7B25520-3540-48E9-B2CF-F1E738B06BC3
   :CREATED:  [2011-05-17 Tue 17:16]
   :Message:  [[message://25416512.4102.1305385663024.JavaMail.geo-discussion-forums@vbqe26][ledger and currency format in entry command]]
   :Submitter: Alexandre Rademaker <arademaker@gmail.com>
   :Date:     Sat, 14 May 2011 08:07:43 -0700 (PDT)
   :END:
** TODO [[bug:523][#523]] Two patches for ledger.el
   :PROPERTIES:
   :ID:       10257074-8228-4DA0-B004-503A47561D6A
   :CREATED:  [2011-04-07 Thu 01:39]
   :Message:  [[message://jwiegley/ledger/pull/25@github.com][{GitHub} Two patch for ledger.el {jwiegley/ledger GH-25}]]
   :Submitter: vanicat <reply+i-738876-e6c2bd7e07d155e7598aca9c15a040a6dc86b89a@reply.github.com>
   :Date:     Wed, 6 Apr 2011 11:20:37 -0700
   :END:
** TODO [[bug:524][#524]] ledger.el, highlighting of account names w/spaces
   I'm using the git ledger 3.0, and notice that account names with spaces
   in them are not highlighted properly. I'm quite sure single spaces are
   allowed in account names, and it troubles my little mind when they are
   not highlighted properly. I suspect the following font-lock statement:
   #+begin_src lisp
   (defvar ledger-font-lock-keywords
     '(("\\(       \\|  \\|^\\)\\(;.*\\)" 2 font-lock-comment-face)
       ("^[0-9]+[-/.=][-/.=0-9]+\\s-+\\(([^)]+)\\s-+\\)?\\([^*].+?\\)\\(\\(        ;\\|  ;\\|$\\)\\)" 2 bold)
       ;;("^[0-9]+[-/.=][-/.=0-9]+\\s-+\\(([^)]+)\\s-+\\)?\\([*].+?\\)\\(\\(       ;\\|  ;\\|$\\)\\)"
       ;; 2 font-lock-type-face)
       ("^\\s-+\\([*]\\s-*\\)?\\(\\([[(]\\)?[^*:
           ]+?:[^]);
           ]+?\\([])]\\)?\\)\\(    \\|  \\|$\\)"
        2 font-lock-keyword-face)
       ("^\\([~=].+\\)" 1 font-lock-function-name-face)
       ("^\\([A-Za-z]+ .+\\)" 1 font-lock-function-name-face))
     "Expressions to highlight in Ledger mode.")
   #+end_src
   In particular, the "font-lock-keyword-face" part. After staring at the
   regexp, however, I can't tell where the whitespace counter should be
   inserted. Can someone fix it?

   Sorry for the petty confusion, but it does make a difference...
   :PROPERTIES:
   :ID:       6212750C-AC03-41CB-968B-2EE1E64C747E
   :CREATED:  [2011-04-20 Wed 18:01]
   :Message:  [[message://87bp03apoz.fsf@ericabrahamsen.net][ledger.el, highlighting of account names w/spaces]]
   :Submitter: Eric Abrahamsen <eric@ericabrahamsen.net>
   :Date:     Mon, 18 Apr 2011 17:12:12 +0800
   :END:
** TODO [[bug:525][#525]] Trouble with Emacs ledger-mode
   - Note taken on [2011-06-09 Thu 01:21] \\
     My emergency workaround (for the past several weeks) has been to use
     some elisp to remove the double quotes:

     #+begin_src diff
     diff --git a/ledger/ledger.el b/ledger/ledger.el
     index 8e4de27..20a4370 100644
     --- a/ledger/ledger.el
     +++ b/ledger/ledger.el
     @@ -583,6 +583,9 @@ dropped."
                   (ledger-run-ledger buf "--uncleared" "emacs" account)))
              (when (= 0 exit-code)
                (goto-char (point-min))
     +		(while (re-search-forward "\"\"" nil t)
     +            (replace-match "\""))
     +		(goto-char (point-min))
                (unless (eobp)
                  (unless (looking-at "(")
                    (error (buffer-string)))
     #+end_src

     Obviously, this is not a long-term solution. :)
   In my case it errors out in the function ledger-do-reconcile at the point
   it is trying to goto the line number in the ledger file for a particular
   transaction.  The uncleared transactions are in a list structure that I
   think _should_ look something like:
   #+begin_src lisp
   ((/dev/stdin 1890 (19667 18688 0) nil "John Lewis"
    (1897 "Liabilities:premier" "£-159.00" nil))...
   #+end_src

   The file line numbers are the second item in the detail of each
   transction which are dug out with an (nth 1 call and passed to
   goto-line.  What I see being passed through to goto-line is actually
   /dev/stdin, which, not being a file position causes the error.

   The transaction list is built by a call out to ledger with the emacs
   option that returns a stream suitable for the lisp reader to swallow up.
   In my case that stream looks like:
   #+begin_src lisp
   ((""/dev/stdin"" 1890 (19667 18688 0) nil "John Lewis"
    (1897 "Liabilities:premier" "£-159.00" nil))...
   #+end_src

   with those odd looking doubled quotes.  I am guessing but it looks
   like the reader is seeing an empty string as the first item in the list
   and therefore /dev/stdin, rather than the line number, as the second.

   This isn't a lisp issue.  I am getting those doubled quotes on the
   command line as well.  If they are the source of the problem then I'm
   sorry but I have no idea where they are coming from.

   For what it is worth I am building with boost 1.46.1
   :PROPERTIES:
   :ID:       2D813401-0D9C-469B-B047-EDF21AA53520
   :CREATED:  [2011-04-23 Sat 05:03]
   :Message:  [[message://m2tydqtu2z.fsf@bo.sak.lan][Re: Trouble with Emacs ledger-mode]]
   :Submitter: Philip Rooke <phil@yax.org.uk>
   :Date:     Fri, 22 Apr 2011 12:16:04 +0100
   :END:
** TODO [[bug:526][#526]] ledger-mode.el does not recognize decimal dot separator
   I upgraded to Aquamacs Distribution 2.2 in Mac OS 10.6.7 running Ledger
   2.6.2 few weeks ago. After that, my ledger-mode.el does not recognize the
   decimal dot separator in the amount when I create a new entry with the
   command C-c C-a. Have anyone had similar problem?
   :PROPERTIES:
   :ID:       AB161685-E9AD-4240-8477-E31FFAD26A38
   :CREATED:  [2011-05-17 Tue 17:16]
   :Message:  [[message://30767627.3925.1305383585634.JavaMail.geo-discussion-forums@vbjh33][ledger-mode.el]]
   :Submitter: Alexandre Rademaker <arademaker@gmail.com>
   :Date:     Sat, 14 May 2011 07:33:05 -0700 (PDT)
   :END:
** TODO [[bug:527][#527]] Include check numbers in emacs reconcile buffer
   Is there an option I can set to include check numbers in the reconcile
   buffer when I'm reconciling an account using emacs?
   :PROPERTIES:
   :ID:       F5EDFAC6-850F-4558-B367-63AE454AABDC
   :CREATED:  [2011-04-23 Sat 21:38]
   :Message:  [[message://m362q52fiu.fsf@buster.johnrakestraw.com][Include check numbers in emacs reconcile buffer?]]
   :Submitter: John Rakestraw <johnr@johnrakestraw.com>
   :Date:     Sat, 23 Apr 2011 10:44:57 -0400
   :END:
** TODO [[bug:545][#545]] Create a quick entry function for Ledger to reduce keystrokes
    It lets me just say "exxon 10" at the minibuffer, then takes me to the entry.
    :PROPERTIES:
    :ID:       7E625CF1-1258-4B29-9227-29153CC54B53
    :CREATED:  [2011-07-09 Sat 20:44]
    :END:
** TODO [[bug:620][#620]] The -j option needs a way to specific the base to report values in
If you report the following data using "reg -j", it outputs commodityless
values that nonetheless have different bases: some are minute quantities,
others are hour quantities.

You can get around this using --base, however then your only recourse is to
report in terms of seconds.  But what if you wanted to graph hours worked per
day?  The -j option should force use of the default base (hours), and then
there should be an option added to manually specify the reporting base, such
as  "--use-base m".
:PROPERTIES:
:ID:       B7C2C869-7319-449C-8350-E14F3A26DCB8
:CREATED: [2012-02-23 Thu 21:52]
:END:
** TODO [[bug:638][#638]] ledger-mode dropping first digit of inserted dates
I use Aquamacs on OS X.  When I use the ledger-mode facility for adding
entries, ledger-mode inserts the entry without the most significant digit. For
example:
#+begin_src ledger
011/11/15 Bountiful Baskets
    Expenses:Groceries                        $16.50
    Assets:VWCU:Joint Checking
#+end_src

Which requires hand correction.
:PROPERTIES:
:ID:       E39956E4-B4BF-4B83-B80D-38820CCEFAFB
:CREATED:  [2011-11-15 Tue 18:05]
:Date:     Tue, 15 Nov 2011 10:07:17 -0700
:Message:  [[message://CAKs9TOJfSSjmqfi8i7xu=JdqJ=aayRgkwdxRdvJt4CUcgW7oMQ@mail.gmail.com][Minor annoyance with emacs mode]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:639][#639]] Highlight accounts with spaces in Emacs
I have recently upgraded to ledger 3.0 and found that highlight of account
names with spaces is broken. I took a look at git repo and found that there's
a change set fixing exactly the same problem in 2009:
https://github.com/jwiegley/ledger/commit/8834fc0c15a53b8db8c2aaee95d2b25a050fe786

However the change set above adresses file ldg-mode.el, not ledger.el, I guess
something has been changed with packaging. Anyway I just reapplied this patch
to ledger.el locally and problem is fixed.
:PROPERTIES:
:ID:       E6D64332-BD37-48FD-A9B7-ACD1D213C240
:CREATED:  [2012-02-06 Mon 14:29]
:Date: Mon, 16 Jan 2012 21:58:28 -0800 (PST)
:Message: [[message://dd6656b9-eb45-4df1-a78d-6476cf75d112@a11g2000vbz.googlegroups.com][Highlight accounts with spaces in Emacs]]
:Author: Ivan <ivan.inozemtsev-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:653][#653]] Do automatic transactions break emacs reconcile mode?
This may be related to a feature request I made a while back.  Automatic
transactions are getting reported to the reconciliation mode as uncleared
transactions.  This appears to be breaking the reconciliation mode.  reconcile
gives a paramter error that happens to complain about a check number I have in
my jounral.  I added --real to the ledger command called by ledger and it no
longer complains, but the buffer is empty.  It doesn repond to the 'q'
command, but nothing else I do seems to bring anything up in the buffer.

I assume that if I type C-c C-r Expenses, the reconcile buffer should show all
my uncleared transactions.  All I get is an empty buffer.
:PROPERTIES:
:ID:       A7D23C81-73A4-4849-BB03-5B3C489332B5
:CREATED:  [2011-11-16 Wed 15:15]
:Date:     Tue, 15 Nov 2011 16:00:35 -0700
:Message:  [[message://CAKs9TOLF1tFi9fzsbboAfwSor-uXU69hDJM4GxFBLjFu4PAxJw@mail.gmail.com][Do automatic transactions break emacs reconcile mode?]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [#C] [[bug:389][#389]] Emacs mode autocompletion issue
   :PROPERTIES:
   :ID:       87255055-84B2-4B95-B643-0F8848C06D70
   :Submitter: Todd B <avtsbtmn@gmail.com>
   :Message:  [[message://97c84a1d-67f6-48be-b718-6abdf592e3bd@y11g2000yqm.googlegroups.com][Emacs mode autocompletion issue]]
   :CREATED:  [2010-07-17 Sat 05:01]
   :END:
** TODO [#C] [[bug:391][#391]] Emacs reconciliation mode does not work on Linux
   :PROPERTIES:
   :ID:       63328ED4-3C26-4DF6-8C1A-526E86A56ED2
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-391-1@http.newartisans.com/bugzilla/][{Bug 391} New: Emacs reconciliation mode does not work on Linux]]
   :CREATED:  [2010-08-05 Thu 19:08]
   :END:
** TODO [#C] [[bug:396][#396]] ledger emacs doesn't escape double quotes
   :PROPERTIES:
   :ID:       8CE53771-0142-4F89-8C09-F24418AE3B93
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-396-1@http.newartisans.com/bugzilla/][{Bug 396} New: ledger emacs doesn't escape double quotes]]
   :CREATED:  [2010-08-16 Mon 16:28]
   :END:
** TODO [#C] [[bug:441][#441]] Patch to allow jumping between records with M-n and M-p                :ATTACH:
   :PROPERTIES:
   :ID:       669AE4A1-E30D-4A3D-A330-06E183FBF66E
   :Submitter: Russell Adams <RLAdams@AdamsInfoServ.Com>
   :Message:  [[message://20101110003259.GN30297@x201][Patch for ledger.el]]
   :Attachments: ledger.el.movement.patch
   :CREATED:  [2010-11-10 Wed 09:14]
   :END:
** TODO [#C] [[bug:460][#460]] ledger.el expects blank lines around transactions
   :PROPERTIES:
   :ID:       190E8223-FCD1-4592-B1CF-7C682E3D3F8B
   :Submitter: David Brown <ledger@davidb.org>
   :Message:  [[message://87sjxgi7wd.fsf@a64.davidb.org][Some ledger.el questions]]
   :CREATED:  [2010-12-29 Wed 17:41]
   :END:
** TODO [#C] [[bug:464][#464]] auto-indenting in emacs mode?
   - State "TODO"       from "DEFERRED"   [2011-01-02 Sun 04:48]
   - State "DEFERRED"   from "TODO"       [2010-04-27 Tue 08:59]
   :PROPERTIES:
   :ID:       9CCBD7BF-DB21-4BEA-B603-16BB87BA0082
   :Message:  [[message://m2p1ea387f61004101209lb0fb93a8z160df933074f99b1@mail.gmail.com][auto-indenting in emacs mode?]]
   :CREATED:  [2010-04-11 Sun 03:55]
   :END:
** TODO [#C] [[bug:468][#468]] New ledger mode in master sometimes erases data when aligning amounts
   :PROPERTIES:
   :ID:       EF8918DA-97AC-4BD2-8676-7D8B49A35097
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-468-1@http.newartisans.com/bugzilla/][{Bug 468} New: new ledger mode in master sometimes erases data when aligning amounts]]
   :CREATED:  [2011-01-10 Mon 17:21]
   :END:
** DEFERRED [[bug:245][#245]] Add colorized highlighting to the reconciler
   - State "DEFERRED"   from "TODO"       [2009-10-31 Sat 05:05]
   http://thread.gmane.org/gmane.comp.finance.ledger.general/483
   :PROPERTIES:
   :ID:       C7E28F7F-93F9-4C3F-956A-4F4B84868CBF
   :CREATED:  [2009-10-31 Sat 00:06]
   :END:
** DEFERRED [[bug:246][#246]] Add folding support to ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   - State "TODO"       from "DELEGATED"  [2009-10-22 Thu 06:46]
   - State "DELEGATED"  from "TODO"       [2009-10-11 Sun 05:31] \\
     Demosthenes said that the author of loccur was going to look into this.
   For example, show only transactions matching a given report query.
   :PROPERTIES:
   :ID:       E98B3CBD-B76F-4917-92A5-4B9E69833131
   :CREATED:  [2009-10-06 Tue 17:29]
   :END:
** DEFERRED [[bug:247][#247]] Allow for quicker reporting commands in ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   117
   :ID:       932324E2-4A3F-4319-9586-1F33DFE29527
   :END:
** DEFERRED [[bug:248][#248]] Allow reconciling postings in multiple included files
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID:       29AC8129-C451-4782-8371-B74588609E9F
   :CREATED:  [2009-03-03 Tue 00:10]
   :END:
** DEFERRED [[bug:249][#249]] Allow reports, such as completed tasks last week, etc.
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       D9B4D001-21E4-4247-ADF6-56C00B2C8F3A
   :CREATED:  [2008-05-12 Mon]
   :END:
** DEFERRED [[bug:250][#250]] Break ledger.el up into sections
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   - Font-locking
   - REPL interaction
   - Parsing
   - Utility functions
   - Manipulation (sorting, etc)
   - Reconciling
   - Reports
   :PROPERTIES:
   :ID:       770D07CF-9F28-4A9B-B4E8-48ACC4926E06
   :CREATED:  [2009-10-23 Fri 06:12]
   :END:
** DEFERRED [[bug:251][#251]] C-c C-c should be magical in ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should auto-generate reports, for example, if the user does it in an
   account or payee name.
   :PROPERTIES:
   :ID:       5C52F851-18CF-41A3-953B-49DA4EF67C00
   :CREATED:  [2009-10-23 Fri 06:12]
   :END:
** DEFERRED [[bug:252][#252]] Create a hotkey for creating Ledger transactions
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID:       CAAE8C68-A26F-4BED-A626-751A98B57E7E
   :CREATED:  [2009-10-23 Fri 06:13]
   :END:
** DEFERRED [[bug:253][#253]] Fix toggle-current-transaction
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   When all transactions have been cleared, the marks should be wiped and then
   ledger-toggle-current-entry called, rather than doing the entry clearing
   itself.
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   130
   :ID:       465231DF-6EF2-4C4F-BF0D-9FED19AB99A3
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:254][#254]] Have ledger.el warn if the ledger version is too old
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   163
   :ID:       5F20A546-046B-4CC6-B1EF-89C5962B55BE
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:255][#255]] Highlight transaction lines based on their status
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   Here is a tweak to ledger-mode that I find useful. It makes uncleared lines
   pink and cleared lines green. C-c C-e to toggle the status.
   :SCRIPT:
   (add-hook 'ledger-mode-hook (lambda ()
                                (highlight-lines-matching-regexp "^..\\(..\\)?/..?/..?[         ]+[^\\*]" (quote hi-pink))
                                (highlight-lines-matching-regexp "^..\\(..\\)?/..?/..?[         ]+\\*" (quote hi-green))))
   :END:
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   200
   :ID:       1C870658-6460-423C-9199-E46C48074688
   :CREATED:  [2008-07-13 Sun]
   :END:
** DEFERRED [[bug:256][#256]] Inserting comments in ledger-mode is inserting leading whitespace
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   Comments in ledger-mode are inserted with whitespace at the beginning of the
   line, which makes ledger.dat unusable.  One has to delete the extra
   whitespace manually afterwards.
   :OUTPUT:
   do! ledger bal bank
   Error: "ledger.dat", line 341: Line begins with whitespace
   Error: "ledger.dat", line 342: Line begins with whitespace
   Error: "ledger.dat", line 343: Line begins with whitespace
   :END:
   :PROPERTIES:
   :Submitter: Henry Atting <nsmp_01@online.de>
   :Message:  [[message://87y6ukqwyy.fsf@online.de][inserting comments in ledger-mode ]]
   :ID:       BEBC59BB-C7FF-4295-9EE5-171354CCEBBC
   :CREATED:  [2009-04-01 Wed 18:57]
   :END:
** DEFERRED [[bug:257][#257]] Ledger-context-at-point fails to parse acct-transaction
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   - State "TODO"       [2007-11-07 Wed 04:06] \\
     Levin <zslevin@gmail.com> writes:
     > The following patch fixes problem of the amount with no ',':
     :PATCH:
     @@ -648,10 +648,12 @@
             (indent account amount nil commodity comment))
            ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*$"
             (indent account amount nil commodity))
     -      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?\\(\\.[0-9]*\\)\\)[ \t]+\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
     +      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
             (indent account amount nil commodity comment))
     -      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?\\(\\.[0-9]*\\)\\)[ \t]+\\(.*?\\)[ \t]*$"
     +      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*$"
             (indent account amount nil commodity))
     +      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]*$"
     +       (indent account amount nil))
            ("\\(^[ \t]+\\)\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
             (indent account comment))
            ("\\(^[ \t]+\\)\\(.*?\\)[ \t]*$"
     :END:
     > BTW, the amount regexp is a bit complex here. Do we need the fraction
     > part of the amount? And it should recognize the ',' in amount.
   Use the following ledger data
   :DATA:
   2004/05/01 * Checking balance
     Assets:Bank:Checking        1000.00
     Equity:Opening Balances
   :END:
   With cursor on the beginning of the second line, eval
   `(ledger-context-at-point)`, which returns:
   :OUTPUT:
   (acct-transaction account ((indent "  " 31) (account "Assets:Bank:Checking        1000.00" 33)))
   :END:
   It is not correct, since 1000.00 ought to be amount.

   ledger-context-at-point also fails to parse amount with ',' in it, such as:
   :DATA:
   2004/05/01 * Checking balance
     Assets:Bank:Checking        $1,000.00
     Equity:Opening Balances
   :END:
   :PROPERTIES:
   :Submitter: Levin <zslevin@gmail.com>
   :Version:  2.6
   :Ticket:   6
   :ID:       2558642F-EE17-4DCB-B6DB-50490FB0CF83
   :CREATED:  [2007-11-07 Wed]
   :END:
** DEFERRED [[bug:258][#258]] ledger.el should define its own faces
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   This would allow people to describe how they want cleared and uncleared
   payee names to appear.
   :PROPERTIES:
   :Submitter: John Wiegley <johnw@newartisans.com>
   :Version:  2.6.1
   :Milestone: 3.0
   :Ticket:   2
   :ID:       78B2F4A4-DCE5-1B40-9C21-86195584ACF1
   :CREATED:  [2009-03-01 Sun 01:08]
   :END:
** DEFERRED [[bug:259][#259]] Look at making ledger's new entry completion behavior cyclic
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       B443E186-4E6F-4FB5-8421-4F703DC9353C
   :CREATED:  [2009-02-13 Fri 05:17]
   :END:
** DEFERRED [[bug:260][#260]] Make M-x ledger-sort work on the current region
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       C390F6D0-FA81-4A1B-877A-C6946EA51105
   :CREATED:  [2009-01-29 Thu 19:36]
   :END:
** DEFERRED [[bug:261][#261]] Make TAB more magical in ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should do what C-c TAB does, but still cycle.  Or, it should move around.
   Or, if in payee and preceding char is a digit, call ledger xact.
   :PROPERTIES:
   :ID:       2A9F5DDB-4DB6-4E87-A755-392F51CF0C2D
   :CREATED:  [2009-10-23 Fri 06:13]
   :END:
** DEFERRED [[bug:262][#262]] Pressing C-c C-c on an entry line should clear it
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       FEE28C4E-B113-4280-85F5-42E2B8EE603B
   :CREATED:  [2009-01-31 Sat 06:13]
   :END:
** DEFERRED [[bug:263][#263]] Redesign ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should always be talking with Ledger via the REPL.
   :PROPERTIES:
   :ID:       BADF02BF-CAA1-4990-B9FF-DA20BA025FE0
   :CREATED:  [2009-10-23 Fri 06:11]
   :END:
** DEFERRED [[bug:264][#264]] The Great Renaming still needs to take place in ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       721AC8F7-9189-4151-8611-2BBC0D1E8267
   :CREATED:  [2009-06-19 Fri 00:49]
   :END:
** DEFERRED [[bug:265][#265]] Use of ledger.el with various invalid "ledger" binaries (and none)
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   175
   :ID:       8735E6AB-DB0A-4F66-BD81-BBFFEE66A68E
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:266][#266]] Use yasnippet with ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID:       178EC4C8-F87A-40C2-91CE-C5BD9CA50BD3
   :CREATED:  [2009-10-23 Fri 06:14]
   :END:
** DONE Add easy-menu for Emacs-mode
- State "DONE"       from "TODO"       [2012-02-23 Thu 21:10]
:PROPERTIES:
:ID:       34D222C4-7343-4AC0-AF00-202DF030482A
:CREATED:  [2011-12-08 Thu 22:12]
:Date: Thu, 8 Dec 2011 18:56:54 -0800
:Message: [[message://jwiegley/ledger/pull/49@github.com][{ledger} Add easy-menu for Emacs-mode (#49)]]
:Submitter: Kenny Meyer <reply+i-2498116-e90a1a758c19fe7dfe49f3a101c160aa4aa822aa-8460@reply.github.com>
:END:
** DONE [[bug:580][#580]] Emacs mode 'reconcile' doesn't work
- State "DONE"       from "TODO"       [2012-02-23 Thu 21:41] \\
  Fixed by d2915c6
   I'm trying to reconcile a ledger file in "GNU Emacs 23.3.1
   (x86_64-unknown-linux-gnu, GTK+ Version 2.24.3)". When I hit C-c C-r, I
   just get the following error message:
   :OUTPUT:
   save-excursion: Wrong type argument: number-or-marker-p, nil
   :END:
   
   I'm using the current git HEAD of ledger.
   :PROPERTIES:
   :ID:       400C0BA0-D132-465A-B0A4-AC7E6839DBD2
   :CREATED:  [2011-07-21 Thu 15:26]
   :Date:     Thu, 21 Jul 2011 09:23:28 -0700
   :Message:  [[message://jwiegley/ledger/issues/31@github.com][{ledger} Emacs mode 'reconcile' doesn't work (#31)]]
   :Submitter: peti <reply+i-1264237-1c07217de3933472fbd8fa785975d03170c352df@reply.github.com>
   :END:
* Features
  :PROPERTIES:
  :CATEGORY: Features
  :END:
** TODO [[bug:393][#393]] Allow lot tags to "link" to a past priced commodity
   :PROPERTIES:
   :ID:       E98C208C-876F-44B2-8BD1-1B60F1E293D2
   :CREATED:  [2010-07-30 Fri 06:11]
   :END:
** TODO [[bug:475][#475]] A solution to the commodity pricing problem
One of the things which stalled Ledger development recently is that I'd never
found a truly satisfying way to handle the "commodity pricing problem".  That
is, the current day value of a commodity can mean different things to
different people, depending on the accounts involved, the commodities, the
nature of the transactions, etc.

After experimenting with several different concepts and syntaxes, I found none
of them were either satisfying or general enough.  My one attempt at providing
"fixated prices" was too specific, and too inelegant for many usage patterns.

This morning, however, I think I've finally cracked this nut; and in a way
which fits harmoniously into the Ledger architecture as if it were meant to be
there all along...

Here's how the new scheme will work: When a user specifies '-V', or '-X COMM',
they are requesting that some or all of the commodities in their Ledger file
be valuated as of today (or whatever --now is set to).  But what does such a
valuation mean?  This meaning shall be governed by the presence of a "VALUE"
metadata property, whose content is an expression used to compute that value.

If no VALUE property is specified, each posting is assumed to have a default,
as if you'd specified a global, automated transaction as follows:

#+begin_src ledger
= expr true
  ; VALUE:: market(amount, date, exchange)
#+end_src

This definition emulates the present day behavior of -V and -X (in the case of
-X, the requested commodity is passed via the string 'exchange' above).

One thing many people have wanted to do is to fixate the valuation of old
European currencies in terms of the Euro after a certain date:

#+begin_src ledger
= expr commodity == "DM"
  ; VALUE:: date < [Jun 2008] ? market(amount, date, exchange) : 1.44 EUR
#+end_src

This says: If --now is some old date, use market prices as they were at that
time; but if --now is past June 2008, use a fixed price for converting Deutsch
Mark to Euro.

Or how about never re-valuating commodities used in Expenses, since they
cannot have a different future value:

#+begin_src ledger
= /^Expenses:/
  ; VALUE:: market(amount, post.date, exchange)
#+end_src

This says the future valuation is the same as the valuation at the time of
posting.  post.date equals the posting's date, while just 'date' is the value
of --now (defaults to today).

Or how about valuating miles based on a reimbursement rate during a specific
time period:

#+begin_src ledger
= expr commodity == "miles" and date >= [2007] and date < [2008]
  ; VALUE:: market($1.05, date, exchange)
#+end_src

In this case, miles driven in 2007 will always be valuated at $1.05 each.  If
you use -X EUR to expressly request all amounts in Euro, Ledger shall convert
$1.05 to Euro by whatever means are appropriate for dollars.

Note that you can have a valuation expression specific to a particular posting
or transaction, by overriding these general defaults using specific metadata:

#+begin_src ledger
2010-12-26 Example
    Expenses:Food                $20
    ; Just to be silly, always valuate *these* $20 as 30 DM, no matter what
    ; the user asks for with -V or -X
    ; VALUE:: 30 DM
    Assets:Cash
#+end_src

This example demonstrates that your VALUE expression should be as symbolic as
possible, using terms like 'amount' and 'date', rather than specific amounts
and dates.  Also, you should pass the amount along to the function 'market' so
it can be further revalued if the user has asked for a specific currency.

Or, if it better suits your accounting, you can be less symbolic, which allows
you to report most everything in EUR if you use -X EUR, except for certain
accounts or postings which should always be valuated in another currency.  For
example:

#+begin_src ledger
= /^Assets:Brokerage:CAD$/
  ; Always report the value of commodities in this account in terms of
  ; present day dollars, despite what was asked for on the command-line
  ; VALUE:: market(amount, date, '$')
#+end_src

I think this scheme, of using predicated value expressions which can be
generalized in automated transactions, and made specific via transaction and
posting-based metadata, provides sufficient flexibility to express most of the
use cases which have occurred on this topic.

Comments on the design welcome, as I haven't begun coding yet.  Feel free to
pose scenarios, and I'll try to model them for you.
:PROPERTIES:
:ID:       AEDF58BB-CE44-4C3E-B66E-0BB955E64206
:Message:  [[message://B24180CF-D2DB-49DD-BEBD-4FF7170D3639@newartisans.com][A solution to the commodity pricing problem]]
:CREATED:  [2011-02-04 Fri 07:32]
:END:
** TODO [[bug:481][#481]] Add a native "test" command to Ledger
   This would allow users to have their own "test" blocks in their data files,
   without having to run a Python script to do those tests.
   :PROPERTIES:
   :ID:       90A2246B-DE3E-4744-BC21-48F75FF852E8
   :CREATED:  [2011-02-24 Thu 14:54]
   :END:
** TODO [[bug:486][#486]] More formal methods of doing lot-based reporting
   - Note taken on [2011-02-09 Wed 14:31] \\
     Martin Michlmayr: Yeah, I know... but I think it's a feature that ledger
     should eventually get (obviously not for 3.0).

     > If you specify an adorned commodity, like AAPL {$10.00}, it will also
     > balance against itself, and against any AAPL if --lots is not
     > specified.  But if you do specify --lot-prices, for example, then it
     > will balance against that specific price for AAPL.
     >
     > I may, for the sake of reporting *only*, be able to implement some sort
     > of guessing strategy, based on the order in which transactions appear
     > in the data file...

     Why for reporting only?  It seems to me that ledger has all the
     information to do FIFO and LIFO properly (i.e. to remove the right
     commodities from the list).  Let's take this example:
     #+begin_src ledger
     2011-01-01 * Buy AAA
         Assets:Shares                             5 AAA @ 10.00 EUR
         Assets:Cash

     2011-01-03 * Buy AAA
         Assets:Shares                             2 AAA @ 10.00 EUR
         Assets:Cash

     2011-01-11 * Buy AAA
         Assets:Shares                             5 AAA @ 12.00 EUR
         Assets:Cash

     2011-01-21 * Buy AAA
         Assets:Shares                             5 AAA @ 13.00 EUR
         Assets:Cash
     #+end_src

     So we end up with (ledger --lots):
     :OUTPUT:
     5 AAA {10.00 EUR} [2011/01/01]
     2 AAA {10.00 EUR} [2011/01/03]
     5 AAA {12.00 EUR} [2011/01/11]
     5 AAA {13.00 EUR} [2011/01/21]  Assets:Shares
     :END:
     So if I sell 6 shares now, according to FIFO, I would do:
     #+begin_src ledger
     2011-02-01 * Sell AAA
         Assets:Shares                          -5 AAA {10.00 EUR} [2011/01/01] @ 13.50 EUR
         Assets:Shares                          -1 AAA {10.00 EUR} [2011/01/03] @ 13.50 EUR
         Assets:Cash
     #+end_src

     ledger --lots:
     :OUTPUT:
     1 AAA {10.00 EUR} [2011/01/03]
     5 AAA {12.00 EUR} [2011/01/11]
     5 AAA {13.00 EUR} [2011/01/21]  Assets:Shares
     :END:
     According to LIFO, I would do this instead:
     #+begin_src ledger
     2011-02-01 * Sell AAA
         Assets:Shares                          -5 AAA {13.00 EUR} [2011/01/21] @ 13.50 EUR
         Assets:Shares                          -1 AAA {12.00 EUR} [2011/01/11] @ 13.50 EUR
         Assets:Cash
     #+end_src

     In other words, you can manually do FIFO and LIFO with ledger already.
     However, it would be great if ledger would make this easier, e.g. that
     you could specify:
     #+begin_src ledger
     2011-02-01 * Sell AAA
         Assets:Shares                          -6 AAA {FIFO} @ 13.50 EUR
         Assets:Cash
     #+end_src
     and ledger would iterate through all AAA commodities and take out the
     right ones (after all, it knows the date and price).

     The only thing I don't think is possible with ledger at the moment is
     average cost.  I'm also not sure how --lot-dates should behave for
     average cost.

     > There are reasons why -X can't be applied to any report.  Mainly it has
     > to do with rounding.  For example, let's say I have 10 postings that
     > each trade 1 DM, and the value of 1 DM is 0.001 EUR.  If I add all 10
     > DM and then apply -X, I get 0.01 EUR.  But if I apply -X to each 1 DM
     > and *then* total them, I get 0.00 EUR.

     Thanks for the explanation... what I was thinking of is that ledger would
     just produce a report according to -V or -B or whatever and *then*
     convert it with -X.  I use a shell script to do this for now:
     #+begin_src sh
     GBP2EUR="117/100"

     eurgbp=$(ledger -f $FILE -p "until $YEAR-$NEXT_MONTH-01" -B bal "^assets"
     "^liabilities" | egrep " (EUR|GBP)$" | tail -n 2)
     eur=$(echo "$eurgbp" | grep "EUR" | sed 's/ EUR//')
     gbp=$(echo "$eurgbp" | grep "GBP" | sed 's/ GBP//')
     eur=$(echo "$eur" | sed 's/\..*//')
     gbp=$(echo "$gbp" | sed 's/\..*//')
     gbpineur=$(($gbp*$GBP2EUR))
     echo "      " $(($eur + $gbpineur)) "   EUR   Total"
     #+end_src

     I'm kinda surprised that you no longer think it's a good idea to split -X
     from -V.  Last time I brought this up on IRC, you thought it was a good
     idea:

     10:44 < johnw> I think having -H, in addition to -X, may make what you want
      to see both natural and simple
     10:45 < johnw> you'd use -H for income/expense accounts, and -X for
      assets/liabilities
     10:45 < johnw> -H = historical values
     10:45 < johnw> -X = current exchange values
     10:45 < tbm> so what's the difference between -X and -V again?
     10:45 < johnw> -V is an automated version of -X
     10:45 < johnw> it tries to figure out what the reported commodity should be
     10:45 < johnw> we may then need an automated version of -H, to complete the
      reflection
     10:46 < johnw> btw, this is just an inside-out version of my "final"
      feature :)
     10:46 < tbm> why not change the meaning of -X to _only do conversion_?  And
      then you could combine -X with -B, -V or -H
     10:46 < johnw> instead of having it be syntactic, we're moving the semantic
      difference to a difference in options
     10:46 < johnw> oh HMM
     10:46 < johnw> -X with -B, -V and -I
     10:46 < johnw> (and -O, incidentally)
     10:46 < johnw> O = amount, B = cost, V = market value, I = price
     10:47 < johnw> that's really an excellent suggestion
     10:48 < johnw> i'd still need a flag to mean "historical" vs "current"
     10:48 < johnw> as well as "target commodity" (-X)
   - Note taken on [2011-02-09 Wed 14:29] \\
     Martin Michlmayr: I think it needs this functionality because it's
     required for any serious financial accounting.  It's not just about the
     management of inventory per se.  You'll also need FIFO/LIFO/AVCO for
     tracking shares/funds, which a lot of people have.

     > I'm thinking it shouldn't, as it introduces a whole range of issues -
     > for example, if you're doing FIFO or LIFO, how do you explain to
     > someone who purchased 4 widgets from you why some are one price, and
     > some are another?

     I think you're confusing purchase price with sales price.

     Let's say a company buys 3 widgets at 15 USD and 1 at 20 USD and sells
     the 4 widgets for 25 USD each, it would then make 10 USD on 3 widgets and
     5 USD on 1.
   As John pointed out, this is presently not possible with ledger.  I think
   the right solution is for ledger to get LIFO, FIFO and AVCO handling (see
   the message I just sent in the "A solution to the commodity pricing
   problem" thread).

   I think the way it should work is that you tell ledger which basis should
   be used for a given commodity (e.g. LIFO, FIFO, AVCO).  In the case of LIFO
   and FIFO, --lots would behave as now (i.e. show individual lots and their
   prices) and when you sell one it would use LIFO or FIFO to figure out which
   one.

   On the other hand, for AVCO, --lots should just show the amount of shares
   you own and the average cost.

   Ok, let's use the example from my other message again.  Let's buy AAA
   shares at different prices:
   #+begin_src ledger
   2011-01-01 * Buy AAA
       Assets:Shares                             5 AAA @ 10.00 EUR
       Assets:Cash

   2011-01-03 * Buy AAA
       Assets:Shares                             2 AAA @ 10.00 EUR
       Assets:Cash

   2011-01-11 * Buy AAA
       Assets:Shares                             5 AAA @ 12.00 EUR
       Assets:Cash

   2011-01-21 * Buy AAA
       Assets:Shares                             5 AAA @ 13.00 EUR
       Assets:Cash
   #+end_src

   Now in the case of LIFO and FIFO, "ledger --lots bal shares" would show (as
   it does today):
   :OUTPUT:
   5 AAA {10.00 EUR} [2011/01/01]
   2 AAA {10.00 EUR} [2011/01/03]
   4 AAA {12.00 EUR} [2011/01/11]  Assets:Shares
   :END:
   But in the case of AVCO, it could show this instead:
   :OUTPUT:
   11 AAA {10.7272 EUR}  Assets:Shares
   :END:
   :PROPERTIES:
   :ID:       55A4A64B-CCF6-4EA5-9763-449EDA581B20
   :CREATED:  [2011-02-09 Wed 14:28]
   :Message:  [[message://20110202001414.GD16162@jirafa.cyrius.com][Re: reporting on specific commodities?]]
   :END:
** TODO [[bug:496][#496]] Add --time-colon option
   :PROPERTIES:
   :ID:       2E01D36E-41AB-4185-8528-686A5599438E
   :CREATED:  [2011-03-07 Mon 14:48]
   :Message:  [[message://jwiegley/ledger/pull/23@github.com][{GitHub} Add --time-colon option {jwiegley/ledger GH-23}]]
   :Submitter: afh <noreply@github.com>
   :Date:     Sat, 5 Mar 2011 15:02:09 -0800
   :END:
** TODO [[bug:497][#497]] Review: CSV converter for multipart transactions
   :PROPERTIES:
   :ID:       EC914849-D8CC-42E2-A0E2-F90294A6CFAC
   :CREATED:  [2011-03-07 Mon 14:49]
   :Message:  [[message://66bf854e-da6d-447b-927b-75595be016a0@j9g2000prj.googlegroups.com][For those that care, a CSV converter for multipart transactions]]
   :Submitter: tazz_ben <ben@wbpsystems.com>
   :Date:     Sat, 5 Mar 2011 10:27:33 -0800 (PST)
   :END:
** TODO [[bug:522][#522]] Add a 'tags' command
   Since you have 'commodities' and 'payees' and 'accounts' commands, it seems
   logical that there should be a 'tags' command. Such commands help me check
   that I haven't made a typo in a transaction.
   :PROPERTIES:
   :ID:       D3B5526B-0B83-4EBD-965B-75EFE8B0CDC6
   :CREATED:  [2011-05-27 Fri 18:09]
   :Date:     Mon, 23 May 2011 18:17:27 -0700 (PDT)
   :Message:  [[message://30671703.170.1306199847233.JavaMail.geo-discussion-forums@prcm34][Re: My experience with Ledger so far]]
   :Submitter: Matthew Harris <mharris312@gmail.com>
   :END:
** TODO [[bug:535][#535]] Make timeclock transactions balanced
   :PROPERTIES:
   :ID:       B4110944-02C5-48B7-8788-2110365F0A85
   :CREATED:  [2011-06-20 Mon 02:11]
   :Date:     Sat, 18 Jun 2011 14:20:33 -0700 (PDT)
   :Message:  [[message://4f2c2924-8502-4a3d-b722-ecf44fc88fbd@m24g2000yqc.googlegroups.com][Timeclock transactions balanced?]]
   :Submitter: Seppo Sade <sepposade1@gmail.com>
   :END:
** TODO [[bug:536][#536]] Add an option to Ledger to account for time rounding
   For example, that recorded time segments are rounded up to 15 minute blocks.
   :PROPERTIES:
   :ID:       4813EDF8-192E-42FF-9D14-ABB9261CB20C
   :CREATED:  [2011-06-17 Fri 13:17]
   :END:
** TODO [[bug:538][#538]] -X should use posting dated values, and with -V should use current
   :PROPERTIES:
   :ID:       6BA58CB7-AE65-44FB-B0A2-9631950E133C
   :CREATED:  [2011-06-29 Wed 14:58]
   :END:
** TODO [[bug:539][#539]] Add 'any' and 'all' as operators in query expressions
   :PROPERTIES:
   :ID:       3643CE28-8322-4CDF-B151-DC34F1A30112
   :CREATED:  [2011-06-29 Wed 17:57]
   :END:
** TODO [[bug:542][#542]] Create a --reset-amount/total option, to clear the expr series
   :PROPERTIES:
   :ID:       0C1BBB09-F27C-4EDF-81F0-31D959476F72
   :CREATED:  [2011-07-04 Mon 23:07]
   :END:
** TODO [[bug:547][#547]] Allow Ledger to read data directly from CSV files
   As an alternate input format.  Then I can maintain by "bank's view" using
   Ledger itself, and not Excel.
   :PROPERTIES:
   :ID:       69D8C2FC-72E8-4C6B-BAEE-83B4BC92993D
   :CREATED:  [2011-07-25 Mon 12:34]
   :END:
** TODO [[bug:575][#575]] Save file comments along with the transaction that follows them
   :PROPERTIES:
   :ID:       50C6A5FE-E2A3-4532-A02E-C49ACDA871E7
   :CREATED:  [2011-10-11 Tue 03:36]
   :Date:     Mon, 10 Oct 2011 15:53:55 -0700
   :Message:  [[message://j6vt24$h0r$1@dough.gmane.org][Re: Comments that persist through "Print"]]
   :Submitter: Simon Michael <simon-jbxitMBJ2LLQT0dZR+AlfA@public.gmane.org>
   :END:
** TODO [[bug:589][#589]] Add ability to control color output
  The user should be able to indicate the RGB value used for "blue", for
  example.
  :PROPERTIES:
  :ID:       340A8A87-A5E6-4E51-B327-280F27E3931A
  :CREATED:  [2011-10-18 Tue 21:31]
  :Date:     Tue, 18 Oct 2011 11:16:58 -0700
  :Message:  [[message://CAKs9TOLAMJsrvRAbD0pgCiBAHXJ75OvHM9ZvEGQ2Py749f5ahA@mail.gmail.com][Controlling color output]]
  :Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
  :END:
** TODO [[bug:595][#595]] Add a value expression function to round non-commoditized amounts
  :PROPERTIES:
  :ID:       E4757F31-F20B-40F4-B53C-CE4CA1257849
  :CREATED:  [2011-11-02 Wed 12:34]
  :Date:     Wed, 2 Nov 2011 06:16:01 -0700
  :Message:  [[message://CAKs9TOJ_AL1uXfUVUTU6wUAY6juw=yVw8Ghiir+f+6zq_bm0GA@mail.gmail.com][Re: Controlling the precision displayed in amounts]]
  :Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
  :END:
** TODO [[bug:625][#625]] Add "semiannually" interval
I'd like to be able to create a periodic transaction for my car insurance
payment, which is due semiannually.  The attached patch adds a "semiannually"
interval so that I can do so.
:PROPERTIES:
:ID:       99641892-1A8D-4557-9800-2122873300B9
:CREATED: [2012-02-23 Thu 21:53]
:END:
** TODO [[bug:627][#627]] Add help option "--help-{commands|options}-plain"
:PROPERTIES:
:ID:       22C7A4C4-3895-4457-B5E1-5F3BD50C3A23
:CREATED:  [2011-11-29 Tue 12:27]
:Date: Mon, 28 Nov 2011 21:48:13 -0700
:Message: [[message://CAKs9TOKWUbS4vjwkfmez7h+uOpi0E9T2yQjtND6R7MPpwGviHQ@mail.gmail.com][ATTN Clemens Fischer, input on command line completion]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:628][#628]] round(value) should take an optional precision amount
:PROPERTIES:
:ID:       BE07F550-6BA8-43C2-B625-118ABC6E8D0B
:CREATED:  [2012-01-06 Fri 21:19]
:Date: Fri, 6 Jan 2012 14:27:42 -0700
:Message: [[message://CAKs9TO+0EpJRkW5yyyfR_H9w94i314HgTT9s4Qf=Bkp91ZdVhQ@mail.gmail.com][Re: Rounding formula for automatic transactions]]
:Author: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:629][#629]] Add ability to jump to transactions from a report buffer
:PROPERTIES:
:ID:       EC4C7A71-3C1C-43C2-81A6-2BBC3ED4A406
:CREATED:  [2012-02-16 Thu 16:02]
:Date: Thu, 16 Feb 2012 21:49:37 +0000
:Message: [[message://bug-629-1@http.bugs.ledger-cli.org/][{Bug 629} New: Add ability to jump to transactions from a report buffer.]]
:Author: bugzilla-daemon@mail.johnwiegley.com
:END:
** TODO [[bug:647][#647]] Add ability to pass offset dates to xact command
When using the entry command is there an easy way to specify that the
transaction occurred yesterday or the day before. I imagine something like
#+begin_src sh
$ledger entry t-1 Blah groceries '$3.41'
#+end_src
would give something like (today is 2012/01/26)
:OUTPUT:
2012/01/25 Blah
    Expenses:Dining:Groceries                $3.41
    Liabilities:CC:Amex
:END:

and t-2 would give the same entry but with the date of 2012/01/24.
:PROPERTIES:
:ID:       C1FD166C-7A14-4C40-808C-A87022379AEA
:CREATED:  [2012-02-06 Mon 14:29]
:Date: Thu, 26 Jan 2012 00:22:32 -0600
:Message: [[message://CABZEcScd3PkLkWKzWxCssDbh-Y+gC+rA24DPejHfE23L6ODDHA@mail.gmail.com][questions regarding draft (entry/xact)]]
:Author: David Whitmarsh <dwhitmarsh-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [#C] [[bug:172][#172]] Merge functionality of the C and P directives
   :PROPERTIES:
   :ID:       B2A5D46F-4CF2-4725-BD1B-8641439CF115
   :CREATED:  [2010-04-02 Fri 14:11]
   :END:
** TODO [#C] [[bug:173][#173]] Make the prices report use standard report query terms
   The idea here is that report query filtering is done before the building up
   of commodities prices, so that you can see which commodities are involved
   with which reports:
   #+begin_src sh
   ledger prices 'Lebensmittel:Milch'
   ledger prices '%kauf=leche'
   #+end_src
   :PROPERTIES:
   :ID:       5229AE44-F390-4E4E-BAC6-674373CC775D
   :Message:  [[message://4B0E7757.1030607@gmail.com][How to type out a sales slip?]]
   :Submitter: Johann Klähn <kljohann@gmail.com>
   :CREATED:  [2009-12-01 Tue 03:04]
   :END:
** TODO [#C] [[bug:174][#174]] Make path to getquote script configurable using an option
   :PROPERTIES:
   :ID:       81278A4A-C3EB-4C73-A38D-061598F727F2
   :CREATED:  [2010-04-13 Tue 01:37]
   :END:
** TODO [#C] [[bug:190][#190]] Optimize finding and creation of annotated commodities
   - State "TODO"       from "STARTED"    [2010-06-02 Wed 17:11]
   Don't use textual names, but lookup based on annotation details
   directly.
   :PROPERTIES:
   :ID:       4DC71FA0-7325-4F88-B145-A87C5489B9A4
   :CREATED:  [2010-05-23 Sun 17:04]
   :END:
** TODO [#C] [[bug:217][#217]] Make "primary COMM ACCOUNT" force primary comm for an account
   :PROPERTIES:
   :ID:       C88403DF-F983-45D4-830B-4F0F69B6946D
   :CREATED:  [2010-05-31 Mon 10:35]
   :END:
** TODO [#C] [[bug:225][#225]] Complain about mutually exclusive options (such as -M and -s)
   - State "TODO"       from "DEFERRED"   [2010-06-02 Wed 18:11]
   - State "DEFERRED"   from "TODO"       [2010-01-22 Fri 20:05]
   #+begin_src sh
   ledger -M -s reg ^actifs
   #+end_src
   Adding the -s option seems to break the -M one (instead of three months,
   there is a single "09-Nov-01 - 10-Jan-01" period).  In short, -s and -M
   can't be combined in ledger reg.
   :PROPERTIES:
   :ID:       3BC282AF-4C48-4D54-A156-C9840A80EFA1
   :Submitter: Gabriel Kerneis <gabriel@kerneis.info>
   :CREATED:  [2010-01-18 Mon 02:55]
   :END:
** TODO [#C] [[bug:230][#230]] Make format strings backward compatible with 2.x
   That way, %D would be the same as %(date).
   :PROPERTIES:
   :ID:       C19E4E9B-3593-4424-8F0D-109D79D1B15E
   :CREATED:  [2010-06-03 Thu 23:22]
   :END:
** TODO [#C] [[bug:231][#231]] Allow conversion of some but not all commodities
   With -X, you currently can only say "convert everything to one commodity"
   but I'd like to be able to convert some stuff but not everything.

   My scenario: I have lived both in Autria (a EUR country) and the UK (which
   has GPB).  So right now I have accounts in EUR and GBP and then I also have
   some random money from travel (USD, TWD, etc) floating around as well as
   some shares.

   I'd like to be able to say: convert everything _but_ GBP to EUR (or GBP).
   This is what I'd like to see most of the time... just those two currencies.
   But sometimes I want to convert _everything_ (including GBP) to EUR.

   I like the "primary COMM ACCOUNT" syntax you propose in #217 but to achieve
   what I want I think we need an option --convert-primary or so.  Then I
   could say:
   #+begin_src sh
   -X EUR,GBP
   #+end_src
   to get EUR and GBP, or
   #+begin_src sh
   -X EUR --convert-primary
   #+end_src
   to get just EUR.
   :PROPERTIES:
   :ID:       83B4A0E5-3CC6-4F5E-9C58-A87F690836C8
   :CREATED:  [2010-06-08 Tue 16:45]
   :END:
** TODO [#C] [[bug:232][#232]] Support variant behaviors for -V
   The problem is: for a given amount of a commodity, which commodity should
   its value be reported in terms of?

   1. For a transaction, an amount of the commodity might be permanently
      associated with another commodity.  This is a "price value".
   2. For a certain commodity, another commodity may always be the pricing
      commodity.  This is a "commodity value".
   3. For a certain account, a specific commodity may always be used for
      pricing.  This is an "account value".
   4. For a certain report, the user may request valuation using a list of
      candidate commodities.  This is a "report value".
   5. Otherwise, the user may desire simply the most recent valuation
      possible.  This is a "market value".

   So the target commodity might be bound to: a particular amount, a
   commodity, or an account.  If it's not bound during parsing, it may be
   bound during reporting using -X to specify a commodity.  If it's not bound
   at all, then it is valued using the most recent prices available, no matter
   their commodity.

   Then here is the logic:

   1.  If --exchange-only is specified, use those commodities.
   2.  Else if a commodity has been FIXED to the amount, use that.
   3.  Else if a commodity has been FIXED to the account, use that.
   4.  Else if a commodity has been FIXED to the commodity, use that.
   5.  Else if the amount's commodity is itself primary, use that.
   6.  Else if -X is specified, use those commodities.
   7.  Else if the amount has a price/cost, use the price's commodity.
   8.  Else if the account balance contains primary commodities, use
       whichever has the highest absolute value.
   9.  Else if the commodity has a history of association with other
       commodities, use whichever is most frequent.
   10. Else use whichever commodity yields the most recent market value.
   :PROPERTIES:
   :ID:       AA092062-FBA5-4142-B3E4-E67FA9E12C19
   :CREATED:  [2010-06-07 Mon 08:39]
   :END:
** TODO [#C] [[bug:270][#270]] Add a feature for "object descriptions"
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:35]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   For example:

   def OBJECT NAME
     alias NAME
     commodities NAME[, NAME...]
     report NAME[, NAME...]
     set NAME EXPR
     assert EXPR
   end def

   def commodity GAL
     set fixed_commodity true
     set another_value $100 * 20
   end def

   def account Expenses:Food
     alias Chow
     commodities $, EUR
     report $
   end def
   :PROPERTIES:
   :ID:       B4BD2B5F-1F77-449B-80FF-DC7218DA2EFE
   :CREATED:  [2009-03-02 Mon 20:39]
   :END:
** TODO [#C] [[bug:292][#292]] Make alias names for directives, like convert for C
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:31]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID:       BD78C023-BB16-446C-9347-2F1AA16C7C5C
   :CREATED:  [2009-02-27 Fri 15:35]
   :END:
** TODO [#C] [[bug:299][#299]] The CSV report should optionally generate a "title line"
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:30]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID:       65B7E207-1BCC-4448-881C-1574623346D7
   :CREATED:  [2009-03-03 Tue 21:49]
   :END:
** TODO [#C] [[bug:333][#333]] Add warning when duplicate meta references are given
   :PROPERTIES:
   :ID:       7B4EFB7D-B815-44DE-83CE-F8F902AC954D
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-333-1@http.newartisans.com/bugzilla/][{Bug 333} New: Add warning when duplicate meta references are given]]
   :CREATED:  [2010-06-13 Sun 17:43]
   :END:
** TODO [#C] [[bug:368][#368]] A commodity annotation that asserts no negative quantities
   :PROPERTIES:
   :ID:       09FA1386-E890-4600-98D0-86C248A24C31
   :CREATED:  [2010-06-27 Sun 21:27]
   :END:
** TODO [#C] [[bug:409][#409]] Almost strictly defined accounts
   I've seen it beeing discussed here to introduce strict verification of
   account names. I think it may by very handy, however, I think another
   approach may be usefull too: a predefined branches. One can define several
   branches of arbitrary depth and every posting must be on one of them. Eg.
   Defined branches:
   :OUTPUT:
   Income:Salary
   Income:Iterest
   Expenses:Rent
   Expenses:Food:Groceries
   Expenses:Food:Dining
   etc.
   :END:
   Now account names in postings must begin with one of the defined
   branches:
   :OUTPUT:
   Income:Salary:Small Co.
   Income:Salary:World Corp.
   :END:
   are both correct

   But
   :OUTPUT:
   Expenses:Rant:Flower St.
           ^^^
   :END:
   is not. One can introduce new accounts only below strictly defined
   structure.
   :PROPERTIES:
   :ID:       9F29112A-CFA7-4C3C-91FD-871D8187AE39
   :Submitter: Łukasz Stelmach <lukasz.stelmach@iem.pw.edu.pl>
   :Message:  [[message://87zkwhth69.fsf@dasa3.iem.pw.edu.pl][almost strictly defined accounts]]
   :CREATED:  [2010-08-20 Fri 12:17]
   :END:
** TODO [#C] [[bug:432][#432]] Create a command to list all options, commands, and functions
   :PROPERTIES:
   :ID:       4BF09022-7059-4CFE-90C2-3507A7B54EDD
   :Submitter: Thierry Daucourt <thierry.daucourt@free.fr>
   :Message:  [[message://AANLkTik8FPboAMJFg1z4ZW6msRrC8_e6R1H-0Mp0VY0C@mail.gmail.com][list of possible ledger options and commands]]
   :CREATED:  [2010-08-16 Mon 16:48]
   :END:
** TODO [#C] [[bug:447][#447]] Make value sequences comparable
   If done, no special code is needed to do multi-column sorting.
   :PROPERTIES:
   :ID:       44493384-34BE-4184-AFCC-8AB7E3B1443E
   :CREATED:  [2010-12-03 Fri 14:13]
   :END:
** TODO [#C] [[bug:451][#451]] Handling multiple Ledgers
   - Note taken on [2010-12-27 Mon 18:25] \\
     [[message://AANLkTik8PZ4_bOSVhfPmSYfmNE3m5_cDbw7fovqD3uNX@mail.gmail.com][Re: Multiple Ledgers]]
   :PROPERTIES:
   :ID:       195EA2CB-2EDC-47DA-85A5-5C8950387ECF
   :Submitter: Zack Williams <zdwzdw@gmail.com>
   :CREATED:  [2010-12-17 Fri 05:14]
   :END:
** DEFERRED [[bug:177][#177]] lot_price should be able to return if commodity is "fixed rate"
   - State "DEFERRED"   from "TODO"       [2010-06-15 Tue 05:23]
   :PROPERTIES:
   :ID:       EF5442E5-4A83-45A5-98F8-DFEEF6F8AC6D
   :CREATED:  [2009-11-24 Tue 22:02]
   :END:
** DEFERRED [[bug:179][#179]] Allow specification of times on transactions and postings
   - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 17:08]
   The value expressions to expose this would be:
   | hour   | The hour                              |
   | min    | The minute                            |
   | daymin | Minutes past midnight of that day     |
   | absmin | Minutes since the epoch (for sorting) |
   :PROPERTIES:
   :ID:       C0A606E0-AC51-4D0A-99F7-75C3E5E98F2B
   :CREATED:  [2010-05-22 Sat 16:46]
   :END:
** DEFERRED [[bug:182][#182]] Port Gnucash support to 3.0
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:57]
   :PROPERTIES:
   :ID:       024046FE-DAB6-48E0-9F27-B2747180267C
   :Message:  [[message://96abdebf-d2ae-40fa-b555-c2329f91602b@q36g2000prg.googlegroups.com][How to use gnucash with v3]]
   :Submitter: Xavier Shay <xavier-list@rhnh.net>
   :CREATED:  [2010-05-25 Tue 16:42]
   :END:
** DEFERRED [[bug:233][#233]] Make 'last' a valexpr term of the last posting output
   - State "DEFERRED"   from "TODO"       [2010-06-14 Mon 08:15]
   :PROPERTIES:
   :ID:       7517CE3B-C3B0-460D-806B-31341272DE79
   :CREATED:  [2010-06-06 Sun 06:42]
   :END:
** DEFERRED [[bug:269][#269]] Add a "date" term to report queries
   - State "DEFERRED"   from "TODO"       [2009-11-06 Fri 01:55] \\
     This has been coded, but is not being enabled yet until I see that it has some
     value.
   :SCRIPT:
   ledger reg checking show date "june last year"
   :END:
   Write a compliance test to make sure that "june last year" (with --now) and
   "june 2009" do what's expected.  Make ~ be the shortcut key, with parsing
   behavior similar to =.
   :PROPERTIES:
   :ID:       BBBD2434-3763-45DB-A8EC-59DD47B3E387
   :CREATED:  [2009-11-04 Wed 16:27]
   :END:
** DEFERRED [[bug:271][#271]] Add a {{total}} syntax for lot price specification
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   I had another idea: do you remember I mentioned a problem I had, which that
   some of my trade confirmation slips provide the "adjusted cost base" and not
   the cost-per-share? This makes it a big ugly to enter such postings, even
   with expressions:
   :DATA:
     BrokerAccount    -29.435 WIDGETS {353.51435/29.435 USD} @ 13.02 USD
   :END:
   (I didn't test the above, by the way, that was your suggestion when we
   talked last time.)

   I propose this syntax:
   :DATA:
     BrokerAccount    -29.435 WIDGETS {{353.51435 USD}} @ 13.02 USD
   :END:
   It's a bit similar to the idea of @ vs. @@ where the single char (@) is for
   price, and the double (@@) is for total amount. Using {{ ... }} refers to
   the total cost, while { ... } refers to the cost price (per share).
   :PROPERTIES:
   :Submitter: Martin Blais <blais@furius.ca>
   :Version:  2.6
   :Ticket:   188
   :ID:       C9E09993-CC01-41C6-BADC-0A9AA1221419
   :CREATED:  [2008-04-20 Sun]
   :END:
** DEFERRED [[bug:273][#273]] Add complete calculation history in Ledger
   - State "DEFERRED"   [2009-02-24 Tue 04:00]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   146
   :ID:       B1F0071C-BD7D-4311-8DF2-7868F9CA7A29
   :END:
** DEFERRED [[bug:274][#274]] Add support for command aliases, to allow "canned reports"
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID:       ADD3FB96-D19A-47F0-9F0B-1896328D6380
   :CREATED:  [2009-02-04 Wed 19:57]
   :END:
** DEFERRED [[bug:278][#278]] Allow reading an encrypted ledger file directly
   - State "DEFERRED"   from "TODO"       [2010-06-12 Sat 14:02]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:33]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:00]
   This would be done using libgpg.
   :PROPERTIES:
   :ID:       58512060-B3DD-438D-9BFE-D64D5DB9439B
   :CREATED:  [2009-10-23 Fri 06:13]
   :END:
** DEFERRED [[bug:279][#279]] Annotations should allow for HH:MM:SS
   - State "DEFERRED"   [2009-02-24 Tue 04:02]
   And also datetime should display this if it's there (but not if it's
   midnight).

   To implement this, add a parsing option that if, before the code, there is a
   string fitting HH:MM:SS, then it is taken to be a time value.  This will
   require making the parsing of date_t and datetime_t flexible and adaptive
   (and stream-based).
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   149
   :ID:       F7DDD7D6-D219-4645-BB02-33AF74BED44B
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:280][#280]] Check for duplicated transactions
   - State "DEFERRED"   from "TODO"       [2010-06-12 Sat 14:02]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:05]
   Either by date/payee/magnitude, or even payee/magnitude if --strict is on.
   :PROPERTIES:
   :ID:       4F58ACC1-498A-41A5-9164-93CD30B3CAC5
   :CREATED:  [2009-10-23 Fri 06:12]
   :END:
** DEFERRED [[bug:284][#284]] Greatly improve Ledger's help system
   - State "DEFERRED"   from "TODO"       [2010-06-15 Tue 08:44]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:05]
   :PROPERTIES:
   :ID:       2E0D3A34-41DF-470C-8A2D-0A66B1DAA6E9
   :CREATED:  [2009-02-04 Wed 19:57]
   :END:
** DEFERRED [[bug:286][#286]] Implement readline completion for the REPL
   - State "DEFERRED"   from "TODO"       [2010-06-15 Tue 05:24]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:31]
   [[file:main.cc::jww%202009%2002%2005%20NYI][NYI]]
   :PROPERTIES:
   :ID:       EF3D6703-AD14-48B3-A9EE-481E5FC295AB
   :CREATED:  [2009-11-03 Tue 13:59]
   :END:
** DEFERRED [[bug:288][#288]] Integrate Org-mode with Ledger
   - State "DEFERRED"   from "TODO"       [2010-05-08 Sat 03:15]
   If you're on a trip you could accumulate your expense into an Org-table, and
   then either easily export that to your Ledger file later, or maybe even have
   Ledger read such data directly.
   :PROPERTIES:
   :ID:       01B4C4E5-63AE-4915-A39A-AA6E07D9F19F
   :CREATED:  [2010-04-11 Sun 17:48]
   :END:
** DEFERRED [[bug:290][#290]] journal_t objects should be copyable
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:23]
   This also has to do with making them serializable.  There should be a way to
   "activate" a journal for the current session, which sets up the
   commodity_pool reference for amount_t.
   :PROPERTIES:
   :ID:       9ECF98A8-8C8C-42D1-B8A0-EB42F49AAED9
   :END:
** DEFERRED [[bug:291][#291]] Make a curses or http GUI for Ledger
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:00] \\
     This is waiting for either the new Emacs rewrite, or the Python support code.
   :PROPERTIES:
   :ID:       8716A41C-3570-4193-A95D-9829F4FF8798
   :CREATED:  [2009-10-23 Fri 06:13]
   :END:
** DEFERRED [[bug:294][#294]] Forecasting performance would be weak with a lot of period xacts
   - State "DEFERRED"   [2009-02-24 Tue 04:05]
   What happens to performance with lots of accounts, of commodities?
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   115
   :ID:       68E4C919-14BA-4AB1-A60B-FC176E966B45
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:297][#297]] Support debit/credit register and balance reports
   - State "DEFERRED"   from "TODO"       [2009-11-25 Wed 02:33]
   - Note taken on [2009-11-25 Wed 02:11] \\
     See: http://en.wikipedia.org/wiki/Debits_and_credits#.27T.27_Accounts.
   This would show debit amounts in one column, and credit amounts in a second
   column, rather than conflating positive and negative values in a single
   column.
   :PROPERTIES:
   :ID:       A3A7E04A-036F-498D-8C7D-FCE38DC858BF
   :CREATED:  [2009-11-25 Wed 02:09]
   :END:
** DEFERRED [[bug:298][#298]] Support for exceptions to interval_t
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 18:13]
   For example, "monthly except June".
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   147
   :ID:       A8AC5063-AB2F-4031-8821-2084B7B6497C
   :CREATED:  [2008-04-11 Fri]
   :END:
** DEFERRED [[bug:300][#300]] Warn if a file link points to a missing file
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:24]
   :PROPERTIES:
   :ID:       232CCAA9-77C3-4541-B894-7F0CA9A7747B
   :CREATED:  [2009-11-02 Mon 15:50]
   :END:
** DEFERRED [[bug:320][#320]] Implement move constructors for amount_t, balance_t and value_t
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 14:54]
   This implies getting rid of the current reference counting structures too.
   :PROPERTIES:
   :ID:       558FDCF1-2C7A-4D20-94A3-48A62FF84104
   :CREATED:  [2010-06-08 Tue 19:22]
   :END:
** DEFERRED [[bug:361][#361]] Change value expression syntax to closely match Haskell's
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:57]
   :PROPERTIES:
   :ID:       5E82B329-EFB9-432E-A42C-E52C8032210B
   :CREATED:  [2010-06-22 Tue 01:31]
   :END:
** DEFERRED [[bug:365][#365]] Generalize value sequences into iterators and generators
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   :PROPERTIES:
   :ID:       EA919747-398C-44DA-9A8C-BE07643E42B4
   :CREATED:  [2010-06-24 Thu 20:16]
   :END:
** DEFERRED [[bug:366][#366]] Add "each" syntax, and closures like Ruby has
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   :PROPERTIES:
   :ID:       8F4B51C1-3887-4997-908E-F3CD167C00F0
   :CREATED:  [2010-06-24 Thu 20:30]
   :END:
** DEFERRED [[bug:408][#408]] Enabling OFX support in Ledger 3
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   If it helps, I use http://code.google.com/p/ofx-parser/ to convert my OFX
   files into ledger format (it doesn't know about ledger format, but it is
   fairly trivial to take an OFX object tree and output it as ledger).
   :PROPERTIES:
   :ID:       EC6DDB71-E008-4D58-9B3D-D059C7D113F3
   :Submitter: Xavier Shay <xavier-list@rhnh.net>
   :Message:  [[message://9d4f0817-f8ce-4d76-9c21-1f40d4f5ee6f@t3g2000vbb.googlegroups.com][Re: Enabling OFX support in Ledger 3]]
   :CREATED:  [2010-08-19 Thu 23:35]
   :END:
** DEFERRED [[bug:413][#413]] Have a look at Boost.TimeSeries
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   This might be a better replacement for times.cc.
   :PROPERTIES:
   :ID:       8A015298-2838-4DF8-B225-262AF77D7DB7
   :CREATED:  [2010-09-18 Sat 14:45]
   :END:
** DEFERRED [[bug:414][#414]] Use Boost.Accumulator for ledger stats
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   Perhaps using Accumulator would simplify the code?
   :PROPERTIES:
   :ID:       59AA0D1F-C788-4307-844C-716E74828F34
   :CREATED:  [2010-09-18 Sat 14:42]
   :END:
** DEFERRED [[bug:461][#461]] Balance report that shows commodities and value or basis cost
   - State "DEFERRED"   from "TODO"       [2011-01-01 Sat 05:18]
   :PROPERTIES:
   :ID:       EB865380-8B2E-4847-AC97-D07EE9EC8A9D
   :Submitter: jimr <jim.robinson@gmail.com>
   :Message:  [[message://760a3e61-0b99-458c-b251-4fe45378df99@22g2000prx.googlegroups.com][Re: reporting on specific commodities?]]
   :CREATED:  [2010-12-30 Thu 07:51]
   :END:
** DEFERRED [[bug:471][#471]] Swapping out memory allocators for performance testing
   - State "DEFERRED"   from "TODO"       [2011-02-04 Fri 07:56]
   :PROPERTIES:
   :ID:       0BEC0050-A9B8-4B41-8483-E44AAF4C295F
   :Message:  [[message://4D31324D.3070903@pathscale.com][Re: Collaborating on boost performance]]
   :CREATED:  [2011-01-18 Tue 04:23]
   :END:
** NOTE Different types of commodity transactions
   - Never revalue this commodity
   - Only revalue this commodity if -X is used
   - Revalue this commodity at current market price
   - Revalue this commodity at the transaction price
   - Revalue this commodity at transaction price while a predicate holds true
   :PROPERTIES:
   :ID:       40235519-1818-4FFC-B509-590895D1DCB9
   :VISIBILITY: folded
   :CREATED:  [2010-11-27 Sat 15:00]
   :END:
* Python
  :PROPERTIES:
  :CATEGORY: Python
  :END:
** DEFERRED [[bug:407][#407]] Problem with decimal commas and Python integration support
- State "DEFERRED"   from "TODO"       [2012-02-28 Tue 03:19]
   :PROPERTIES:
   :ID:       91F750B3-C7D0-4945-8E9D-268AAA40529C
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://20100811223735.A7B214227F8@mail.johnwiegley.com][{Bug 184} For those interested in the Python support]]
   :CREATED:  [2010-08-16 Mon 16:47]
   :END:
** DEFERRED [[bug:424][#424]] Make acprep compatible with Python 3                                    :ATTACH:
- State "DEFERRED"   from "TODO"       [2012-02-28 Tue 03:19]
   - Note taken on [2010-11-26 Fri 12:55] \\
     [[message://f97b7781-0cd1-48d4-b6d6-ec75688c8241@q14g2000yqe.googlegroups.com][Re: acprep Python 3 {patch}]]
   :PROPERTIES:
   :ID:       AA0C71E0-00BB-4EEF-A5F6-F7B44CA4C3E0
   :Submitter: John Piasetzki <john.piasetzki@gmail.com>
   :Message:  [[message://AANLkTimJcMdtJ-xwZkoRyJw7WjoNvzUwU6mmKhr9wjK_@mail.gmail.com][acprep Python 3 {patch}]]
   :Attachments: 0001-Update-acprep-to-work-with-Python3.patch
   :CREATED:  [2010-11-24 Wed 13:43]
   :END:
** DEFERRED [[bug:302][#302]] Add implicit conversion of mask_t to re
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:36]
   [[file:py_value.cc::jww%202009%2011%2002%20Add%20implicit%20conversion%20of%20mask%20objects][py_value.cc]]
   :PROPERTIES:
   :ID:       DF00F985-18A8-438D-819C-EC5962EEE925
   :CREATED:  [2009-11-03 Tue 14:01]
   :END:
** DEFERRED [[bug:303][#303]] After using python/server.py, it segfaults on exit
   - State "DEFERRED"   from "TODO"       [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       DA30D886-863D-4173-AE3C-369A98F0CD59
   :CREATED:  [2009-11-21 Sat 02:20]
   :END:
** DEFERRED [[bug:304][#304]] Allow a Python function to be used to download quotes
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:27]
   - State "TODO"       from "DEFERRED"   [2009-11-05 Thu 04:23]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       277ACB9A-9B43-4D3D-8BF9-D64CBCF3674A
   :CREATED:  [2009-06-24 Wed 17:27]
   :END:
** DEFERRED [[bug:305][#305]] Allow to_xml methods on all Python-exposed objects
   - State "DEFERRED"   from "TODO"       [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       0EDDE812-2913-4D16-BF2E-9C343F32A958
   :CREATED:  [2009-11-19 Thu 17:38]
   :END:
** DEFERRED [[bug:306][#306]] Do a complete review of all the Python bindings
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   Looking for correctness, consistency, and rationality of interfaces.
   :PROPERTIES:
   :ID:       DFC8101B-CB9D-4522-8B93-F7546183BB66
   :CREATED:  [2009-11-11 Wed 21:38]
   :END:
** DEFERRED [[bug:307][#307]] Every ledger object should honor the iteration protocol
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   - Note taken on [2009-11-07 Sat 06:20] \\
     The only ones left are balance_t and value_t.
   :PROPERTIES:
   :ID:       4E160265-93EA-42EE-825D-078A2A459BCA
   :CREATED:  [2009-11-02 Mon 15:50]
   :END:
** DEFERRED [[bug:308][#308]] Get ledger python to run within the build tree
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID:       7274224C-3470-4A9F-B56E-A499F39E13C9
   :CREATED:  [2009-03-09 Mon 20:33]
   :END:
** DEFERRED [[bug:309][#309]] Have methods for serializing to and from a string
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:23]
   :PROPERTIES:
   :CREATED:  [2009-11-03 Tue 07:41]
   :ID:       9383A1B7-34C8-4B3E-8FA0-B22A92F6B10F
   :END:
** DEFERRED [[bug:310][#310]] Having problems exporting std::pair<T, U *> from Boost.Python
   - State "DEFERRED"   from "TODO"       [2009-11-25 Wed 02:36]
   This is the e-mail I was drafting for the mailing list, in response to
   [[message://770306.78630.qm@web111402.mail.gq1.yahoo.com][Re: {boost} Boost.Python question about converters and make_getter]]:

   Just one quick question:

   I have a Boost.Python method that looks like this:

     .def("__iter__", range<return_value_policy<return_by_value> >
          (py_pool_commodities_begin, py_pool_commodities_end))

   Where the members of the map are std::pair<string, MyObject *>.  I want the
   pair passed by value, but I need the "second" member to be accessed using
   reference_existing_object.
   :PROPERTIES:
   :ID:       50EA95EE-E17A-444C-84BE-123F080811FA
   :Message:  [[message://0B5E0EBA-E74E-4303-A6FC-3CBA42B7055B@gmail.com][Re: {boost} Boost.Python question about converters and make_getter]]
   :CREATED:  [2009-11-24 Tue 22:18]
   :END:
** DEFERRED [[bug:311][#311]] In py_report.cc, export all "global" functions
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   Move as many of these functions as possible into their related class.  For
   example, scrub should go into value_t::scrub.
   :PROPERTIES:
   :ID:       0912FE8A-79BE-4A6A-9B0F-6A73547A9B2C
   :CREATED:  [2009-11-05 Thu 08:28]
   :END:
** DEFERRED [[bug:312][#312]] Make sure I'm handling object lifetime correctly for Boost.Python
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   http://wiki.python.org/moin/boost.python/CallPolicy
   :PROPERTIES:
   :ID:       D3727E42-6180-44F5-AD0B-651BAA822C8D
   :CREATED:  [2009-11-03 Tue 08:55]
   :END:
** DEFERRED [[bug:313][#313]] Standardize the find_account and find_commodity methods
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   It should be find_account(STR), find_account(MASK), and
   find_or_create_account(STR).  Some with find_commodity, etc.
   :PROPERTIES:
   :ID:       BC6E6475-14C8-4E20-BF4E-0A0FAD36F01D
   :CREATED:  [2009-11-05 Thu 16:11]
   :END:
** DEFERRED [[bug:314][#314]] The error output when calling Python is out of order
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :OUTPUT:
   TypeError: No to_python (by-value) converter found for C++ type: ledger::value_t
   While evaluating value expression:
   myvalue(23)
   ^^^^^^^^^^^
   Error: While calling Python function 'myvalue'
   :END:
   This should be:
   :OUTPUT:
   While evaluating value expression:
   myvalue(23)
   ^^^^^^^^^^^
   While calling Python function 'myvalue':
   Error: TypeError: No to_python (by-value) converter found for C++ type: ledger::value_t
   :END:
   :PROPERTIES:
   :ID:       7CF0160B-A3FF-4BE7-B6D3-788F9556A20F
   :CREATED:  [2009-01-23 Fri 15:57]
   :END:
** DEFERRED [[bug:315][#315]] Use Python to create a per-account debit/credit report
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   Is there a way to let ledger output its reports showing the accounts in the
   more conventional way as debit and credit accounts, instead of having a
   positive or negative saldo?

   Here is one example:
   :OUTPUT:
   Assets:Bank
   Tr.# date            Text                    debit           credit          saldo
   1    2008-01-01      Mr. Sponsor             500                             500
   2    2008-01-02      Bill                                    100             400

   Income:Donations
   Tr.# date            Text                    debit           credit          saldo
   1    2008-01-01      Mr. Sponsor                             500             -500

   Expenses:Electricity
   Tr.# date            Text                    debit           credit          saldo
   2    2008-01-02      Bill                    100                             100
   :END:
   There should be a way of distinguishing between debit accounts, as assets
   and expenses, and credit accounts, as Income and liabilities. It is of
   course possible to processs ledger's output to achieve this, but it would be
   nice if it could be done in ledger directly.
   :PROPERTIES:
   :Submitter: Christopher <christopher.illies@ki.se>
   :Version:  2.6.1
   :ID:       444EFEE1-D873-4FD3-BB07-4E605BCB2BF4
   :CREATED:  [2008-10-08 Wed 00:58]
   :END:
** DEFERRED [[bug:316][#316]] Write a Python demo script
   - State "DEFERRED"   from "STARTED"    [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       9F26072D-C8E1-49CB-BF28-E2D32B170108
   :CREATED:  [2009-11-19 Thu 17:37]
   :END:
* Build
  :PROPERTIES:
  :CATEGORY: Build
  :END:
** TODO [[bug:371][#371]] VS project files & Windows installer
   :PROPERTIES:
   :ID:       E8F11AFF-8FD8-411C-8876-4A942793E9C9
   :Submitter: Roel Vanhout <roel.vanhout@gmail.com>
   :Message:  [[message://AANLkTilwxjENAIajnVXvoes8H1ccWUgeDsMNirDNgbu-@mail.gmail.com][VS project files & Windows installer]]
   :CREATED:  [2010-06-28 Mon 23:54]
   :END:
** TODO [[bug:544][#544]] Failing tests in Ledger should cause all tests to fail
   :PROPERTIES:
   :ID:       B4E16081-08C6-430E-82F6-00304C388A22
   :CREATED:  [2011-07-08 Fri 13:40]
   :END:
** TODO [[bug:572][#572]] Rebuild Boost and Ledger with gcc-4.6
   - State "TODO"       from "STARTED"    [2011-08-21 Sun 15:03]
   :PROPERTIES:
   :ID:       BE861EF4-241B-4D26-A12C-03E8B369DA4F
   :CREATED:  [2011-08-18 Thu 10:01]
   :END:
** TODO [[bug:573][#573]] acprep should accept --python --python-home and --python-version
   :PROPERTIES:
   :ID:       495BADED-6797-4E7E-B95E-DC9C7F292239
   :CREATED:  [2011-08-18 Thu 14:32]
   :END:
** TODO [[bug:574][#574]] Change acprep bindmg to include Boost and all dependencies
   :PROPERTIES:
   :ID:       BD6B88C1-1312-4DEB-B63F-B679F01807BE
   :CREATED:  [2011-08-23 Tue 13:24]
   :END:
** TODO [[bug:586][#586]] Improve build error for users without MacPorts or Fink
  "./acprep dependencies" only works if you have MacPorts installed. If you
  have Fink installed rather than MacPorts then it reports an error, but if
  you have neither then it silently does nothing. This silence led me to this
  that it had there were were no unresolved dependencies.
  :PROPERTIES:
  :ID:       AE5942B2-1622-42A3-B554-1C5E2BA3A1B1
  :CREATED:  [2011-10-24 Mon 15:33]
  :URL:      https://github.com/jwiegley/ledger/issues/33
  :END:
** TODO [[bug:594][#594]] ExprTests fail if --decimal-comma is specified in ~/.ledgerrc
- Note taken on [2011-11-03 Thu 14:05] \\
  :OUTPUT:
  ======================================================================
  ERROR: testCommodityComparisons (t_amount.t_amountTestCase)
  ----------------------------------------------------------------------
  Traceback (most recent call last):
    File "/home/thierry/ledger/test/python/t_amount.py", line 24, in setUp
      x1 = Amount(u"$1.00")
  ArithmeticError: Incorrect use of thousand-mark period
  :END:
  :PROPERTIES:
  :ID:       B89723B6-203F-4746-8B16-299FB5480659
  :CREATED:  [2011-11-01 Tue 10:30]
  :Date:     Mon, 31 Oct 2011 20:03:45 +0100
  :Message:  [[message://CA+R89YLLmnr2iYxCnmsjkwNwf8dSv1zHaE6s3xHGxJnEWzC1UQ@mail.gmail.com][{ledger bug} ExprTests failed]]
  :Submitter: Thierry Daucourt <thierry.daucourt@free.fr>
  :END:
** TODO [[bug:644][#644]] MacPorts #25213: ledger-devel Portfile
:PROPERTIES:
:ID:       C1CC1703-52F7-4203-B0C2-1C5BDA590493
:CREATED:  [2011-11-24 Thu 01:27]
:Date: Thu, 24 Nov 2011 07:04:31 +0000
:Message: [[message://063.34c9b6114c17ced1224f656ffb8081df@macports.org][Re: {MacPorts} #25213: ledger-devel Portfile]]
:Submitter: MacPorts <noreply@macports.org>
:END:
** TODO [[bug:645][#645]] acprep opt producing a debug executable
Just grabbed the latest "next" and acprep opt is building a 14MB executable
that runs very slowly.  It produces a file identical to acprep debug
:OUTPUT:
20:06:04 ~/ledger > ./acprep opt
...
20:18:34 ~/ledger > ls -la ledger
-rwxr-xr-x  1 cpearls  staff  14061676 Nov 10 20:18 ledger

20:20:36 ~/ledger > ./acprep debug update
...
20:33:13 ~/ledger > ls -la ledger
-rwxr-xr-x  1 cpearls  staff  14061676 Nov 10 20:33 ledger
:END:
:PROPERTIES:
:ID:       0D1B3962-02A1-4213-8025-3849DA554337
:CREATED:  [2011-11-11 Fri 14:08]
:Date:     Thu, 10 Nov 2011 20:38:12 -0700
:Message:  [[message://CAKs9TOLp84z6Od+Cg27y-uY42ZW7UkQAbUVo4TeviX2Mv1wRbQ@mail.gmail.com][acprep opt producing a debug executable]]
:Submitter: Craig Earls <enderw88-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
:END:
** TODO [[bug:646][#646]] configure is not finding python on freebsd 8.2
... 2.6 and 2.7 installed

:OUTPUT:
checking whether /usr/bin/python version >= 2.4... configure: error: too old
acprep: ERROR: Execution failed: sh configure CPPFLAGS=-isystem
/usr/local/include -isystem /usr/local/include -isystem
/usr/local/include/python2.6 CXXFLAGS=-Wconversion -g -pipe LDFLAGS=-fpch-deps
-g -L/usr/local/lib --with-included-gettext --enable-python --enable-pch
--enable-debug
:END:

also config is setting python to /usr/bin/python, from config.log:
PYTHON='/usr/bin/python'

and python is /usr/local/bin/python , python version 2.7 

how do I get you the config.log file?
:PROPERTIES:
:ID:       A82B7536-D1F5-47C2-9CDE-6E66AC07B454
:CREATED:  [2011-12-05 Mon 00:36]
:Date: Sat, 3 Dec 2011 11:41:04 -0800
:Message: [[message://jwiegley/ledger/issues/47@github.com][{ledger} configure is not finding python on freebsd 8.2, 2.6 and 2.7 installed (#47)]]
:Submitter: Marc Spitzer <reply+i-2438826-719e6bc6d8ff7b4d80a3aa0f1e5d3ce9db669c36-8460@reply.github.com>
:END:
** TODO [#C] [[bug:234][#234]] Add some more configure arguments
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:36]
   - State "DEFERRED"   from "TODO"       [2009-10-31 Sat 03:15]
   ./configure .... with-gmp=...  with-mpfr= ... with-python=...
   :PROPERTIES:
   :ID:       070D3625-FCAE-44B0-B1B7-BFD6BAD4028D
   :CREATED:  [2009-03-26 Thu 02:09]
   :END:
** TODO [#C] [[bug:405][#405]] Strange libboost suffix on Debian Squeeze with acprep
   :OUTPUT:
   ./acprep update
   acprep: INFO: Invoking primary phase: update
   acprep: INFO: Executing phase: update
   acprep: INFO: Executing phase: pull
   Already up-to-date.
   acprep: INFO: Executing phase: submodule
   acprep: INFO: Executing phase: make
   acprep: INFO: Executing phase: config
   acprep: INFO: Executing phase: submodule
   acprep: INFO: Executing phase: autoconf
   acprep: INFO: Executing phase: configure
   acprep: INFO: ./configure must be run because Makefile does not exist
   acprep: INFO: Looking for Boost in /usr/local/lib...
   acprep: INFO: Looking for Boost in /opt/local/lib...
   acprep: INFO: Looking for Boost in /sw/lib...
   acprep: INFO: Looking for Boost in /usr/lib...
   acprep: INFO: Found a Boost library: libboost_regex-gcc41-1_34_1.so.1.34.1
   acprep: INFO: Found Boost suffix => -gcc41-1_34_1
   acprep: INFO: Boost was found here:
   acprep: INFO: BOOST_HOME    => /usr
   acprep: INFO: BOOST_SUFFIX  => -gcc41-1_34_1
   acprep: INFO: Noticing include directory => /usr/local/include
   acprep: INFO: Noticing include directory => /usr/include/boost
   acprep: INFO: Noticing library directory => /usr/local/lib
   acprep: INFO: Noticing library directory => /usr/lib
   acprep: INFO: System type is => Linux
   acprep: INFO: Setting up build flavor => debug
   ...
   configure: error: in `/var/www/dev/ledger':
   configure: error: "Could not find boost_regex library (set CPPFLAGS and LDFLAGS?)"
   See `config.log' for more details.
   acprep: ERROR: Execution failed: sh configure CPPFLAGS=-isystem /usr/local/include -isystem /usr/include/boost CXXFLAGS=-fpch-deps -Wconversion -pthread -g -pipe LDFLAGS=-g -L/usr/local/lib -L/usr/lib --with-boost-suffix=-gcc41-1_34_1 --with-included-gettext --enable-python --enable-pch --enable-debug
   :END:
   I'm now trying just "./configure" and it seems to be going OK
   :PROPERTIES:
   :ID:       4EBBD321-AE9E-45A6-A37E-18EBEFFB865F
   :CREATED:  [2010-09-10 Fri 17:21]
   :END:
** TODO [#C] [[bug:456][#456]] Building on Arch Linux
   :PROPERTIES:
   :ID:       00C5345C-E8FA-475A-BCEA-3F15E848AC84
   :Submitter: emsenn <emsenn@emsenn.com>
   :Message:  [[message://AANLkTikJRbwJ6mkChu0zXF1ny1UL0vpaX9mtK%2BXP_A7F@mail.gmail.com][ledger on Arch Linux]]
   :CREATED:  [2010-11-28 Sun 20:32]
   :END:
** DEFERRED [[bug:216][#216]] Ledger packages for Debian
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 14:52]
   - Note taken on [2010-05-31 Mon 15:06] \\
     [[message://AANLkTilCFWypqs-A8-X7OMRP-ivli9vwZWlIM3TQwHaW@mail.gmail.com][Re: Ledger for Ubuntu hardy?]]
   - Note taken on [2010-05-31 Mon 15:05] \\
     [[message://1275233562.30458.480.camel@sirius][Re: Ledger for Ubuntu hardy?]]
   :PROPERTIES:
   :ID:       4E07F327-5B75-4804-ACFE-AAB4CE2FA20E
   :URL:      [[https://launchpad.net/~mbudde/%2Barchive/ledger/%2Bpackages][Packages in “Ledger” : Ledger : Michael Budde]]
   :CREATED:  [2010-05-29 Sat 20:00]
   :END:
** DEFERRED [[bug:238][#238]] Build .deb, .rpm, .exe (in .zip), and .pkg installs
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 19:16]
   :PROPERTIES:
   :ID:       769BFB8F-F805-4510-ABF2-A933D0EDBE0C
   :CREATED:  [2009-01-29 Thu 19:40]
   :END:
** DEFERRED [[bug:240][#240]] Setup virtual machines for every OS Ledger should run on
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 19:16]
   :PROPERTIES:
   :ID:       C91FEFD0-CF11-41C2-B2D0-B6BED7E142A2
   :CREATED:  [2009-10-08 Thu 17:12]
   :END:
** DEFERRED [[bug:339][#339]] Automate the building of Ledger binaries on CentOS 5
   - State "DEFERRED"   from "TODO"       [2010-06-19 Sat 16:18]
   :PROPERTIES:
   :ID:       09B41575-766E-4598-A8F3-164D8AE25589
   :CREATED:  [2010-06-15 Tue 07:08]
   :END:
** DEFERRED [[bug:421][#421]] Provide a pre-built DMG of Leger for OS X 10.5 users                   :blocker:
   - State "DEFERRED"   from "TODO"       [2011-02-12 Sat 18:18]
   :PROPERTIES:
   :ID:       61815102-1516-48A3-AC16-2746ADA72D3C
   :Submitter: David Glasser <glasser@davidglasser.net>
   :Message:  [[message://AANLkTimq1xuJbPnka5%2BoNLjV_zjPoMeGMR6yeWTBg2mz@mail.gmail.com][Ledger 3 on OS X 10.5?]]
   :CREATED:  [2010-10-18 Mon 16:12]
   :END:
* Tests
  :PROPERTIES:
  :CATEGORY: Tests
  :END:
** TODO [[bug:349][#349]] Implement empty tests in test/baseline
   :PROPERTIES:
   :ID:       C243CD5F-F852-4BA8-A164-1F14CB56F326
   :CREATED:  [2010-06-18 Fri 19:45]
   :END:
** TODO [#C] [[bug:185][#185]] Read through Peter's article, and make sure it all applies             :ATTACH:
   :PROPERTIES:
   :ID:       72FC1715-E53C-4D4D-BF2C-514EB376DD19
   :Attachments: Tutorial%20on%20multiple%20currency%20accounting.pdf
   :CREATED:  [2009-11-24 Tue 22:04]
   :END:
** TODO [#C] [[bug:340][#340]] Create OptionsTests, which generate possible option combinations
   :PROPERTIES:
   :ID:       54EED1FA-C0A2-4D3A-9C5A-F44E36504179
   :CREATED:  [2010-06-15 Tue 20:25]
   :END:
** DEFERRED [[bug:187][#187]] Use coverage analysis to determine if everything is being tested
   - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 00:44]
   :PROPERTIES:
   :ID:       13E43A50-FC0C-4C3D-A175-7C6CB147A37C
   :CREATED:  [2008-08-14 Thu]
   :END:
** DEFERRED [[bug:318][#318]] New tests to create for Ledger [0/3]
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 21:54]
   - [ ] GarbageTests
         Feed every one of the distribution's source files back to Ledger, to
         make sure it dies gracefully.
   - [ ] RandomTests
         Feed random data (probably base64) both as options and input.
   - [ ] ScrambleTests
         Pass random combinations of options.
   :PROPERTIES:
   :ID:       F866DFA5-7350-45D3-BF76-286D68755A2A
   :CREATED:  [2009-02-27 Fri 16:19]
   :END:
** DEFERRED [[bug:319][#319]] Use --cache=/dev/null when running the unit tests
   - State "DEFERRED"   from "TODO"       [2009-11-06 Fri 02:08] \\
     I cannot read/write the cache to /dev/null, so I'll have to use a temp file
     that gets cleaned up.
   :PROPERTIES:
   :ID:       957CABA8-FEE1-4609-ABCD-0B285B49F2CE
   :CREATED:  [2009-11-03 Tue 18:55]
   :END:
* Docs
  :PROPERTIES:
  :CATEGORY: Docs
  :END:
** TODO [[bug:452][#452]] Fixes to the ledger wiki/README-1ST
   :PROPERTIES:
   :ID:       07EB8797-458D-4FBB-B125-062BAC1B732B
   :Submitter: Matthew Palmer <mpalmer@hezmatt.org>
   :Message:  [[message://20101207061035.GC4783@hezmatt.org][Fixes to the ledger wiki/README-1ST]]
   :CREATED:  [2010-12-07 Tue 16:33]
   :END:
** TODO [[bug:500][#500]] Enforcing balanced books
   - Note taken on [2011-03-16 Wed 22:14] \\
     From: tazz_ben <ben@wbpsystems.com>

     It all involves scenarios where you (the accountant) has screwed up.
     Don't think of this as an exhaustive list I'm just throwing you some
     examples your way.

     1. Say you have an asset (like a building) your depreciating for some
        number of years and you get in the habit of doing it and you
        depreciate it below zero.  So, with a normal accounting program you
        would catch this one of two ways; one the program won't allow the
        account onto the balance sheet because it is a non-contra asset
        account with a credit balance so it knows that's not right so the
        fundamental equation doesn't balance.  Alternatively, it places it in
        the assets sections as a negative number and the fundamental equation
        does balance but you will see it anyway because it will be the only
        non-contra account with a negative sign in front of it. You *might*
        find this on ledger, but because Ledger doesn't know about contra
        accounts, your negative asset account might end up lost in a sea of
        contras.

     2. This one is simple. Say you have a suspense account (these are suppose
        to contain transactions for VERY brief periods -- for instance I use
        one to store automated transactions until they post -- under 60
        seconds). They don't go on the balance sheet; ever.  If one is
        containing a balance, then it will knock your balance sheet off.

     3. This one is harder to understand, but it is the most common scenario
        so I'll mention it again.  There is a sub-topic of accounting called
        work-in-progress accounting, or sometimes referred to as
        construction-in-progress.  This is type of accounting you use when you
        are hired to do a very long job (usually very expensive, otherwise you
        wouldn't bother).  Think contractor hired to build a road for a (lump
        sum) 100 million and having it take three years.  Anyhow, the
        accounting is extremely complex because it has to be (the goal is to
        accurately report income while the project is still underway, yeah,
        that's why its hard).  And there is multiple points where you can
        screw up (there is this whole thing where you are re-estimating that
        can get very confusing), anyhow any one of those screw ups will be
        found on a properly formed balance sheet.
   :PROPERTIES:
   :ID:       6283EA8C-3E2B-463E-9E29-9554F08F4A9D
   :CREATED:  [2011-03-16 Wed 16:38]
   :Message:  [[message://ilo3d5$kuq$1@dough.gmane.org][enforcing balanced books]]
   :Submitter: Simon Michael <simon@joyful.com>
   :Date:     Tue, 15 Mar 2011 09:16:33 -0700
   :END:
** TODO [[bug:520][#520]] Ledger's Doxygen file is broken
   :PROPERTIES:
   :ID:       74F07B78-A5E8-44EB-B662-C5E219635118
   :CREATED:  [2011-04-20 Wed 18:03]
   :Message:  [[message://BANLkTikfhhS55Bd_gJrcYNzU9=uyNsaK0g@mail.gmail.com][ledger]]
   :Submitter: press0 <press0@gmail.com>
   :Date:     Mon, 18 Apr 2011 01:20:35 -0500
   :END:
** TODO [[bug:528][#528]] vim 'commentstring'
   - Note taken on [2011-10-24 Mon 15:29] \\
     Where should this be added?
   (one liner addition, can't be bother forking)
   
   add this to 'contrib/vim/ftplugin/ledger.vim'
   #+begin_src vim
   set commentstring=;%s
   #+end_src
   useful for setting modelines in ledger files
   :PROPERTIES:
   :ID:       5E9FEB37-907E-4494-B75E-ACA9D6AA3BFA
   :CREATED:  [2011-05-17 Tue 17:54]
   :Message:  [[message://jwiegley/ledger/issues/28@github.com][{ledger} vim 'commentstring' (#28)]]
   :Submitter: felix <reply+i-902603-b6d6abde0c89d70840fd263ccbd9750abc4e5819@reply.github.com>
   :Date:     Sun, 15 May 2011 08:04:12 -0700
   :END:
** TODO [[bug:529][#529]] vim indent file
   There is another one floating around but it doesn't seem to work. It is
   basic but here it is nonetheless:
   #+begin_src vim
   " File Name: ledger.vim
   " Maintainer: Felix Hanley
   " Created: 2011-05-15
   " Updated: 2011-05-15
   " Description: Ledger indentation file for vim
   
   if exists("b:did_indent")
       finish
   endif
   let b:did_indent = 1 
   
   setlocal indentexpr=LedgerIndent()
   
   if exists("*LedgerIndent")
       finish
   endif
   
   
   function LedgerIndent()
       let lnum = prevnonblank(v:lnum - 1)
       let ind = 0 
       if lnum == 0
           return 0
       endif
       if indent(lnum) != 0 && getline(v:lnum - 1) !~ '^$'
           return -1
       endif
       if getline(lnum) =~ '^[^\d]\S\+'
           let ind = ind + &sw 
       endif
       return ind 
   endfunction
   #+end_src
   :PROPERTIES:
   :ID:       5E9B3912-B3C4-4985-BB74-FF99C7328F80
   :CREATED:  [2011-05-17 Tue 17:55]
   :Message:  [[message://jwiegley/ledger/issues/27@github.com][{ledger} vim indent file (#27)]]
   :Submitter: felix <reply+i-902562-5184554569b2269b61f555ca1f9b8d0d07d8e681@reply.github.com>
   :Date:     Sun, 15 May 2011 07:47:45 -0700
   :END:
** TODO [[bug:578][#578]] Show Craig how to write testable Ledger examples
   :PROPERTIES:
   :ID:       A204A515-E665-41C1-9C77-389F2F45EFF7
   :CREATED:  [2011-10-04 Tue 14:26]
   :Date:     Sun, 2 Oct 2011 21:20:27 -0700
   :Message:  [[message://CAKs9TOJxATpjCeQZ2JVoGSwszULOigy0NpcKYtVcj19AXWi34Q@mail.gmail.com][Draft of manual.]]
   :Submitter: Craig Earls <enderw88@gmail.com>
   :END:
** TODO [[bug:579][#579]] Depreciate assets (cars, equipment, buildings, etc)
   I've developed a couple of apps to help out ledger with depreciation.
   Depreciation, for those that don't know, is the method of recognizing an
   expense inline with when the asset is used.  For instance if you buy a
   building, you wouldn't expense it when you buy it, you'd expense it over
   the life of the building (like say 50 years).  A computer would have a much
   shorter depreciation schedule, but it would use one of the accelerated
   methods (ddb or sum of the years digits).
   
   Anyhow, ledger by itself can't really deal with this, you would have to
   make a depreciation schedule by hand then make every entry as they come up
   over time (which might encourage you to not do it on smallish assets --
   which is against GAAP -- or do it once a year, which would screw up monthly
   income).  I've automated this process with a couple of tools:
   https://github.com/tazzben/DepreciateForLedger/wiki
   https://github.com/tazzben/LedgerScheduler/wiki
   
   Depreciate for Ledger, creates every entry of the depreciation schedule.
   You can specify the depreciation method (it currently supports
   straight-line, double declining balance, sum of the years digits and a
   hybrid of straight-line and DDB), cost, residual, etc. and save it to a
   file.  This looks like any other ledger file except the dates are all in
   the future.
   
   Ledger Scheduler takes the file (which can contain any future ledger
   entries) and pushes the appropriate transactions into a target file on the
   appropriate date.  You can set this to run with cron.  Technically, you
   could set any schedule you want, but given the nature of depreciation, once
   a month is sufficient for most people, and once a day would be sufficient
   for anyone.
   :PROPERTIES:
   :ID:       CB4A2972-2F68-4419-B4EC-973725107739
   :CREATED:  [2011-07-21 Thu 21:12]
   :Date:     Sat, 2 Apr 2011 16:23:55 -0700 (PDT)
   :Message:  [[message://1024645.103.1301786635133.JavaMail.geo-discussion-forums@prfx36][Depreciate assets (cars, equipment, buildings, etc) and push them into the ledger file on a schedule]]
   :Submitter: tazz_ben <ben@wbpsystems.com>
   :END:
** TODO [[bug:640][#640]] Add the "autopoint" dependency for Debian to the README
:PROPERTIES:
:ID:       282660AC-1A0A-4681-9B62-EB9A51DC0B5F
:CREATED:  [2011-12-02 Fri 14:24]
:Date: Tue, 29 Nov 2011 20:58:58 +0000
:Message: [[message://20111129205858.GG21967@jirafa.cyrius.com][Re: ledger fails to build]]
:Submitter: Martin Michlmayr <tbm@cyrius.com>
:END:
** TODO [[bug:641][#641]] Add note about ledger openbsd port to ledger-cli.org
:PROPERTIES:
:ID:       209EBF3A-D147-49F0-B731-510183D54AEB
:CREATED:  [2011-12-15 Thu 13:23]
:Date: Thu, 15 Dec 2011 19:48:09 +0400
:Message: [[message://20111215154809.GA19226@sergeyb.sw.ru][port ledger to openbsd]]
:Submitter: Sergey Bronnikov <estetus@gmail.com>
:END:
** TODO [[bug:642][#642]] Post to the Wiki that Ledger 3 is in nixpkgs
:PROPERTIES:
:ID:       49B5728F-565B-47F1-B01B-38A6F273C502
:CREATED:  [2012-01-08 Sun 16:43]
:Date: Sat, 07 Jan 2012 12:39:53 -0500
:Message: [[message://4F088369.6060102@shealevy.com][Ledger 3 is in nixpkgs]]
:Author: Shea Levy <shea@shealevy.com>
:END:
** TODO [[bug:643][#643]] Ledger syntax coloring for TextWrangler
Those among you who (would like to) use TextWrangler (free OS X text editor)
to edit a ledger file may be interested in adding some colors to their
transactions:

https://gist.github.com/1597432

Just copy Ledger.plist into ~/Library/Application Support/TextWrangler and
re-open TextWrangler. Files with suffix .ledger will be recognized as Ledger
files. Additional suffixes can be added in TextWrangler > Preferences >
Languages.
:PROPERTIES:
:ID:       B93B60D0-1B57-4653-8E04-FEF5DCDF0725
:CREATED:  [2012-01-12 Thu 17:35]
:Date: Thu, 12 Jan 2012 10:54:58 +0100
:Message: [[message://github-87F922.10545812012012@news.gmane.org][Ledger syntax coloring for TextWrangler]]
:Author: Niekas <github-Vzr4Esry4JzzIImvGDD8mw@public.gmane.org>
:END:
** TODO [#C] [[bug:169][#169]] Language translations for 3.0
   | Name                    | E-mail                           | Language             |
   |-------------------------+----------------------------------+----------------------|
   | Thierry Daucourt        | thierry.daucourt@free.fr         | French               |
   | Alexis Hildebrandt      | alexis.hildebrandt@surryhill.net | German               |
   | Felipe Magno de Almeida | felipe.m.almeida@gmail.com       | Brazilian Portuguese |
   | Roel Vanhout            | roel.vanhout@gmail.com           | Dutch                |
   :PROPERTIES:
   :ID:       9D19729F-343C-464D-BE88-143C9DDA9394
   :CREATED:  [2009-11-09 Mon 03:40]
   :END:
** TODO [#C] [[bug:170][#170]] Fill out membership form for the Software Conservancy
- State "TODO"       from "WAITING"    [2012-01-11 Wed 14:25]
   - State "WAITING"    from "TODO"       [2010-05-22 Sat 18:47] \\
     I'm waiting for the official form to come from the Conservancy.
   - State "TODO"       from "WAITING"    [2010-05-22 Sat 15:05]
   - State "WAITING"    from "TODO"       [2010-01-22 Fri 20:06] \\
     I'm waiting on the new agreement to be sent.
   :PROPERTIES:
   :ID:       78635C7A-98F2-494F-93A4-7CDA6094E681
   :Message:  [[message://4B240026.5040408@softwarefreedom.org][Re: Offer of membership to the Ledger project into the Software Freedom Conservancy, Inc.]]
   :Submitter: Karen Sandler <karen@softwarefreedom.org>
   :CREATED:  [2009-12-17 Thu 02:44]
   :END:
** TODO [#C] [[bug:186][#186]] Rewrite the sample.dat file to be more realistic
   :PROPERTIES:
   :ID:       6E0F0FD6-38A2-4269-870F-41DE8B10D23C
   :CREATED:  [2009-11-20 Fri 18:31]
   :END:
** TODO [#C] [[bug:195][#195]] How to declare a statement reconciliation                              :ATTACH:
   :PROPERTIES:
   :ID:       32A4A048-886F-43FC-892E-EC125F372750
   :Attachments: foo.dat
   :CREATED:  [2009-12-10 Thu 18:05]
   :END:
** TODO [#C] [[bug:369][#369]] Internalize the --help option in v3
   :PROPERTIES:
   :ID:       F1FEC526-6B6D-48C2-9BA8-CDDD15595BD5
   :Submitter: Roel Vanhout <roel.vanhout@gmail.com>
   :Message:  [[message://AANLkTinl0OW5pklgt-LV-t0QbmoCor1W6wBQgFB4mdbg@mail.gmail.com][Re: --help option in v3]]
   :CREATED:  [2010-06-28 Mon 23:54]
   :END:
** TODO [#C] [[bug:423][#423]] Rubygem for converting arbitrary csv files into ledger format
   - Note taken on [2010-11-14 Sun 20:51] \\
     [[message://AANLkTimZ%2B%3DeisPa4rYgcLkb%2BnOZoqn6yj%3DuXEceNdtuh@mail.gmail.com][Re: Rubygem for converting arbitrary csv files into ledger format and guessing accounts]]
   - Note taken on [2010-11-11 Thu 12:31] \\
     [[message://AANLkTikZ4Fa45ez784k9SP47%3DkQczLA2GCyTo%3DhiLU5W@mail.gmail.com][Re: Rubygem for converting arbitrary csv files into ledger format and guessing accounts]]
   - Note taken on [2010-11-11 Thu 12:31] \\
     [[message://AANLkTim0_TFnT5WL3nBhqK%3DvE2ZNqwRvBwYQbZvvUOks@mail.gmail.com][Re: Rubygem for converting arbitrary csv files into ledger format and guessing accounts]]
   - Note taken on [2010-11-07 Sun 14:08] \\
     [[message://AANLkTinoU88tNVkO9gbOphYDsbv9oeY6uO5DmWcODv%2BQ@mail.gmail.com][Re: Rubygem for converting arbitrary csv files into ledger format and guessing accounts]]
   :PROPERTIES:
   :ID:       68744705-640F-4F62-9A7B-EE8C815FD596
   :Submitter: Andrew Cantino <cantino@gmail.com>
   :Message:  [[message://AANLkTin8%3DcrNWggCMtHP%2B6MhvR41RHQeqBSveN05oiEd@mail.gmail.com][Rubygem for converting arbitrary csv files into ledger format and guessing accounts]]
   :CREATED:  [2010-11-07 Sun 13:10]
   :END:
** DELEGATED [[bug:474][#474]] Create documentation stubs in ledger3.texi for all features
- State "DELEGATED"  from "TODO"       [2012-02-23 Thu 21:54]
- State "TODO"       from "DONE"       [2011-11-18 Fri 20:04]
- State "DONE"       from "TODO"       [2011-11-18 Fri 20:02]
   :PROPERTIES:
   :ID:       F8237174-35B6-493D-A0B0-FEC900C2C2D3
   :CREATED:  [2011-01-26 Wed 13:21]
   :END:
** DEFERRED [[bug:241][#241]] Complete the internal documentation, exported using Doxygen
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 17:10]
   :PROPERTIES:
   :ID:       986054C6-CD18-4EA1-8F8C-FF02C9842EB0
   :CREATED:  [2008-08-14 Thu]
   :END:
** DEFERRED [[bug:242][#242]] Ledger example: building a better "du"                                  :ATTACH:
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   Since Ledger does not internally focus on finance, there is no reason why
   it can't be used in any situation where amounts are either kept in certain
   places, or moved from place to place, including:

   - tracking time
   - recording data transfers between computers
   - recording scientific data (converting any input to any output)
   - reporting on the layout of your hard drive

   To show an example of this, I'm written a Python script called "ledger-du"
   which simply outputs whatever directories you specify as arguments in the
   form of Ledger entries.  There is one entry per file, where the "payee" is
   the file name, the "account" is a colon-separated directory hierarchy, and
   the "date" is the last modified time of the file.

   By running this script and sending the output to "/tmp/out.dat", you can
   now perform some very sophisticated queries on your data -- including
   showing you the same kind of information that the venerable "du" itself
   would show.  Except that now you can see the tree hierarchy with the
   "balance" command, and other enhancements to the basic form of "du".

   For example, here's a command that shows me where all my C++ source files
   are, subtotaled by the sub-directory that contains them, and sorted by
   total size.  The "equity" account (where all the bytes are balanced) even
   ends up telling me the total size of all C++ files in my queried directory:
   :SCRIPT:
   ledger --format \
     "%D %-.20P\n  %-.52A %12.67t %12.80T\n%/  %-.52A %12.67t %12.80T\n" \
     -f /tmp/out.dat -s -S "-U(t)" register -- \\.cc\$
   :END:
   I specified a new format string here (a variation on the default balance
   format) so that I could see account totals each on their own line, since
   some of the account names get very long.
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   169
   :ID:       85DAE1AB-F6D3-4AAC-A4F7-99D146B355E7
   :Message:  message://m2odzwxupz.fsf@newartisans.com
   :Attachments: ledger-du
   :CREATED:  [2006-03-24 Fri]
   :END:
** DEFERRED [[bug:243][#243]] Using Ledger as a scientific analysis tool
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   173
   :ID:       C653003E-52A8-4D06-9DEB-634B1156B04C
   :END:
** DEFERRED [[bug:244][#244]] Using Ledger to track inventory
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   174
   :ID:       F7A6A833-5AC6-4ED0-A5EA-93CD6B97EEBF
   :END:
** DEFERRED [[bug:596][#596]] Improve download/install instructions for the Mac
    - State "DEFERRED"   from "TODO"       [2011-08-18 Thu 13:15]
   :PROPERTIES:
   :ID:       2BB63C6F-90D0-4433-8308-80A9D201D880
   :CREATED:  [2011-07-25 Mon 00:55]
   :Date:     Sun, 24 Jul 2011 10:21:51 -0700
   :Message:  [[message://jwiegley/ledger/issues/32@github.com][{ledger} Improve download/install instructions for the Mac (#32)]]
   :Submitter: richardcooper <reply+i-1278078-1be2b9ab93ac7c481fd66bb7244f2447690518e1@reply.github.com>
   :END:
** DONE Post links on Ledger Web to the new dmg and coverage report
SCHEDULED: <2012-02-18 Sat>
- State "DONE"       from "TODO"       [2012-02-19 Sun 02:05]
:PROPERTIES:
:ID:       A2E9F14E-A826-45D3-9BFB-8D3EBFD9F8C8
:CREATED:  [2012-02-17 Fri 17:26]
:END:
** DUPLICATE [#C] [[bug:450][#450]] Document how to do inventory accounting
- State "DUPLICATE"  from "DONE"       [2011-11-18 Fri 20:05] \\
  This is a duplicate of #244.
- State "DONE"       from "TODO"       [2011-11-18 Fri 20:01]
   :PROPERTIES:
   :ID:       0F52624A-61F8-43D8-8ECD-A6595BBB78C5
   :Submitter: Jeff Kowalczyk <jeff.kowalczyk@gmail.com>
   :Message:  [[message://53ee80cf-2711-430f-8c00-e4c7959b0916@f20g2000prn.googlegroups.com][re: inventory accounting]]
   :CREATED:  [2010-12-27 Mon 03:40]
   :END:
** NOTE Questions on Ledger
- Did you use a separate ledger for this trip, or were your entries in the
  same ledger as your personal finances?
- How did you discover the loss from roundtrip currency conversions?
- How do you label your currencies? (I find ascii $ works fine, but £ shows
  up in emacs as £ (if typed into Terminal) and shows up in Terminal as ?
  (if typed in Emacs). I've switched to GBP until Emacs supports UTF-8 NCD)
- How did you deal with using a USD based Mastercard to pay for a Shekels
  meal? Do you have to wait until you get your Mastercard statement to
  determine the exchange rate or extra fees for international usage?
- Your blog suggests that you kept a paper ledger during the trip, and only
  used Ledger after you got home. Would it have worked if you'd used Ledger
  in real-time?
- What accounts did you use? How many of each type (Income, Equity,
  Liability, Expense, Asset?)
- What did your most basic entries look like?
- What were your most complex entries, and what lessons did you learn from
  them? Did you restructure your accounts along the way because of an
  unforeseen wrinkle?
- What ledger command lines did you use to compute the amount owed by each
  person?
:PROPERTIES:
:ID:       7786026F-2E73-45CA-B89F-A234DC4A6317
:VISIBILITY: folded
:CREATED:  [2011-06-19 Sun 18:23]
:END:
* Colophon
#+STARTUP: content fninline hidestars
#+ARCHIVE: TODO-3.0::
#+SEQ_TODO: STARTED TODO(@) WAITING(@) DELEGATED(@) DEFERRED(@) REVIEW(@) REVIEW(@) | DONE(@) CANCELED(@) WONTFIX(@) WORKSFORME(@) INVALID(@) DUPLICATE(@) CLOSED TESTED NOTE
#+TAGS: blocker(B) critical(C)
#+DRAWERS: PROPERTIES LOGBOOK OUTPUT SCRIPT SOURCE DATA
#+LINK: bug http://bugs.ledger-cli.org/show_bug.cgi?id=
#+CATEGORY: Ledger
