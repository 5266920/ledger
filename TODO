LEDGER  -*- mode: org; fill-column: 78 -*-

#+STARTUP: content
#+SEQ_TODO: TODO(@) STARTED(@) WAITING(@) DELEGATED(@) DEFERRED(@) | DONE(@) CANCELLED(@) WONTFIX(@) WORKSFORME(@) INVALID(@) DUPLICATE(@) CLOSED(@) TESTED(@) NOTE
#+CATEGORY: Ledger

* Inbox
* Bugs
** TODO Corrupted double-linked list in the register report
   message://4AA8F383.3010801@gmail.com
   :PROPERTIES:
   :ID: 8C22A64E-6095-4933-9D66-FA970CCD1590
   :END:
   [2009-10-03 Sat 03:23]
** TODO Precision error
   [[message://1253475930.3701.41.camel@mithos.talinet.net]]
   :PROPERTIES:
   :ID: 77D3A0A9-35DF-4A4D-8469-8928E3954441
   :END:
   [2009-10-03 Sat 03:23]
** TODO In the "pricesdb" report, output commodity conversions
   ... and "N" commands.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 110
   :ID: 1BE0C80D-AC4D-4372-B830-14193554EF6B
   :END:
   [2008-04-11 Fri]
** TODO The Ledger REPL argument parser should honor quoting syntax
   :PROPERTIES:
   :ID: 7A3DF3DE-5425-491F-90AA-C8C162F1085A
   :END:
   [2009-03-03 Tue 03:02]
** TODO The --strict option should also prevent new commodities
   :PROPERTIES:
   :ID: 3254504D-FA9F-4E60-B56D-414C6EF03BFE
   :END:
   [2009-03-07 Sat 00:31]
** TODO When --flat is being used, sort against all accounts
   :PROPERTIES:
   :ID: 7D084EBD-3D4C-4967-9A4B-7F014E625DF6
   :END:
   [2009-03-11 Wed 15:11]
** TODO Pressing space bar on items on the reconcile window does nothing
   message://01BBC0A5-1185-4FCF-8D8C-72E29FA86675@gmail.com
   :PROPERTIES:
   :ID: AC756278-72D5-4CAC-82A7-334A9BB6F7EE
   :END:
   [2009-10-03 Sat 03:23]
** TODO Don't make uncommoditized amounts display differently
   :PROPERTIES:
   :ID: 677CB18D-C7EE-446A-8123-57D80E3EFDD4
   :END:
   [2009-10-23 Fri 06:13]
** TODO Make balance assignment failures into a warning
   :PROPERTIES:
   :ID: B3F65D45-C77F-4E01-A8FC-3EDC92A9CB45
   :END:
   [2009-10-23 Fri 06:13]
** TODO Change processing of ~/.ledgerrc
   1. Before parsing, run through and handle options that session_t and
      global_scope_t know about.
   2. Before reporting or loading the REPL, run through and handle all other
      options and any commands found.
   :PROPERTIES:
   :ID: 71FE0FAB-622D-403C-A944-C7541948AFFF
   :END:
   [2009-02-19 Thu 15:10]
** TODO Clear out all #if 0 and jww commented sections
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 97
   :ID: 7C87DEC8-1FB6-47FC-ADAC-01980020924B
   :END:
   [2008-04-11 Fri]
** TODO Forecasting command with -Y doesn't do any forecasting
   The command is:
   :SCRIPT:
ledger -Y --forecast 'T>0' reg food
   :END:
   Doesn't do any forecasting!  If the -Y is dropped it does.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 28
   :ID: E2DF7C6C-BA02-4F3D-8C3C-B73F8BC30CD6
   :END:
   [2007-12-10 Mon]
** TODO Forecasting goes too far
   - Note taken on [2007-12-10 Mon 19:04] \\
     Because of the way that forecasting is (currently) implemented, you will often
     see an entry that is "one beyond" the condition of your forecast. I hope to
     remedy this in the near future.
   :OUTPUT:
tim@yggdrasil [/Users/tim]# ledger --forecast 'd<=[2006/08/27]' reg
^assets
[some entries which balance correctly]
2006/09/01 Forecast entry       Assets                      $-1322.00    $13313.99
   :END:
   Why is the last entry being displayed?  Doesn't the date predicate prevent
   that from happening?
   :PROPERTIES:
   :Submitter: <tim@scarybright.org>
   :Version: 2.6
   :Ticket: 15
   :ID: E627C594-A019-4D87-A6B4-C8E75F6D8FC0
   :END:
   [2007-12-10 Mon]
** TODO The entry command drops price specifications
   If you enter a pricing command like this in Emacs:
   :DATA:
C -c C-a 2008/02/19 chevron 'GAL 11.118 @ $ 2.879'
   :END:
   The resulting entry omits the '@ ...' part.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 192
   :ID: 03C6208E-E48F-45BB-BFBF-2C38B129458A
   :END:
   [2008-05-03 Sat]
** TODO --budget not including "~ Monthly" entry					 :ATTACH:
   Thanks for your response.  I've attached a sample ledger file that I
   successfully reproduced the behaviour with.  Maybe it's something to do with
   it being the first of the month today?
 
   Here's what I'm seeing on the command-line:
   :OUTPUT:
sayotte@damocles:~$ ledger -p april --budget reg
2009/04/01 Budget entry         Assets:Bank:Checking     $-25000.00   $-25000.00
2009/04/01 Budget entry         In:Ludicrous Salary       $25000.00            0
2009/04/01 Budget entry         Expenses:Food              $-350.00     $-350.00
2009/04/01 Budget entry         Assets:Bank:Checking        $350.00            0
2009/04/01 Taco Schmell         Expenses:Food                 $6.50        $6.50
                               Assets:Bank:Checking         $-6.50            0
2009/04/10 Lienholder Bank      Assets:Bank:Checking       $-450.00     $-450.00
   :END:
   :OUTPUT:
sayotte@damocles:~$ ledger -p april --budget reg Food
2009/04/01 Taco Schmell         Expenses:Food                 $6.50        $6.50
   :END:
   :OUTPUT:
sayotte@damocles:~$ date
Wed Apr  1 19:07:20 EDT 2009
   :END:
   :OUTPUT:
sayotte@damocles:~$ ledger --version
Ledger 2.6.1, the command-line accounting tool

Copyright (c) 2003-2008, John Wiegley.  All rights reserved.

This program is made available under the terms of the BSD Public License.
See LICENSE file included with the distribution for details and disclaimer.

(modules: gmp, pcre)
   :END:
   :PROPERTIES:
   :Submitter: Stephen Ayotte <stephen.ayotte@gmail.com>
   :Message: [[message://837b29c80904011614x79fed2b0la56f8a44a8dc45cb@mail.gmail.com][ledger-2.6.1: --budget not including ~Monthly entry]]
   :Version: 2.6.1
   :ID: 655F6DF5-A30D-4CD9-AA06-787A2DB3C5C2
   :Attachments: testledger.dat
   :END:
   [2009-04-01 Wed 19:40]
** TODO Valexpr strings cannot have chars like \n
   - State "TODO"       from "DEFERRED"   [2009-10-22 Thu 07:34]
   - State "DEFERRED"   from "TODO"       [2009-06-28 Sun 17:37]
   :PROPERTIES:
   :ID: 23680D4C-0361-46DA-AC8F-C98CFF79F47B
   :END:
   [2009-02-27 Fri 13:19]
** TODO 'ledger -f src/value.h bal capital' crashes
   - State "TODO"       from "DEFERRED"   [2009-10-22 Thu 07:34]
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 16:24]
   :PROPERTIES:
   :ID: 25A099C9-EE9C-42E2-A18A-202DE9B9E157
   :END:
   [2009-02-27 Fri 15:38]
* Build
** TODO Add some more configure arguments
   ./configure .... with-gmp=...  with-mpfr= ... with-python=...
   :PROPERTIES:
   :ID: 070D3625-FCAE-44B0-B1B7-BFD6BAD4028D
   :END:
   [2009-03-26 Thu 02:09]
* Tests
** TODO Ledger is still failing the higher-numbered generation seed tests
   :PROPERTIES:
   :ID: B9C429C8-A894-48FE-9C8D-8068E2467D75
   :END:
   [2009-03-03 Tue 15:47]
** TODO New tests to create for Ledger [0/3]
   - [ ] GarbageTests
	 Feed every one of the distribution's source files back to Ledger, to
         make sure it dies gracefully.
   - [ ] RandomTests
	 Feed random data (probably base64) both as options and input.
   - [ ] ScrambleTests
	 Pass random combinations of options.
   :PROPERTIES:
   :ID: F866DFA5-7350-45D3-BF76-286D68755A2A
   :END:
   [2009-02-27 Fri 16:19]
** TODO Run Ledger through the profiler, against mondo.dat (to beat 11s)
   :PROPERTIES:
   :ID: B03634E5-C2D7-4DCE-8BBF-A787996BF7BE
   :END:
   [2009-02-25 Wed 04:15]
** TODO Create regression tests for all the closed 2.6.1 and 3.0 bugs
   :PROPERTIES:
   :ID: 946925F9-9F43-4CD9-810C-B3C8AC978F8D
   :END:
   [2008-08-14 Thu]
** TODO Use coverage analysis to determine if all of Ledger is being tested
   :PROPERTIES:
   :ID: 13E43A50-FC0C-4C3D-A175-7C6CB147A37C
   :END:
   [2008-08-14 Thu]
** TODO The opt-forecast-while test is time sensitive, and is failing
   :PROPERTIES:
   :ID: 7B8D466B-6F38-41E6-B2B1-964B8378C929
   :END:
   [2009-03-01 Sun 05:36]
* Misc
** TODO Fix boost::optional translation class for Dmitriy
   - State "TODO"       from "DEFERRED"   [2009-10-22 Thu 07:34]
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 16:27]
   [[message://2fd72fb20901281006u181318bke33c44a25098dfd8@mail.gmail.com][Re: boost::optional and boost::python]]
   :PROPERTIES:
   :ID: DD3AABF8-A52D-4E1E-A931-DA6131F31F7A
   :END:
   [2009-02-02 Mon 03:13]
** TODO Fill out Software Conservancy form from Bradley
   [[message://87vdra1ejf.fsf@ebb.org][Re: Request for application form]]
   :PROPERTIES:
   :ID: 55F5C87B-F9BE-4957-B4C7-3B8222DDB548
   :END:
   [2009-02-16 Mon 14:28]
* Docs
** TODO Write an article titled "Accounting for Engineers"
   Programmers make money, and they're technically savvy, so Ledger makes for a
   perfect fit.
   :PROPERTIES:
   :ID: 6D26F1EA-4FC6-4376-8232-DF985FAC48AA
   :END:
   [2009-04-01 Wed 05:17]
** TODO A need for some extensive examples with commentary
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 166
   :ID: 8C9A4F0A-75B6-4F7D-913C-B8D8D84A882E
   :END:
   [2008-04-11 Fri]
** TODO Add a section in the manual specifically about stocks
   There is no explicit section right now which details how to handle stock
   transactions.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 189
   :ID: 7AD3B6F2-765B-41A5-A481-BFAB39A55824
   :END:
   [2008-04-21 Mon]
** TODO An example of using effective dates on transactions
   "I don't yet have a good idea of why an individual transaction could need to
   specify its own actual *and* effective date. Does anyone have a good
   example?"
 
   I'll give you one from the other day.  My wife and I just prepaid into a
   local vegetable co-op that sustains us through the winter.  It cost $225 to
   join the program, so we wrote a check.  I didn't want our October grocery
   budget to be that much out of whack, however.  What I really wanted was for
   the money to be evenly distributed over the next six months so that our
   monthly budgets gradually take a hit for the vegetables we'll pick up from
   the co-op, even though we've already paid for them.
 
   These entries accomplish this.  Every month until April we'll start with an
   automatic $37.50 deficit like we should, while our checking account really
   knows that it debited $225 this month.
   :DATA:
2008/10/16 * (2090) Bountiful Blessings Farm
   Expenses:Food:Groceries                 $ 225.00
   Assets:Checking

2008/10/16 Veggies Distribution
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2008/10/01]
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2008/11/01]
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2008/12/01]
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2009/01/01]
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2009/02/01]
   Expenses:Food:Groceries                  $ 37.50  ; [2008/10/16=2009/03/01]
   Expenses:Food:Groceries                $ -225.00
   :END:
 
   If you're curious, I use the entry-based effective dates for things like
   when my bank auto-pays some bills at the beginning of the month, but they
   back-date them sometime before the 1st to compensate for a weekend.  So, my
   mortgage might go out on 08/31, but for budgeting I really want it to affect
   September:
   :DATA:
2008/08/31=2008/09/01 Lender
   Liabilities...                     $ 1,000.00
   Assets:Checking
   :END:
   :PROPERTIES:
   :Submitter: Drew Raines <aaraines@gmail.com>
   :Version: 2.6.1
   :ID: C926E8BF-EF44-45E8-A37F-04A30A97215D
   :END:
   [2008-10-26 Sun 19:06]
** TODO Answer Martin's question about Capital gains
   [[message://20080423221130.4D77D1144C3@banane.furius.ca]["capital gains" from Martin Blais <blais@furius.ca>]]
   [[message://1209097067.1413.1249786835@webmail.messagingengine.com]["Here is one valid way to book capital gains" from Martin Blais <blais@furius.ca>]]
   :PROPERTIES:
   :ID: 1B5B2517-360E-4F33-9A1E-C88F884ACAD2
   :END:
   [2008-04-24 Thu]
** TODO Document all breaking and non-breaking changes in the NEWS file
   :PROPERTIES:
   :ID: AF04D0D7-2C9D-4783-9C22-5EC39CAC4247
   :END:
   [2009-02-16 Mon 04:52]
** TODO Document inline math in the .texi file.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 102
   :ID: 5CDAC007-A2B6-42A6-8E8C-09A1078404C8
   :END:
   [2008-04-11 Fri]
** TODO Document new command-line query syntax
   :DATA:
I've completed putting the finishing touches on the command-line query syntax
for Ledger 3.0, and thought I would share with you all how it works now.

In 2.6, you may have been familiar with queries like this:

 ledger reg food -dining -- chang

Which says, "I want all accounts containing food, but not dining, where the
payee/description contained the word chang."

One big problem with this syntax is that it forced all option settings to
occur before the command verb.  So, I've done away with the use of "-" as a
query character.

Now the following is supported:

 ledger [OPTIONS] <COMMAND> <SEARCH-TERMS>

Where COMMAND is any command verb, OPTIONS can occur _anywhere_, and
SEARCH-TERM is one or more of the following:

 word              search for any account containing 'word'
 TERM and TERM     boolean AND between terms
 TERM or TERM      boolean OR between terms
 not TERM          invert the meaning of the term
 payee word        search for any payee containing 'word'
 @word             shorthand for 'payee word'
 desc word         alternate for 'payee word'
 note word         search for any note containing 'word'
 &word             shorthand for 'note word'
 tag word          search for any metadata tag containing 'word'
 tag word=value    search for any metadata tag containing 'word'
                   whose value contains 'value'
 %word             shorthand for 'tag word'
 %word=value       shorthand for 'tag word=value'
 meta word         alternate for 'tag word'
 meta word=value   alternate for 'tag word=value'
 expr 'EXPR'       apply the given value expression as a predicate
 '=EXPR'           shorthand for 'expr EXPR'
 \( TERMS \)       group terms; useful if using and/or/not

So, the example given at the top of this e-mail could now be:

 ledger reg food not dining @chang
 ledger reg food and not dining and not payee chang
 ledger reg food not dining expr 'payee =~ /chang/'

All three are equivalent.
   :END:
   :PROPERTIES:
   :ID: 720A2006-AA19-4133-8A07-B445D7CC3AA0
   :END:
   [2009-02-02 Mon 03:08]
** TODO Document the new metadata syntax
   :DATA:
Ledger 3.0 now supports entry and transaction "notes", which may contain new
metadata and tag markers.  Here's an example:

2004/05/27 (100) Credit card company
    ; This is an entry note!
    ; Sample: Value
    Liabilities:MasterCard         $20.00
    ; This is a transaction note!
    ; Sample: Another Value
    ; :MyTag:
    Assets:Bank:Checking
    ; :AnotherTag:

An indented paragraph starting with ';' is parsed as a persistent note for its
preceding category. These notes will get printed back to you with the "print"
command.  They are accessible to value expressions using the "note" variable.

Further, any occurrence of ":foo:" in a note will cause a metadata tag for
"foo" to be registered for that entry.  You can then search for such
transactions using:

 ledger reg %foo
 ledger reg tag foo

Also, if any word in the note ends (but does not start) with a colon, the
remainder of that line will be taken to be the metadata value for that tag.
That is:

 ; :foo:bar:baz:  <-- These are three tags
 ; name: value    <-- this is a tag with a value

Tags with value can be searched for just like tags.  In addition, you can
further limit your tag search by looking for only those tags that have
specific values:

 ledger reg %name=value
 ledger reg tag name=value

Comments that are occur before an entry, or which starts at column zero, are
always ignored and are neither searched nor printed back.
   :END:
   :PROPERTIES:
   :ID: 1CAE6761-AC44-4DAC-A466-A3D72550ED06
   :END:
   [2009-02-02 Mon 03:08]
** TODO Handling funds
   message://m2fylicj1e.fsf@Majdhub.local
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 170
   :ID: B5C1EE3D-8F66-4116-A88B-D1D568CF46B7
   :END:
   [2008-04-11 Fri]
** TODO Ledger example: building a better "du"
   message://m2odzwxupz.fsf@newartisans.com
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 169
   :ID: 85DAE1AB-F6D3-4AAC-A4F7-99D146B355E7
   :END:
   [2008-04-11 Fri]
** TODO Respond to billk's question about options
   New Artisans LLC :: View topic - stock options
   :PROPERTIES:
   :ID: 2F635B10-27B8-4FF4-8584-F84A3AF7D42C
   :END:
   [2008-08-14 Thu]
** TODO Using Ledger as a scientific analysis tool
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 173
   :ID: C653003E-52A8-4D06-9DEB-634B1156B04C
   :END:
** TODO Using Ledger to track inventory
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 174
   :ID: F7A6A833-5AC6-4ED0-A5EA-93CD6B97EEBF
   :END:
** TODO Another value expression change
   message://m2fyle3zdy.fsf@newartisans.com
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 171
   :ID: 356DB3E1-3613-4DE2-8245-A8F8E4937FBD
   :END:
   [2008-04-11 Fri]
** TODO Extended lot indentification support
   message://m2veuvq0al.fsf@newartisans.com
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 167
   :ID: 9CC55CD0-30C3-4C4F-BCB6-E980FD1F44DA
   :END:
   [2008-04-11 Fri]
* Features
** TODO Convert *all* valexpr functions to use interactive_t
   :PROPERTIES:
   :ID: DF11A428-9958-44EB-99A8-34C48AB8365C
   :END:
   [2009-02-21 Sat 17:36]
** TODO Change self_total to amount, and family_total to total
   :PROPERTIES:
   :ID: AEDAEAE2-5A2D-4908-B733-B0FC80C5FC58
   :END:
   [2009-03-05 Thu 04:56]
** TODO Combine a random seed when hashing when using --anon
   Please keep in mind that the dictionary one pulls account names from is MUCH
   smaller than the dictionary of valid ASCII strings.  Given the SHA-1 hash of
   a string $foo, it is easy to tell if this is the hash of "Bar, Inc." or
   "Baz, Inc.".  So, while in theory it is hard to reverse, it becomes very
   easy in practice if I know anything about your company or even the language
   that the accounts will be in.  Finally, because of rainbow tables, these
   might even be easy to reverse without knowing anything about the target
   company.
   :PROPERTIES:
   :Submitter: Anthony Chivetta <anthony@chivetta.org>
   :ID: 03DA2F5B-9E0C-4E3B-B19D-531A4F77C050
   :Message: [[message://20090703063943.GB16282@chivetta.org][Re: sample ledgers and anonymising]]
   :END:
   [2009-07-03 Fri 08:38]
** TODO Add an --actual option to override --effective if in .ledgerc
   :PROPERTIES:
   :ID: 84C7C18B-8B06-4248-9C4F-A8E377FACA49
   :END:
   [2008-10-03 Fri]
** TODO Create a "cleared" report for balances
   The idea for this report would be to show very nicely when the last date an
   account was balanced to was.  For example (from blais):
   :OUTPUT:
  .
  |-- Assets
  |   |-- Current
  |   |   |-- HSBC
  |   |   |   |-- Checking                                      2007-12-31 -> 2007-12-31
  |   |   |   |-- Savings                                       2007-12-31 -> 2008-03-28
  |   |   |   `-- Secured                                       2007-12-31 -> 2008-03-28
  |   |   `-- RBC
  |   |       |-- Checking                                      2007-12-31 -> 2008-04-02
  |   |       |-- Checking-US                                   2007-12-31 -> 2008-03-03
  |   |       `-- Savings                                       2007-12-31 -> 2008-04-02
  |   `-- Investments
  |       |-- HSBC-Broker                                       2007-12-31 -> 2008-04-13
  |       |-- OANDA                                             2007-12-31 -> 2007-12-31
  |       `-- RBC-Broker
  |           |-- Account-CA                                    2008-01-01 -> 2008-04-01
  |           |-- Account-RSP                                   2007-12-31 -> 2008-01-31
  |           `-- Account-US                                    2008-01-01 -> 2008-04-01
  `-- Liabilities
      |-- Credit-Card
      |   |-- HSBC-MasterCard                                   2007-12-31 -> 2008-04-04
      |   `-- RBC-VISA                                          2007-12-31 -> 2008-04-02
      `-- RBC
          |-- Credit-Line                                       2007-12-31 -> 2007-12-31
          `-- Mortgage
              |-- Credit-Line                                   2007-12-31 -> 2007-12-31
              `-- Loan                                          2007-12-31 -> 2007-12-31
   :END:
   To implement this I'll need the following value expressions items:
   - latest_cleared
   - latest
   - earliest
   All the kinds of things collected for the stats report, actually.  Maybe I
   should implement that report as a simple format string?
   :PROPERTIES:
   :Submitter: Martin Blais <blais@furius.ca>
   :Version: 2.6
   :Ticket: 182
   :ID: 4D175527-AE30-4030-B1B7-DD6A92B6F067
   :END:
   [2008-04-14 Mon]
** TODO Value expressions for getting at the lot date
   For example: lotdate, lotdateof(x)
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 148
   :ID: A1230B8C-EF48-40BB-A200-18E7E94620BE
   :END:
   [2008-04-11 Fri]
* Website
** TODO Mention hledger in the Ledger docs and webpage
   http://hackage.haskell.org/cgi-bin/hackage-scripts/package/hledger-0.1
   :PROPERTIES:
   :ID: F71EA52C-0F99-4689-9DA5-DF6B131D81EE
   :END:
   [2008-10-15 Wed 16:45]
** TODO Create a Wiki page titled "Who's using Ledger?"
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 93
   :ID: F50ADD18-F246-4FDC-85A2-65C435ADE1A4
   :END:
   [2008-04-11 Fri]
