LEDGER  -*- mode: org; fill-column: 78 -*-

#+STARTUP: content fninline hidestars
#+SEQ_TODO: STARTED TODO(@) WAITING(@) DELEGATED(@) DEFERRED(@) | DONE(@) CANCELLED(@) WONTFIX(@) WORKSFORME(@) INVALID(@) DUPLICATE(@) CLOSED TESTED NOTE
#+TAGS: Call(c) Errand(e) Home(h) Net(n) Fun(f) LINK(l) NOTE(N) blocker(B) critical(C)
#+DRAWERS: PROPERTIES LOGBOOK OUTPUT SCRIPT SOURCE DATA
#+LINK: bug http://newartisans.com/bugzilla/show_bug.cgi?id=
#+CATEGORY: Ledger

* Bugs
  :PROPERTIES:
  :CATEGORY: Bugs
  :END:
** TODO Rationalize formatting strings
   SCHEDULED: <2010-06-14 Mon>
   %[OPTS](expr) should be equal to %(justify(expr, OPTS))
   ${AMT} is the same as $(scrub(AMT))
   %T is the same as ${display_total}.

   Right now formatting strings are a nightmare for users to modify.
   :PROPERTIES:
   :ID:       E2F5CEE7-7FFE-48CC-8A56-8089BB502C63
   :END:
   [2010-06-14 Mon 08:35]
** TODO [[bug:326][#326]] Strip out quotes in the options parser
   This allows people to copy and paste option settings directly into their
   .ledgerrc file.
   :PROPERTIES:
   :ID:       8EB6E995-6815-4EC4-9019-9B162DE27FE1
   :Submitter: ed <ed.temp.01@gmail.com>
   :Message:  [[message://1d1ff6f1-3445-4d4b-9ef0-dfd510405e47@u26g2000yqu.googlegroups.com][Re: Init file doesn't support file --input-date-format]]
   :END:
   [2010-06-11 Fri 17:25]
** WAITING [[bug:207][#207]] No output to file in REPL with "push -o output.journal"
   - State "WAITING"    from "STARTED"    [2010-06-10 Thu 04:54] \\
     To Thomas: I just tried this and it worked fine.  After your "push" command,
     does the prompt change to a ]]?
   :LOGBOOK:
   CLOCK: [2010-06-10 Thu 04:52]--[2010-06-10 Thu 04:54] =>  0:02
   :END:
   :PROPERTIES:
   :ID:       D6B17614-288D-44E5-99C2-569E020809C4
   :END:
   [2010-05-30 Sun 03:33]
** DEFERRED [[bug:156][#156]] Instead of unistring(x).length(), have unilength(x)
   - State "DEFERRED"   from "TODO"       [2010-06-01 Tue 17:14]
   :PROPERTIES:
   :ID:       CE4F80CF-B298-43C5-B786-AA8ABEDA05C8
   :END:
   [2010-05-27 Thu 01:12]
** DEFERRED [[bug:166][#166]] --percent incompatible with --exchange
    - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 01:41] \\
      You are right, --percent cannot handle multiple commodities.  And since
      --exchange always takes place after --percent, it's not as
      straightforward as it seems.  I'm going to defer this bug until after
      3.0, since it may not be worth fixing.  But I'll keep thinking on it.
    I've found that --percent option is incompatible with --exchange.  Well,
    actually I suspect that --percent is not able to handle multi currencies.

    In the following simple exemple, I would have expected that --percent
    option works correctly.
    
#+begin_src ledger
    P 2008/01/01 $ €1
    
    2008/01/11 LIAT
       Expenses:Travel:Airfare                   $40.00
       Liabilities:MasterCard
    
    2008/02/05 CTX
       Expenses:Travel:Auto                     €240.38
       Liabilities:MasterCard
#+end_src    
    
    :OUTPUT:
    $ ledger --file=test_12.ledger bal --exchange=€
                €280.38  Expenses:Travel
                 €40.00    Airfare
                €240.38    Auto
               €-280.38  Liabilities:MasterCard
    --------------------
                      0
    :END:
    :OUTPUT:
    $ ledger --file=test_12.ledger bal --exchange=€ --percent
    While evaluating value expression:
     (((is_account & parent) & parent.total) & percent(total,
    parent.total))
    
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    While evaluating value expression:
     market(total_expr, date, exchange)
    While evaluating value expression:
     justify(scrub(display_total), 20, -1, true, color)
    Error: Cannot convert a balance with multiple commodities to an amount
    :END:
    :PROPERTIES:
    :ID:       4509F714-BA35-4659-8F57-6BD6A725FA73
    :Message:  [[message://fabd9b4b-3c20-4507-92e5-55a5e8996790@g19g2000yqe.googlegroups.com][--percent incompatible with --exchange]]
    :Submitter: thierry <thierry.daucourt@free.fr>
    :END:
    [2010-04-04 Sun 15:11]
** DEFERRED [[bug:201][#201]] Handling currencies that were replaced by the Euro
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 12:57] \\
     This is not something that can be supported in 3.0, as I believe it
     requires many supporting features which don't exist yet.  Ledger doesn't
     try this hard to allow for time-bounded commodity translations.
   - Note taken on [2010-05-28 Fri 00:59] \\
     Okay, using
     #+begin_src sh
      C 1.00 EUR = 13.7603 ATS
     #+end_src
     rather than
     #+begin_src sh
      P 2001-12-31 EUR 13.7603 ATS
     #+end_src
     solves most of these issues.
     
     However, would it be possible to add a date for C?  I'd like to see ATS
     before 2002-01-01 and EUR from then on.
   There are a couple of problems with ledger when using currencies that were
   replaced by the Euro as well as the Euro.
   
   First, I know that ledger is mostly designed as a "calculator" without any
   knowledge about the actual input.  However, given that some currencies
   were replaced by the Euro and have fixed exchange rates that will not
   change, it would be nice if ledger would know about those.  How about
   adding a text file to ledger that is read by default with such fixed
   conversion rates?  (If you agree, I'm happy to write one for the
   currencies replaced by the Euro.)
   
   Related to this is a problem with showing currencies.  Let's say that I
   have accounts with ATS, EUR and GBP.  How can I tell ledger to convert ATS
   to EUR but do no other conversation.  -X EUR won't work because it would
   also convert GBP, but I want to see both EUR and GBP (I just want the
   obsolete ATS to be converted to EUR).  Is this possible somehow?
   
   Finally, there appear to be some artefacts because ledger doesn't know
   that ATS is a currency replaced by EUR.  Normally, "ledger bal" does not
   display accounts that are empty (see the first example below).  But if I
   put something into an account as ATS and then take out exactly the same
   amount (but as EUR), "ledger bal" will show the account name and "0"
   (probably because it switches to commodity mode).
   
   Example:
   
   a)
#+begin_src sh
   2010-04-02 Test
      A:Foo  10.00
      A:Bar
   
   2010-04-02 Test
      A:Foo  -10.00
      A:Baz
#+end_src
   
   b)
#+begin_src sh
   P 2001-12-31 EUR 13.7603 ATS
   
   2001-01-01 Test
      B:Foo  13.7603 ATS
      B:Bar
   
   2010-04-02 Test
      B:Foo  -1.00 EUR
      B:Baz
#+end_src
   
   a) will show no Foo with "ledger bal" but b) will show "0 Foo".
   :PROPERTIES:
   :ID:       9EAC63D2-8DD7-438D-9767-3AAE79BF0BD3
   :Message:  [[message://20100402164233.GA10410@jirafa.cyrius.com][Handling currencies that were replaced by the Euro]]
   :Submitter: Martin Michlmayr <tbm@cyrius.com>
   :END:
   [2010-04-04 Sun 15:18]
* Emacs
  :PROPERTIES:
  :CATEGORY: Emacs
  :END:
** DEFERRED [[bug:245][#245]] Add colorized highlighting to the reconciler
   - State "DEFERRED"   from "TODO"       [2009-10-31 Sat 05:05]
   http://thread.gmane.org/gmane.comp.finance.ledger.general/483
   :PROPERTIES:
   :ID: C7E28F7F-93F9-4C3F-956A-4F4B84868CBF
   :END:
   [2009-10-31 Sat 00:06]
** DEFERRED [[bug:246][#246]] Add folding support to ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   - State "TODO"       from "DELEGATED"  [2009-10-22 Thu 06:46]
   - State "DELEGATED"  from "TODO"       [2009-10-11 Sun 05:31] \\
     Demosthenes said that the author of loccur was going to look into this.
   For example, show only transactions matching a given report query.
   :PROPERTIES:
   :ID: E98B3CBD-B76F-4917-92A5-4B9E69833131
   :END:
   [2009-10-06 Tue 17:29]
** DEFERRED [[bug:247][#247]] Allow for quicker reporting commands in ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 117
   :ID: 932324E2-4A3F-4319-9586-1F33DFE29527
   :END:
** DEFERRED [[bug:248][#248]] Allow reconciling postings in multiple included files
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID: 29AC8129-C451-4782-8371-B74588609E9F
   :END:
   [2009-03-03 Tue 00:10]
** DEFERRED [[bug:249][#249]] Allow reports, such as completed tasks last week, etc.
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: D9B4D001-21E4-4247-ADF6-56C00B2C8F3A
   :END:
   [2008-05-12 Mon]
** DEFERRED [[bug:250][#250]] Break ledger.el up into sections
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   - Font-locking
   - REPL interaction
   - Parsing
   - Utility functions
   - Manipulation (sorting, etc)
   - Reconciling
   - Reports
   :PROPERTIES:
   :ID: 770D07CF-9F28-4A9B-B4E8-48ACC4926E06
   :END:
   [2009-10-23 Fri 06:12]
** DEFERRED [[bug:251][#251]] C-c C-c should be magical in ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should auto-generate reports, for example, if the user does it in an
   account or payee name.
   :PROPERTIES:
   :ID: 5C52F851-18CF-41A3-953B-49DA4EF67C00
   :END:
   [2009-10-23 Fri 06:12]
** DEFERRED [[bug:252][#252]] Create a hotkey for creating Ledger transactions
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID: CAAE8C68-A26F-4BED-A626-751A98B57E7E
   :END:
   [2009-10-23 Fri 06:13]
** DEFERRED [[bug:253][#253]] Fix toggle-current-transaction
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   When all transactions have been cleared, the marks should be wiped and then
   ledger-toggle-current-entry called, rather than doing the entry clearing
   itself.
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 130
   :ID: 465231DF-6EF2-4C4F-BF0D-9FED19AB99A3
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:254][#254]] Have ledger.el warn if the ledger version is too old
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 163
   :ID: 5F20A546-046B-4CC6-B1EF-89C5962B55BE
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:255][#255]] Highlight transaction lines based on their status
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   Here is a tweak to ledger-mode that I find useful. It makes uncleared lines
   pink and cleared lines green. C-c C-e to toggle the status.
   :SCRIPT:
(add-hook 'ledger-mode-hook (lambda ()
                             (highlight-lines-matching-regexp "^..\\(..\\)?/..?/..?[ 	]+[^\\*]" (quote hi-pink))
                             (highlight-lines-matching-regexp "^..\\(..\\)?/..?/..?[ 	]+\\*" (quote hi-green))))
   :END:
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 200
   :ID: 1C870658-6460-423C-9199-E46C48074688
   :END:
   [2008-07-13 Sun]
** DEFERRED [[bug:256][#256]] Inserting comments in ledger-mode is inserting leading whitespace
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   Comments in ledger-mode are inserted with whitespace at the beginning of the
   line, which makes ledger.dat unusable.  One has to delete the extra
   whitespace manually afterwards.
   :OUTPUT:
do! ledger bal bank
Error: "ledger.dat", line 341: Line begins with whitespace
Error: "ledger.dat", line 342: Line begins with whitespace
Error: "ledger.dat", line 343: Line begins with whitespace
   :END:
   :PROPERTIES:
   :Submitter: Henry Atting <nsmp_01@online.de>
   :Message: [[message://87y6ukqwyy.fsf@online.de][inserting comments in ledger-mode ]]
   :ID: BEBC59BB-C7FF-4295-9EE5-171354CCEBBC
   :END:
   [2009-04-01 Wed 18:57]
** DEFERRED [[bug:257][#257]] Ledger-context-at-point fails to parse acct-transaction
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   - State "TODO"       [2007-11-07 Wed 04:06] \\
     Levin <zslevin@gmail.com> writes:
     > The following patch fixes problem of the amount with no ',':
     :PATCH:
@@ -648,10 +648,12 @@
        (indent account amount nil commodity comment))
       ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*$"
        (indent account amount nil commodity))
-      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?\\(\\.[0-9]*\\)\\)[ \t]+\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
+      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
        (indent account amount nil commodity comment))
-      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?\\(\\.[0-9]*\\)\\)[ \t]+\\(.*?\\)[ \t]*$"
+      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]+\\(.*?\\)[ \t]*$"
        (indent account amount nil commodity))
+      ("\\(^[ \t]+\\)\\(.*?\\)[ \t]+\\(-?[0-9]+\\(\\.[0-9]*\\)?\\)[ \t]*$"
+       (indent account amount nil))
       ("\\(^[ \t]+\\)\\(.*?\\)[ \t]*;[ \t]*\\(.*?\\)[ \t]*$"
        (indent account comment))
       ("\\(^[ \t]+\\)\\(.*?\\)[ \t]*$"
     :END:
     > BTW, the amount regexp is a bit complex here. Do we need the fraction
     > part of the amount? And it should recognize the ',' in amount.
   Use the following ledger data
   :DATA:
2004/05/01 * Checking balance
  Assets:Bank:Checking        1000.00
  Equity:Opening Balances
   :END:

   With cursor on the beginning of the second line, eval
   `(ledger-context-at-point)`, which returns:
   :OUTPUT:
(acct-transaction account ((indent "  " 31) (account "Assets:Bank:Checking        1000.00" 33)))
   :END:
   It is not correct, since 1000.00 ought to be amount.
 
   ledger-context-at-point also fails to parse amount with ',' in it, such as:
   :DATA:
2004/05/01 * Checking balance
  Assets:Bank:Checking        $1,000.00
  Equity:Opening Balances
   :END:
   :PROPERTIES:
   :Submitter: Levin <zslevin@gmail.com>
   :Version: 2.6
   :Ticket: 6
   :ID: 2558642F-EE17-4DCB-B6DB-50490FB0CF83
   :END:
   [2007-11-07 Wed]
** DEFERRED [[bug:258][#258]] ledger.el should define its own faces
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   This would allow people to describe how they want cleared and uncleared
   payee names to appear.
   :PROPERTIES:
   :Submitter: John Wiegley <johnw@newartisans.com>
   :Version: 2.6.1
   :Milestone: 3.0
   :Ticket: 2
   :ID: 78B2F4A4-DCE5-1B40-9C21-86195584ACF1
   :END:
   [2009-03-01 Sun 01:08]
** DEFERRED [[bug:259][#259]] Look at making ledger's new entry completion behavior cyclic
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: B443E186-4E6F-4FB5-8421-4F703DC9353C
   :END:
   [2009-02-13 Fri 05:17]
** DEFERRED [[bug:260][#260]] Make M-x ledger-sort work on the current region
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: C390F6D0-FA81-4A1B-877A-C6946EA51105
   :END:
   [2009-01-29 Thu 19:36]
** DEFERRED [[bug:261][#261]] Make TAB more magical in ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should do what C-c TAB does, but still cycle.  Or, it should move around.
   Or, if in payee and preceding char is a digit, call ledger xact.
   :PROPERTIES:
   :ID: 2A9F5DDB-4DB6-4E87-A755-392F51CF0C2D
   :END:
   [2009-10-23 Fri 06:13]
** DEFERRED [[bug:262][#262]] Pressing C-c C-c on an entry line should clear it
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: FEE28C4E-B113-4280-85F5-42E2B8EE603B
   :END:
   [2009-01-31 Sat 06:13]
** DEFERRED [[bug:263][#263]] Redesign ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   It should always be talking with Ledger via the REPL.
   :PROPERTIES:
   :ID: BADF02BF-CAA1-4990-B9FF-DA20BA025FE0
   :END:
   [2009-10-23 Fri 06:11]
** DEFERRED [[bug:264][#264]] The Great Renaming still needs to take place in ledger.el
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: 721AC8F7-9189-4151-8611-2BBC0D1E8267
   :END:
   [2009-06-19 Fri 00:49]
** DEFERRED [[bug:265][#265]] Use of ledger.el with various invalid "ledger" binaries (and none)
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 175
   :ID: 8735E6AB-DB0A-4F66-BD81-BBFFEE66A68E
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:266][#266]] Use yasnippet with ledger-mode
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:03]
   :PROPERTIES:
   :ID: 178EC4C8-F87A-40C2-91CE-C5BD9CA50BD3
   :END:
   [2009-10-23 Fri 06:14]
* Features
  :PROPERTIES:
  :CATEGORY: Features
  :END:
** TODO [[bug:225][#225]] Complain about mutually exclusive options (such as -M and -s)
   - State "TODO"       from "DEFERRED"   [2010-06-02 Wed 18:11]
   - State "DEFERRED"   from "TODO"       [2010-01-22 Fri 20:05]
#+begin_src sh
  ledger -M -s reg ^actifs
#+end_src
  Adding the -s option seems to break the -M one (instead of three months,
  there is a single "09-Nov-01 - 10-Jan-01" period).  In short, -s and -M
  can't be combined in ledger reg.
  :PROPERTIES:
  :ID:       3BC282AF-4C48-4D54-A156-C9840A80EFA1
  :Submitter: Gabriel Kerneis <gabriel@kerneis.info>
  :END:
  [2010-01-18 Mon 02:55]
** TODO [[bug:231][#231]] Allow conversion of some but not all commodities
   With -X, you currently can only say "convert everything to one commodity"
   but I'd like to be able to convert some stuff but not everything.
   
   My scenario: I have lived both in Autria (a EUR country) and the UK (which
   has GPB).  So right now I have accounts in EUR and GBP and then I also have
   some random money from travel (USD, TWD, etc) floating around as well as
   some shares.
   
   I'd like to be able to say: convert everything _but_ GBP to EUR (or GBP).
   This is what I'd like to see most of the time... just those two currencies.
   But sometimes I want to convert _everything_ (including GBP) to EUR.
   
   I like the "primary COMM ACCOUNT" syntax you propose in #217 but to achieve
   what I want I think we need an option --convert-primary or so.  Then I
   could say:
#+begin_src sh
    -X EUR,GBP
#+end_src
   to get EUR and GBP, or
#+begin_src sh
    -X EUR --convert-primary
#+end_src
   to get just EUR.
   :PROPERTIES:
   :ID:       83B4A0E5-3CC6-4F5E-9C58-A87F690836C8
   :END:
   [2010-06-08 Tue 16:45]
** TODO [[bug:232][#232]] Support variant behaviors for -V
   The problem is: for a given amount of a commodity, which commodity should
   its value be reported in terms of?

   1. For a transaction, an amount of the commodity might be permanently
      associated with another commodity.  This is a "price value".
   2. For a certain commodity, another commodity may always be the pricing
      commodity.  This is a "commodity value".
   3. For a certain account, a specific commodity may always be used for
      pricing.  This is an "account value".
   4. For a certain report, the user may request valuation using a list of
      candidate commodities.  This is a "report value".
   5. Otherwise, the user may desire simply the most recent valuation
      possible.  This is a "market value".

   So the target commodity might be bound to: a particular amount, a
   commodity, or an account.  If it's not bound during parsing, it may be
   bound during reporting using -X to specify a commodity.  If it's not bound
   at all, then it is valued using the most recent prices available, no matter
   their commodity.

   Then here is the logic:

   1.  If --exchange-only is specified, use those commodities.
   2.  Else if a commodity has been FIXED to the amount, use that.
   3.  Else if a commodity has been FIXED to the account, use that.
   4.  Else if a commodity has been FIXED to the commodity, use that.
   5.  Else if the amount's commodity is itself primary, use that.
   6.  Else if -X is specified, use those commodities.
   7.  Else if the amount has a price/cost, use the price's commodity.
   8.  Else if the account balance contains primary commodities, use
       whichever has the highest absolute value.
   9.  Else if the commodity has a history of association with other
       commodities, use whichever is most frequent.
   10. Else use whichever commodity yields the most recent market value.
   :PROPERTIES:
   :ID:       AA092062-FBA5-4142-B3E4-E67FA9E12C19
   :END:
   [2010-06-07 Mon 08:39]
** TODO [[bug:270][#270]] Add a feature for "object descriptions"
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:35]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   For example:

   def OBJECT NAME
     alias NAME
     commodities NAME[, NAME...]
     report NAME[, NAME...]
     set NAME EXPR
     assert EXPR
   end def

   def commodity GAL
     set fixed_commodity true
     set another_value $100 * 20
   end def

   def account Expenses:Food
     alias Chow
     commodities $, EUR
     report $
   end def
   :PROPERTIES:
   :ID: B4BD2B5F-1F77-449B-80FF-DC7218DA2EFE
   :END:
   [2009-03-02 Mon 20:39]
** TODO [[bug:284][#284]] Greatly improve Ledger's help system
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:05]
   :PROPERTIES:
   :ID: 2E0D3A34-41DF-470C-8A2D-0A66B1DAA6E9
   :END:
   [2009-02-04 Wed 19:57]
** TODO [[bug:286][#286]] Implement readline completion for the REPL
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:31]
   [[file:main.cc::jww%202009%2002%2005%20NYI][NYI]]
   :PROPERTIES:
   :ID: EF3D6703-AD14-48B3-A9EE-481E5FC295AB
   :END:
   [2009-11-03 Tue 13:59]
** TODO [[bug:292][#292]] Make alias names for directives, like convert for C
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:31]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID: BD78C023-BB16-446C-9347-2F1AA16C7C5C
   :END:
   [2009-02-27 Fri 15:35]
** TODO [[bug:293][#293]] Option --bold-if
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:31]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   Which will bold the whole transaction line if it matches the given predicate
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 154
   :ID: 3D04C70F-422D-4CEC-BC4A-B177C76D834A
   :END:
   [2008-04-11 Fri]
** TODO [[bug:299][#299]] The CSV report should optionally generate a "title line"
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:30]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID: 65B7E207-1BCC-4448-881C-1574623346D7
   :END:
   [2009-03-03 Tue 21:49]
** TODO [[bug:333][#333]] Add warning when duplicate meta references are given
   :PROPERTIES:
   :ID:       7B4EFB7D-B815-44DE-83CE-F8F902AC954D
   :Submitter: bugzilla-daemon@mail.johnwiegley.com
   :Message:  [[message://bug-333-1@http.newartisans.com/bugzilla/][{Bug 333} New: Add warning when duplicate meta references are given]]
   :END:
   [2010-06-13 Sun 17:43]
** TODO [#C] [[bug:172][#172]] Merge functionality of the C and P directives
   :PROPERTIES:
   :ID:       B2A5D46F-4CF2-4725-BD1B-8641439CF115
   :END:
   [2010-04-02 Fri 14:11]
** TODO [#C] [[bug:173][#173]] Make the prices report use standard report query terms
  The idea here is that report query filtering is done before the building up
  of commodities prices, so that you can see which commodities are involved
  with which reports:
#+begin_src sh
  ledger prices 'Lebensmittel:Milch'
  ledger prices '%kauf=leche'
#+end_src
  :PROPERTIES:
  :ID:       5229AE44-F390-4E4E-BAC6-674373CC775D
  :Message:  [[message://4B0E7757.1030607@gmail.com][How to type out a sales slip?]]
  :Submitter: Johann Klähn <kljohann@gmail.com>
  :END:
  [2009-12-01 Tue 03:04]
** TODO [#C] [[bug:174][#174]] Make path to getquote script configurable using an option
   :PROPERTIES:
   :ID:       81278A4A-C3EB-4C73-A38D-061598F727F2
   :END:
   [2010-04-13 Tue 01:37]
** TODO [#C] [[bug:177][#177]] lot_price should be able to return if commodity is "fixed rate"
   :PROPERTIES:
   :ID:       EF5442E5-4A83-45A5-98F8-DFEEF6F8AC6D
   :END:
   [2009-11-24 Tue 22:02]
** TODO [#C] [[bug:182][#182]] Port Gnucash support to 3.0
   :PROPERTIES:
   :ID:       024046FE-DAB6-48E0-9F27-B2747180267C
   :Message:  [[message://96abdebf-d2ae-40fa-b555-c2329f91602b@q36g2000prg.googlegroups.com][How to use gnucash with v3]]
   :Submitter: Xavier Shay <xavier-list@rhnh.net>
   :END:
   [2010-05-25 Tue 16:42]
** TODO [#C] [[bug:190][#190]] Optimize finding and creation of annotated commodities
   - State "TODO"       from "STARTED"    [2010-06-02 Wed 17:11]
   Don't use textual names, but lookup based on annotation details
   directly.
   :PROPERTIES:
   :ID:       4DC71FA0-7325-4F88-B145-A87C5489B9A4
   :END:
   [2010-05-23 Sun 17:04]
** TODO [#C] [[bug:217][#217]] Make "primary COMM ACCOUNT" force primary comm for an account
   :PROPERTIES:
   :ID:       C88403DF-F983-45D4-830B-4F0F69B6946D
   :END:
   [2010-05-31 Mon 10:35]
** TODO [#C] [[bug:230][#230]] Make format strings backward compatible with 2.x
   That way, %D would be the same as %(date).
   :PROPERTIES:
   :ID:       C19E4E9B-3593-4424-8F0D-109D79D1B15E
   :END:
   [2010-06-03 Thu 23:22]
** DEFERRED [[bug:179][#179]] Allow specification of times on transactions and postings
   - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 17:08]
   The value expressions to expose this would be:
   | hour   | The hour                              |
   | min    | The minute                            |
   | daymin | Minutes past midnight of that day     |
   | absmin | Minutes since the epoch (for sorting) |
   :PROPERTIES:
   :ID:       C0A606E0-AC51-4D0A-99F7-75C3E5E98F2B
   :END:
   [2010-05-22 Sat 16:46]
** DEFERRED [[bug:269][#269]] Add a "date" term to report queries
   - State "DEFERRED"   from "TODO"       [2009-11-06 Fri 01:55] \\
     This has been coded, but is not being enabled yet until I see that it has some
     value.
   :SCRIPT:
   ledger reg checking show date "june last year"
   :END:
   Write a compliance test to make sure that "june last year" (with --now) and
   "june 2009" do what's expected.  Make ~ be the shortcut key, with parsing
   behavior similar to =.
   :PROPERTIES:
   :ID: BBBD2434-3763-45DB-A8EC-59DD47B3E387
   :END:
   [2009-11-04 Wed 16:27]
** DEFERRED [[bug:271][#271]] Add a {{total}} syntax for lot price specification
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   I had another idea: do you remember I mentioned a problem I had, which that
   some of my trade confirmation slips provide the "adjusted cost base" and not
   the cost-per-share? This makes it a big ugly to enter such postings, even
   with expressions:
   :DATA:
     BrokerAccount    -29.435 WIDGETS {353.51435/29.435 USD} @ 13.02 USD
   :END:
   (I didn't test the above, by the way, that was your suggestion when we
   talked last time.)

   I propose this syntax:
   :DATA:
     BrokerAccount    -29.435 WIDGETS {{353.51435 USD}} @ 13.02 USD
   :END:
   It's a bit similar to the idea of @ vs. @@ where the single char (@) is for
   price, and the double (@@) is for total amount. Using {{ ... }} refers to
   the total cost, while { ... } refers to the cost price (per share).
   :PROPERTIES:
   :Submitter: Martin Blais <blais@furius.ca>
   :Version: 2.6
   :Ticket: 188
   :ID: C9E09993-CC01-41C6-BADC-0A9AA1221419
   :END:
   [2008-04-20 Sun]
** DEFERRED [[bug:273][#273]] Add complete calculation history in Ledger
   - State "DEFERRED"   [2009-02-24 Tue 04:00]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 146
   :ID: B1F0071C-BD7D-4311-8DF2-7868F9CA7A29
   :END:
** DEFERRED [[bug:274][#274]] Add support for command aliases, to allow "canned reports"
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:06]
   :PROPERTIES:
   :ID: ADD3FB96-D19A-47F0-9F0B-1896328D6380
   :END:
   [2009-02-04 Wed 19:57]
** DEFERRED [[bug:278][#278]] Allow reading an encrypted ledger file directly
   - State "DEFERRED"   from "TODO"       [2010-06-12 Sat 14:02]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:33]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:00]
   This would be done using libgpg.
   :PROPERTIES:
   :ID: 58512060-B3DD-438D-9BFE-D64D5DB9439B
   :END:
   [2009-10-23 Fri 06:13]
** DEFERRED [[bug:279][#279]] Annotations should allow for HH:MM:SS
   - State "DEFERRED"   [2009-02-24 Tue 04:02]
   And also datetime should display this if it's there (but not if it's
   midnight).

   To implement this, add a parsing option that if, before the code, there is a
   string fitting HH:MM:SS, then it is taken to be a time value.  This will
   require making the parsing of date_t and datetime_t flexible and adaptive
   (and stream-based).
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 149
   :ID: F7DDD7D6-D219-4645-BB02-33AF74BED44B
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:280][#280]] Check for duplicated transactions
   - State "DEFERRED"   from "TODO"       [2010-06-12 Sat 14:02]
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:32]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:05]
   Either by date/payee/magnitude, or even payee/magnitude if --strict is on.
   :PROPERTIES:
   :ID: 4F58ACC1-498A-41A5-9164-93CD30B3CAC5
   :END:
   [2009-10-23 Fri 06:12]
** DEFERRED [[bug:288][#288]] Integrate Org-mode with Ledger
   - State "DEFERRED"   from "TODO"       [2010-05-08 Sat 03:15]
   If you're on a trip you could accumulate your expense into an Org-table, and
   then either easily export that to your Ledger file later, or maybe even have
   Ledger read such data directly.
   :PROPERTIES:
   :ID:       01B4C4E5-63AE-4915-A39A-AA6E07D9F19F
   :END:
   [2010-04-11 Sun 17:48]
** DEFERRED [[bug:290][#290]] journal_t objects should be copyable
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:23]
   This also has to do with making them serializable.  There should be a way to
   "activate" a journal for the current session, which sets up the
   commodity_pool reference for amount_t.
   :PROPERTIES:
   :ID: 9ECF98A8-8C8C-42D1-B8A0-EB42F49AAED9
   :END:
  
** DEFERRED [[bug:291][#291]] Make a curses or http GUI for Ledger
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:00] \\
     This is waiting for either the new Emacs rewrite, or the Python support code.
   :PROPERTIES:
   :ID: 8716A41C-3570-4193-A95D-9829F4FF8798
   :END:
   [2009-10-23 Fri 06:13]
** DEFERRED [[bug:294][#294]] Performance in forecasting would be weak with a lot of period xacts
   - State "DEFERRED"   [2009-02-24 Tue 04:05]
   What happens to performance with lots of accounts, of commodities?
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 115
   :ID: 68E4C919-14BA-4AB1-A60B-FC176E966B45
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:297][#297]] Support debit/credit register and balance reports
   - State "DEFERRED"   from "TODO"       [2009-11-25 Wed 02:33]
   - Note taken on [2009-11-25 Wed 02:11] \\
     See: http://en.wikipedia.org/wiki/Debits_and_credits#.27T.27_Accounts.
   This would show debit amounts in one column, and credit amounts in a second
   column, rather than conflating positive and negative values in a single
   column.
   :PROPERTIES:
   :ID:       A3A7E04A-036F-498D-8C7D-FCE38DC858BF
   :END:
   [2009-11-25 Wed 02:09]
** DEFERRED [[bug:298][#298]] Support for exceptions to interval_t
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 18:13]
   For example, "monthly except June".
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 147
   :ID: A8AC5063-AB2F-4031-8821-2084B7B6497C
   :END:
   [2008-04-11 Fri]
** DEFERRED [[bug:300][#300]] Warn if a file link points to a missing file
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:24]
   :PROPERTIES:
   :ID: 232CCAA9-77C3-4541-B894-7F0CA9A7747B
   :END:
   [2009-11-02 Mon 15:50]
** DEFERRED [[bug:320][#320]] Implement move constructors for amount_t, balance_t and value_t
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 14:54]
   This implies getting rid of the current reference counting structures too.
   :PROPERTIES:
   :ID:       558FDCF1-2C7A-4D20-94A3-48A62FF84104
   :END:
   [2010-06-08 Tue 19:22]
** DEFERRED [#C] [[bug:233][#233]] Make 'last' a valexpr term of the last posting output
   - State "DEFERRED"   from "TODO"       [2010-06-14 Mon 08:15]
   :PROPERTIES:
   :ID:       7517CE3B-C3B0-460D-806B-31341272DE79
   :END:
   [2010-06-06 Sun 06:42]
* Python
  :PROPERTIES:
  :CATEGORY: Python
  :END:
** DEFERRED [[bug:302][#302]] Add implicit conversion of mask_t to re
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:36]
   [[file:py_value.cc::jww%202009%2011%2002%20Add%20implicit%20conversion%20of%20mask%20objects][py_value.cc]]
   :PROPERTIES:
   :ID: DF00F985-18A8-438D-819C-EC5962EEE925
   :END:
   [2009-11-03 Tue 14:01]
** DEFERRED [[bug:303][#303]] After using python/server.py, it segfaults on exit
   - State "DEFERRED"   from "TODO"       [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       DA30D886-863D-4173-AE3C-369A98F0CD59
   :END:
   [2009-11-21 Sat 02:20]
** DEFERRED [[bug:304][#304]] Allow a Python function to be used to download quotes
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:27]
   - State "TODO"       from "DEFERRED"   [2009-11-05 Thu 04:23]
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: 277ACB9A-9B43-4D3D-8BF9-D64CBCF3674A
   :END:
   [2009-06-24 Wed 17:27]
** DEFERRED [[bug:305][#305]] Allow to_xml methods on all Python-exposed objects
   - State "DEFERRED"   from "TODO"       [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       0EDDE812-2913-4D16-BF2E-9C343F32A958
   :END:
   [2009-11-19 Thu 17:38]
** DEFERRED [[bug:306][#306]] Do a complete review of all the Python bindings
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   Looking for correctness, consistency, and rationality of interfaces.
   :PROPERTIES:
   :ID:       DFC8101B-CB9D-4522-8B93-F7546183BB66
   :END:
   [2009-11-11 Wed 21:38]
** DEFERRED [[bug:307][#307]] Every ledger object should honor the iteration protocol
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   - Note taken on [2009-11-07 Sat 06:20] \\
     The only ones left are balance_t and value_t.
   :PROPERTIES:
   :ID:       4E160265-93EA-42EE-825D-078A2A459BCA
   :END:
   [2009-11-02 Mon 15:50]
** DEFERRED [[bug:308][#308]] Get ledger python to run within the build tree
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :PROPERTIES:
   :ID: 7274224C-3470-4A9F-B56E-A499F39E13C9
   :END:
   [2009-03-09 Mon 20:33]
** DEFERRED [[bug:309][#309]] Have methods for serializing to and from a string
   - State "DEFERRED"   from "TODO"       [2009-11-07 Sat 06:23]
   [2009-11-03 Tue 07:41]
   :PROPERTIES:
   :ID: 9383A1B7-34C8-4B3E-8FA0-B22A92F6B10F
   :END:
   [2009-11-02 Mon 15:50]
** DEFERRED [[bug:310][#310]] Having problems exporting std::pair<T, U *> from Boost.Python
   - State "DEFERRED"   from "TODO"       [2009-11-25 Wed 02:36]
   This is the e-mail I was drafting for the mailing list, in response to
   [[message://770306.78630.qm@web111402.mail.gq1.yahoo.com][Re: {boost} Boost.Python question about converters and make_getter]]:

   Just one quick question:

   I have a Boost.Python method that looks like this:

     .def("__iter__", range<return_value_policy<return_by_value> >
	  (py_pool_commodities_begin, py_pool_commodities_end))

   Where the members of the map are std::pair<string, MyObject *>.  I want the
   pair passed by value, but I need the "second" member to be accessed using
   reference_existing_object.
   :PROPERTIES:
   :ID:       50EA95EE-E17A-444C-84BE-123F080811FA
   :Message:  [[message://0B5E0EBA-E74E-4303-A6FC-3CBA42B7055B@gmail.com][Re: {boost} Boost.Python question about converters and make_getter]]
   :END:
   [2009-11-24 Tue 22:18]
** DEFERRED [[bug:311][#311]] In py_report.cc, export all "global" functions
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   Move as many of these functions as possible into their related class.  For
   example, scrub should go into value_t::scrub.
   :PROPERTIES:
   :ID: 0912FE8A-79BE-4A6A-9B0F-6A73547A9B2C
   :END:
   [2009-11-05 Thu 08:28]
** DEFERRED [[bug:312][#312]] Make sure I'm handling object lifetime correctly for Boost.Python
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   http://wiki.python.org/moin/boost.python/CallPolicy
   :PROPERTIES:
   :ID: D3727E42-6180-44F5-AD0B-651BAA822C8D
   :END:
   [2009-11-03 Tue 08:55]
** DEFERRED [[bug:313][#313]] Standardize the find_account and find_commodity methods
   - State "DEFERRED"   from "TODO"       [2009-11-12 Thu 05:26]
   It should be find_account(STR), find_account(MASK), and
   find_or_create_account(STR).  Some with find_commodity, etc.
   :PROPERTIES:
   :ID: BC6E6475-14C8-4E20-BF4E-0A0FAD36F01D
   :END:
   [2009-11-05 Thu 16:11]
** DEFERRED [[bug:314][#314]] The error output when calling Python is out of order
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   :OUTPUT:
TypeError: No to_python (by-value) converter found for C++ type: ledger::value_t
While evaluating value expression:
  myvalue(23)
  ^^^^^^^^^^^
Error: While calling Python function 'myvalue'
   :END:
   This should be:
   :OUTPUT:
While evaluating value expression:
  myvalue(23)
  ^^^^^^^^^^^
While calling Python function 'myvalue':
Error: TypeError: No to_python (by-value) converter found for C++ type: ledger::value_t
   :END:
   :PROPERTIES:
   :ID: 7CF0160B-A3FF-4BE7-B6D3-788F9556A20F
   :END:
   [2009-01-23 Fri 15:57]
** DEFERRED [[bug:315][#315]] Use Python to create a per-account debit/credit report
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 22:04]
   Is there a way to let ledger output its reports showing the accounts in the
   more conventional way as debit and credit accounts, instead of having a
   positive or negative saldo?
 
   Here is one example:
   :OUTPUT:
Assets:Bank
Tr.#	date		Text			debit		credit		saldo
1	2008-01-01	Mr. Sponsor		500				500
2	2008-01-02	Bill					100		400

Income:Donations
Tr.#	date		Text			debit		credit		saldo
1	2008-01-01	Mr. Sponsor				500		-500

Expenses:Electricity
Tr.#	date		Text			debit		credit		saldo
2	2008-01-02	Bill			100				100
   :END:
   There should be a way of distinguishing between debit accounts, as assets
   and expenses, and credit accounts, as Income and liabilities. It is of
   course possible to processs ledger's output to achieve this, but it would be
   nice if it could be done in ledger directly.
   :PROPERTIES:
   :Submitter: Christopher <christopher.illies@ki.se>
   :Version: 2.6.1
   :ID: 444EFEE1-D873-4FD3-BB07-4E605BCB2BF4
   :END:
   [2008-10-08 Wed 00:58]
** DEFERRED [[bug:316][#316]] Write a Python demo script
   - State "DEFERRED"   from "STARTED"    [2009-11-22 Sun 22:36]
   :PROPERTIES:
   :ID:       9F26072D-C8E1-49CB-BF28-E2D32B170108
   :END:
   [2009-11-19 Thu 17:37]
* Build
  :PROPERTIES:
  :CATEGORY: Build
  :END:
** TODO [[bug:234][#234]] Add some more configure arguments
   - State "TODO"       from "DEFERRED"   [2010-06-12 Sat 05:36]
   - State "DEFERRED"   from "TODO"       [2009-10-31 Sat 03:15]
   ./configure .... with-gmp=...  with-mpfr= ... with-python=...
   :PROPERTIES:
   :ID: 070D3625-FCAE-44B0-B1B7-BFD6BAD4028D
   :END:
   [2009-03-26 Thu 02:09]
** TODO [[bug:328][#328]] Build Ledger with Visual Studio
   1. Some compiler warnings. There are a number of contructs where VS is more
      fussy about than gcc. I have disabled these specific warnings, which I
      think is fine, especially for the ones where there is no direct Unix
      equivalent.
      - Warning: force int to bool, performance penalty. In many places in the
        code, ints and bools are directly compared or used in single
        expressions which apparently can (or could in the past) cause a
        performance degradation as it would require a few more instructions to
        do the comparison with an int. I think it's safe to ignore this
        warning; I've disabled it in the project files.
      - Unused variables. Mostly in catch() blocks, the 'err' variable is
        hardly ever used. Can ignore this too, I think.
      - Mixing of struct and class. In many places, forward declarations
        happen as class while the actual declaration is as struct. Only
        difference is the default visibility; if I change everything to be
        'class' I get errors on accessing private members. I'm not sure if the
        standard prescribes what should happen in this case, I've just changed
        everything to 'struct' and now it compiles fine. This is mostly a
        stylistic issue, I'll leave that to you to decide.
      - str_xxx functions. Those are deprecated in VS because they're
        potentially unsafe; replacements with a _s suffix are provided. Since
        those are not portable I suggest we ignore these warnings; I've
        disabled them in the project properties.
      - Cast from uint_least32_t for SHA1::Result. In 2 or 3 places (in
        utils.cc, filters.cc, utils.h) I had to add a cast to uint* like this:
        #+begin_src c++
        sha.Result((unsigned int*)message_digest);
        #+end_src
        Is this ok? I'm not quite sure why uint_least32_t[] was used here in
        the first place?
   2. Missing preprocessor defines. The code uses PACKAGE_VERSION and VERSION
      precompiler constants. Can you explain where they come from?  (I mean I
      guess they come from the build chain, but where are their values taken
      from?) For now I've manually set them to 'next' in the project
      configuration but I guess they should automatically use the correct one.
   3. Another minor stylistic issue is the mixing of tabs and spaces. The code
      is quite hard to read in some places because the spaces seem to assume
      an indent of 2, but the tab width is set to 4 (by default) on VS. I
      don't know anyone who ever changes it either. So this is really minor
      but it would be nice if all tabs could be replaced with 2 spaces, or
      tabs would be used consistently.
   4. Now we get to the real problems. There are a few places where real
      Unix constructs are used that have no equivalent in Wnidows.
      - In visit_man_page, fork() is used. It looks like this is only for
        showing the man page though. I suggest an #ifdef where the Windows
        version opens a browser with the documentation, considering there is
        no such thing as man on Windows.
      - stream.cc uses pipes and forks for the 'pager' functionality.  Could
        you explain what this does? Is this required on Windows? I've
        commented it out for now.
      - main.cc sets a handler for the SIGPIPE signal which doesn't exist on
        Windows. I've put that in a #ifdef _WIN32 section, seems the
        reasonable thing to do.
   5. Python integration. The py_ files don't seem to have a way to be
      disabled through the preprocessor; I guess the Unix build chain compiles
      them or not based on the ./configure options. I have left them out of
      the project for now. It's been a long time since I embedded Python
      somewhere, I'd have to look into this a bit deeper.
   6. amount.cc uses mpfr_asprintf . I got an error from the linker that the
      implementation of this was not found. I can't find it in my mpfr sources
      either. I've replaced it with gmp_asprintf and now it compiles and links
      fine. I'm not familiar with all of these libraries, is this the same
      function with a different name? Did I screw something up in configuring
      mpfr?
   7. Lastly, I haven't run the tests yet. The program itself compiles and
      runs fine (ledger --help, that is - haven't tried any real
      functionality) but the next step would be for me to test if all
      functionality works as expected. I see a bunch of python and c++ code in
      the test directory; do I need python to run any tests at all or can I
      skip those and focus on the cpp tests first?
   :PROPERTIES:
   :ID:       69F46250-CB1D-40C2-AC4A-39AB4E366310
   :Submitter: Roel Vanhout <roel.vanhout@gmail.com>
   :Message:  [[message://AANLkTilNxUsD8glzKcEWW4fQ56uGF5GlPOmMWA1oPM3_@mail.gmail.com][Building Ledger with VS (was: Re: Help: How do I start?)]]
   :END:
   [2010-06-11 Fri 17:23]
** TODO [[bug:331][#331]] [MacPorts] #25213: ledger-devel Portfile
   SCHEDULED: <2010-06-14 Mon>
   :PROPERTIES:
   :ID:       59444116-2810-4073-BE96-52DA023CC540
   :Submitter: MacPorts <noreply@macports.org>
   :Message:  [[message://063.0b8b1c6b9c8651a8e3a62880f1596b01@macports.org][Re: {MacPorts} #25213: ledger-devel Portfile]]
   :END:
   [2010-06-11 Fri 22:26]
** DEFERRED [[bug:216][#216]] Ledger packages for Debian
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 14:52]
   - Note taken on [2010-05-31 Mon 15:06] \\
     [[message://AANLkTilCFWypqs-A8-X7OMRP-ivli9vwZWlIM3TQwHaW@mail.gmail.com][Re: Ledger for Ubuntu hardy?]]
   - Note taken on [2010-05-31 Mon 15:05] \\
     [[message://1275233562.30458.480.camel@sirius][Re: Ledger for Ubuntu hardy?]]
   :PROPERTIES:
   :ID:       4E07F327-5B75-4804-ACFE-AAB4CE2FA20E
   :URL:      [[https://launchpad.net/~mbudde/%2Barchive/ledger/%2Bpackages][Packages in “Ledger” : Ledger : Michael Budde]]
   :END:
   [2010-05-29 Sat 20:00]
** DEFERRED [[bug:238][#238]] Build .deb, .rpm, .exe (in .zip), and .pkg installs
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 19:16]
   :PROPERTIES:
   :ID: 769BFB8F-F805-4510-ABF2-A933D0EDBE0C
   :END:
   [2009-01-29 Thu 19:40]
** DEFERRED [[bug:240][#240]] Setup virtual machines for every OS Ledger should run on
   - State "DEFERRED"   from "TODO"       [2009-10-25 Sun 19:16]
   :PROPERTIES:
   :ID: C91FEFD0-CF11-41C2-B2D0-B6BED7E142A2
   :END:
   [2009-10-08 Thu 17:12]
* Tests
  :PROPERTIES:
  :CATEGORY: Tests
  :END:
** TODO [[bug:219][#219]] Add a Makefile rule ensuring all options are tested and documented
   - State "TODO"       from "STARTED"    [2010-06-02 Wed 17:12]
   :PROPERTIES:
   :ID:       F44DCE38-1191-4759-8DC7-194B8A5BF8E0
   :END:
   [2010-05-31 Mon 01:14]
** TODO [#C] [[bug:185][#185]] Read through Peter's article, and make sure it all applies             :ATTACH:
   :PROPERTIES:
   :ID:       72FC1715-E53C-4D4D-BF2C-514EB376DD19
   :Attachments: Tutorial%20on%20multiple%20currency%20accounting.pdf
   :END:
   [2009-11-24 Tue 22:04]
** DEFERRED [[bug:187][#187]] Use coverage analysis to determine if everything is being tested
   - State "DEFERRED"   from "TODO"       [2010-06-02 Wed 00:44]
   :PROPERTIES:
   :ID:       13E43A50-FC0C-4C3D-A175-7C6CB147A37C
   :END:
   [2008-08-14 Thu]
** DEFERRED [[bug:318][#318]] New tests to create for Ledger [0/3]
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 21:54]
   - [ ] GarbageTests
	 Feed every one of the distribution's source files back to Ledger, to
         make sure it dies gracefully.
   - [ ] RandomTests
	 Feed random data (probably base64) both as options and input.
   - [ ] ScrambleTests
	 Pass random combinations of options.
   :PROPERTIES:
   :ID: F866DFA5-7350-45D3-BF76-286D68755A2A
   :END:
   [2009-02-27 Fri 16:19]
** DEFERRED [[bug:319][#319]] Use --cache=/dev/null when running the unit tests
   - State "DEFERRED"   from "TODO"       [2009-11-06 Fri 02:08] \\
     I cannot read/write the cache to /dev/null, so I'll have to use a temp file
     that gets cleaned up.
   :PROPERTIES:
   :ID: 957CABA8-FEE1-4609-ABCD-0B285B49F2CE
   :END:
   [2009-11-03 Tue 18:55]
** DEFERRED [[bug:325][#325]] Migrate from CppUnit to the Boost Test FrameWork
   - State "DEFERRED"   from "TODO"       [2010-06-14 Mon 08:17]
   :PROPERTIES:
   :ID:       44B30EE4-6C72-4DDE-8BDA-1E6DE683B796
   :URL:      [[http://www.boost.org/doc/libs/1_43_0/libs/test/doc/html/tutorials/hello-the-testing-world.html][Introduction to using the Unit Test Framework]]
   :END:
   [2010-06-11 Fri 17:10]
* Docs
  :PROPERTIES:
  :CATEGORY: Docs
  :END:
** TODO [[bug:329][#329]] Suggestions for improving the documentation
   - I think it's great that there is such an elaborate manual, but the
     structure is a bit unintuitive to learn from. May I suggest to move the
     'keeping a ledger' section to the beginning, before 'running ledger'. Or
     maybe shrink 'running ledger' to one page with the general explanation,
     and move the details to the back in a 'command line options reference'
     section. I understand that it's hard to combine a tutorial style manual
     and a reference manual in one document; I have the same problem when
     documenting my software. Having tutorial style in the front and reference
     in the back seems to work OK for me, without requiring two document with
     the problems that brings.
   - Some real-world examples of complete commands, as collected from the
     collective of ledger users, would be nice. Maybe this could be put in a
     'tick and tricks' section.
   - In this section, it would be nice if there was a section on Windows that
     explains that the Windows cmd.exe can't show € symbols. That one cost me
     20 minutes to figure out, after which I had to switch to EUR.
   - It would also be nice if this section had a table with the names of
     assests, equity, debts etc. in various languages/locales. At least a part
     of ledger users don't have background in accounting I think, and as for
     myself, despite having taken several accountancy/finance classes I still
     need to look up the terms each time because I don't use them every day. I
     would like to use the English terms but this is not feasible because I
     may need to communicate my numbers with the local tax office, tax
     advisors etc. later on, and they all only know and use the local
     terms.
   - Next step will be for me to document everything that is necessary to
     build ledger: getting and building libraries, getting and building boost,
     setting config options etc. It's rather challenging I image for anyone
     who doesn't do this every day.
   - The biggest issue I've run into is that syntax section isn't quite
     complete.  In the copy I have, this file syntax in section 2.7 lacks the
     $account keyword which is only mentioned deep in the text of section
     3.10.
   - As an addition to the tutorial documentation, it might be helpful to
     solicit user contributed ledger files.  I'd be willing to contribute what
     I'm using internally - I have a fairly complex customer payment
     processing methodology that keeps track of account receivable, and
     collected but undeposited payments.
   :PROPERTIES:
   :ID:       A68C8837-EB85-454B-A731-3B319D898697
   :Submitter: Roel Vanhout <roel.vanhout@gmail.com>
   :Message:  [[message://AANLkTilNxUsD8glzKcEWW4fQ56uGF5GlPOmMWA1oPM3_@mail.gmail.com][Building Ledger with VS (was: Re: Help: How do I start?)]]
   :END:
   [2010-06-11 Fri 17:29]
** TODO [#C] [[bug:169][#169]] Language translations for 3.0
   | Name                    | E-mail                           | Language             |
   |-------------------------+----------------------------------+----------------------|
   | Thierry Daucourt        | thierry.daucourt@free.fr         | French               |
   | Alexis Hildebrandt      | alexis.hildebrandt@surryhill.net | German               |
   | Felipe Magno de Almeida | felipe.m.almeida@gmail.com       | Brazilian Portuguese |
   | Roel Vanhout            | roel.vanhout@gmail.com           | Dutch                |
   :PROPERTIES:
   :ID:       9D19729F-343C-464D-BE88-143C9DDA9394
   :END:
   [2009-11-09 Mon 03:40]
** TODO [#C] [[bug:186][#186]] Rewrite the sample.dat file to be more realistic
   :PROPERTIES:
   :ID:       6E0F0FD6-38A2-4269-870F-41DE8B10D23C
   :END:
   [2009-11-20 Fri 18:31]
** TODO [#C] [[bug:195][#195]] How to declare a statement reconciliation                              :ATTACH:
   :PROPERTIES:
   :ID:       32A4A048-886F-43FC-892E-EC125F372750
   :Attachments: foo.dat
   :END:
   [2009-12-10 Thu 18:05]
** TODO [#C] [[bug:202][#202]] doc/NEWS and xml
   doc/NEWS claims that the xml command was removed but it's still there (at
   least "ledger -f foo.dat xml" works; maybe you meant a different xml
   command?).
   :PROPERTIES:
   :ID:       130C2697-1601-488A-B0D7-2422CF50CB86
   :Message:  [[message://20100322161529.GA7030@jirafa.cyrius.com][doc/NEWS and xml]]
   :Submitter: Martin Michlmayr <tbm@cyrius.com>
   :END:
   [2010-03-26 Fri 22:22]
** WAITING [[bug:170][#170]] Fill out membership form for the Software Conservancy
   - State "WAITING"    from "TODO"       [2010-05-22 Sat 18:47] \\
     I'm waiting for the official form to come from the Conservancy.
   - State "TODO"       from "WAITING"    [2010-05-22 Sat 15:05]
   - State "WAITING"    from "TODO"       [2010-01-22 Fri 20:06] \\
     I'm waiting on the new agreement to be sent.
   :PROPERTIES:
   :ID:       78635C7A-98F2-494F-93A4-7CDA6094E681
   :Message:  [[message://4B240026.5040408@softwarefreedom.org][Re: Offer of membership to the Ledger project into the Software Freedom Conservancy, Inc.]]
   :Submitter: Karen Sandler <karen@softwarefreedom.org>
   :END:
   [2009-12-17 Thu 02:44]
** DEFERRED [[bug:193][#193]] Useful links from the mailing list
   - State "DEFERRED"   from "TODO"       [2010-06-10 Thu 14:52]
   Since I'm new to ledger and accounting, I went through the mailing list
   archives to look for useful examples and questions.  Here is a list of
   threads that I found useful.  Maybe this will save someone the time to look
   through the whole mailing list archive. (John, maybe you can add a link to
   the web site.)

   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/43a25dcafc0f31d7#][Billing]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/312f41276af412ed#][how to show credit card liability when initializing ledger Options]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/980e8f4540fc71a2#][actual date, effective date]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/c8b2ce3206878c15#][debit and credit accounts, & reporting]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/5954cd1801b8256a#][example balance sheet report]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/94136141ff10aab1#][simple ledger data entry question Options]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/515ffdf8edd2bc9d#][mileage]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/baf6312d124b1f0b#][Ledger Invoicing]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/65964a4ad3bfb184#][Pre-Paid Cards]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/31d8a10a6c4f18af#][New metadata/note syntax]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/58c402a82b8dc53a#][HTML Plotting Utility]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/5d789daf21ac7865#][html reporting for ledger]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/5bac3df2a0a3a087#][More metadata goodness]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/34d9a40607384e2a#][stocks]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/81f59f2a3e8ac382#][Opening balance for an income or expense account?]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/e98bee73e279b3af#][New feature today: Fixated commodity prices]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/b64f474414ac4f7e#][reporting scripts]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/0c674c77302391d8#][What is the relative account of Expenses:Tax]]
   - [[http://groups.google.com/group/ledger-cli/browse_thread/thread/fe5919f35b93a6d9#][numbers in commodity name]]
   :PROPERTIES:
   :ID:       5EBF9B2F-CE06-4C15-8B54-BB4E524ADC26
   :Message:  [[message://20100410170831.GA24387@jirafa.cyrius.com][Useful links from the mailing list]]
   :Submitter: Martin Michlmayr <tbm@cyrius.com>
   :END:
   [2010-04-11 Sun 03:55]
** DEFERRED [[bug:241][#241]] Complete the internal documentation, exported using Doxygen
   - State "DEFERRED"   from "TODO"       [2009-06-16 Tue 17:10]
   :PROPERTIES:
   :ID: 986054C6-CD18-4EA1-8F8C-FF02C9842EB0
   :END:
   [2008-08-14 Thu]
** DEFERRED [[bug:242][#242]] Ledger example: building a better "du"					 :ATTACH:
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   Since Ledger does not internally focus on finance, there is no reason why
   it can't be used in any situation where amounts are either kept in certain
   places, or moved from place to place, including:
   
   - tracking time
   - recording data transfers between computers
   - recording scientific data (converting any input to any output)
   - reporting on the layout of your hard drive
   
   To show an example of this, I'm written a Python script called "ledger-du"
   which simply outputs whatever directories you specify as arguments in the
   form of Ledger entries.  There is one entry per file, where the "payee" is
   the file name, the "account" is a colon-separated directory hierarchy, and
   the "date" is the last modified time of the file.
   
   By running this script and sending the output to "/tmp/out.dat", you can
   now perform some very sophisticated queries on your data -- including
   showing you the same kind of information that the venerable "du" itself
   would show.  Except that now you can see the tree hierarchy with the
   "balance" command, and other enhancements to the basic form of "du".
   
   For example, here's a command that shows me where all my C++ source files
   are, subtotaled by the sub-directory that contains them, and sorted by
   total size.  The "equity" account (where all the bytes are balanced) even
   ends up telling me the total size of all C++ files in my queried directory:
   :SCRIPT:
   ledger --format \
     "%D %-.20P\n  %-.52A %12.67t %12.80T\n%/  %-.52A %12.67t %12.80T\n" \
     -f /tmp/out.dat -s -S "-U(t)" register -- \\.cc\$
   :END:
   
   I specified a new format string here (a variation on the default balance
   format) so that I could see account totals each on their own line, since
   some of the account names get very long.
   :PROPERTIES:
   :Version:  2.6
   :Ticket:   169
   :ID:       85DAE1AB-F6D3-4AAC-A4F7-99D146B355E7
   :Message:  message://m2odzwxupz.fsf@newartisans.com
   :Attachments: ledger-du
   :END:
   [2006-03-24 Fri]
** DEFERRED [[bug:243][#243]] Using Ledger as a scientific analysis tool
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 173
   :ID: C653003E-52A8-4D06-9DEB-634B1156B04C
   :END:
** DEFERRED [[bug:244][#244]] Using Ledger to track inventory
   - State "DEFERRED"   from "TODO"       [2009-10-26 Mon 22:06]
   :PROPERTIES:
   :Version: 2.6
   :Ticket: 174
   :ID: F7A6A833-5AC6-4ED0-A5EA-93CD6B97EEBF
   :END:
